5. 기능 요구사항(Functional Requirements)
5.1. [SR-SoC-CNN-001] CNN 동작 설정
항목	설명
요구사항 식별자	SR-SoC-CNN-001
요구사항 제목	CNN 동작 설정
요구사항 설명	CNN SW는 입력 값에 따라 CNN 동작을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. CNN을 설정하는 Test Application을 실행한다.
2. 입력 값을 CNN에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	인식 네트워크 정보
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-011
관련 시스템 요구사항	TR-009
5.2. [SR-SoC-CNN-002] CNN Inference 수행
항목	설명
요구사항 식별자	SR-SoC-CNN-002
요구사항 제목	CNN Inference 수행
요구사항 설명	CNN SW는 입력 값에 따라 Inference 동작을 수행할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. CNN Inference Test Application을 실행한다.
2. CNN Inference 동작을 시작한다.
3. 수행한 Inference 동작 결과가 의도한 결과와 동일 한지 확인한다.
입력 	인식 Data
출력	인식 결과 확인
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-011
관련 시스템 요구사항	TR-009
5.3. [SR-SoC-VDMA_CNN-001] VDMA CNN 설정
항목	설명
요구사항 식별자	SR-SoC-VDMA_CNN-001
요구사항 제목	VDMA CNN 설정
요구사항 설명	VDMA CNN SW는 입력 값에 따라 VDMA CNN을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. VDMA CNN을 설정하는 Test Application을 실행한다.
2. 입력 값을 VDMA CNN에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	Buffer Information, Resolution
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-011, PDE-014
관련 시스템 요구사항	TR-009, TR-015
5.4. [SR-SoC-VDMA_CNN-002] VDMA CNN 동작
항목	설명
요구사항 식별자	SR-SoC-VDMA_CNN-002
요구사항 제목	VDMA CNN 동작 시작
요구사항 설명	VDMA CNN SW는 CNN에서 사용할 영상 Data를 DDR 메모리에 적재할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. VDMA CNN Test Application을 실행한다.
2. DDR 메모리에 Data를 적재하는 동작을 수행한다.
3. DDR에 Data가 정상적으로 적재되었는지 확인한다.
입력 	Buffer Information, Resolution
출력	Video Image
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-011, PDE-014
관련 시스템 요구사항	TR-009, TR-015
5.5. [SR-SoC-VDMA_H264-001] VDMA H264 설정
항목	설명
요구사항 식별자	SR-SoC-VDMA_H264-001
요구사항 제목	VDMA H264 설정
요구사항 설명	VDMA H264 SW는 입력 값에 따라 VDMA H264을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. VDMA H264를 설정하는 Test Application을 실행한다.
2. 입력 값을 VDMA H264에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	Buffer Information, Resolution
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-013, PDE-014
관련 시스템 요구사항	TR-015, TR-019
5.6. [SR-SoC-VDMA_H264-002] VDMA H264 동작
항목	설명
요구사항 식별자	SR-SoC-VDMA_H264-002
요구사항 제목	VDMA_H264 동작 시작
요구사항 설명	VDMA H264 SW는 H264영상 Data를 DDR 메모리에 적재할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. VDMA H264 Test Application을 실행한다.
2. DDR 메모리에 Data를 적재하는 동작을 수행한다.
3. DDR에 Data가 정상적으로 적재되었는지 확인한다.
입력 	Buffer Information, Resolution
출력	Video Image
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-013, PDE-014
관련 시스템 요구사항	TR-015, TR-019
5.7. [SR-SoC-I2C-001] I2C 설정
항목	설명
요구사항 식별자	SR-SoC-I2C-001
요구사항 제목	I2C 설정
요구사항 설명	I2C SW는 입력 값에 따라 I2C를 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. I2C를 설정하는 Test Application을 실행한다.
2. 입력 값을 I2C에 설정한다.
3. 설정에 대한 반환 값을 확인한다. 
입력 	I2C Parameter
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-002, PDE-004, PDE-008
관련 시스템 요구사항	TR-012, TR-014
5.8. [SR-SoC-I2C-002] I2C Master 모드의 Data Read/Write
항목	설명
요구사항 식별자	SR-SoC-I2C-002
요구사항 제목	I2C Master 모드의 Data Read/Write.
요구사항 설명	I2C SW는 Master 모드로 Data를 Read/Write 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. I2C의 Test Application을 실행한다.
2. Test Application I2C를 Master 모드로 설정하고 Slave Device에 Data를 Write 한다.
3. Data가 Write된 Slave Device에서 Data를 Read 한다.
4. Write 한 Data와 Read 한 Data를 비교하여 같은지 확인한다.
입력 	I2C Parameter
출력	I2C Read/Write 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-002, PDE-004, PDE-008
관련 시스템 요구사항	TR-012, TR-014
5.9. [SR-SoC-LIN-001] LIN 설정
항목	설명
요구사항 식별자	SR-SoC-LIN-001
요구사항 제목	LIN 설정
요구사항 설명	LIN SW는 입력 값에 따라 LIN을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. LIN을 설정하는 Test Application을 실행한다.
2. 입력 값을 LIN에 설정한다.
2. 설정에 대한 반환 값을 확인한다.
입력 	LIN Parameter
출력	설정 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-002, PDE-004, PDE-008
관련 시스템 요구사항	TR-012, TR-013
5.10. [SR-SoC-LIN-002] LIN Data의 송/수신
항목	설명
요구사항 식별자	SR-SoC-LIN-002
요구사항 제목	LIN Data의 송/수신
요구사항 설명	LIN SW는 Master 모드로 데이터를 송/수신할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. LIN Test Application을 실행한다.
2. Test Application을 Master 모드로 설정하고 LIN Data를 PC로 송신한다.
3. PC의 LIN Program에 수신되는지 확인한다.
4. PC의 LIN Program에서 Data를 송신한다.
5. Test Application에서 LIN Data가 수신되는지 확인한다.
입력 	LIN Parameter
출력	송/수신 Data
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-002, PDE-004, PDE-008
관련 시스템 요구사항	TR-012, TR-013
5.11. [SR-SoC-PWM-001] PWM 설정
항목	설명
요구사항 식별자	SR-SoC-PWM-001
요구사항 제목	PWM 설정.
요구사항 설명	PWM SW는 입력 값에 따라 PWM을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. PWM을 설정하는 Test Application을 실행한다.
2. 입력 값을 PWM에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	PWM Parameter
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-007, PDE-008
관련 시스템 요구사항	TR-012
5.12. [SR-SoC-PWM-002] PWM 동작
항목	설명
요구사항 식별자	SR-SoC-PWM-002
요구사항 제목	PWM 동작 시작
요구사항 설명	PWM SW는 PWM의 설정에 따라 출력 파형을 Control 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. PWM Test Application을 실행한다.
2. PWM을 설정하고 파형 출력을 시작한다.
3. Oscilloscope로 Output Pin을 측정하여 설정된 파형이 출력 되는지 확인한다.
4. PWM 파형 출력을 중지한다.
5. Oscilloscope로 Output Pin을 측정하여 파형이 멈췄는지 확인한다.
입력 	Duty, Frequency
출력	출력 신호
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-007, PDE-008
관련 시스템 요구사항	TR-012
5.13. [SR-SoC-SPI-001] SPI 설정
항목	설명
요구사항 식별자	SR-SoC-SPI-001
요구사항 제목	SPI 설정
요구사항 설명	SPI SW는 입력 값에 따라 SPI를 설정할 수 있어야 한다..
ASIL	B
요구사항 검증방법	1. SPI를 설정하는 Test Application을 실행한다.
2. 입력 값에 따라 SPI or QSPI 모드 선택과 모드에 맞는 설정을 한다.
3. 설정에 대한 반환 값 확인한다.
입력 	SPI Parameter
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-002, PDE-004, PDE-008
관련 시스템 요구사항	TR-016
5.14. [SR-SoC-SPI-002] SPI Master 모드 Data Read/Write
항목	설명
요구사항 식별자	SR-SoC-SPI-002
요구사항 제목	SPI Master 모드 Data Read/Write
요구사항 설명	SPI SW는 Master 모드로 데이터를 Read/Write할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. SPI의 Test Application을 실행한다.
2. SPI를 Single SPI Master 모드로 설정하고 Destination Address에 Data를 Write한다.
3. SPI를 Single SPI Master 모드로 설정하고 Destination Address에서 Data를 Read한다.
4. Write 했던 Data와 Read 한 Data가 동일한지 확인한다
입력 	SPI Parameter
출력	Data Read/Write 결과 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-002, PDE-004, PDE-008
관련 시스템 요구사항	TR-016
5.15. [SR-SoC-SF-001] SF 초기화
항목	설명
요구사항 식별자	SR-SoC-SF-001
요구사항 제목	SF 초기화
요구사항 설명	SF SW는 입력 값에 따라 SPI와 Serial Flash를 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. SF를 초기화 하는 Test Application을 실행한다.
2. 초기화에 대한 SF 결과값을 확인한다.
입력 	N/A
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-016
5.16. [SR-SoC-SF-002] SF Data Read/Write
항목	설명
요구사항 식별자	SR-SoC-SF-002
요구사항 제목	SF Data Read/Write
요구사항 설명	SF SW는 SPI로 Serial Flash에 데이터를 Read/Write 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. SF Test Application을 실행한다.
2. Serial Flash의 Offset에 Data를 Write 한다.
3. 같은 Offset에서 Data를 Read를 한다.
4. Write 했던 Data와 Read 한 Data가 동일한지 확인한다.
입력 	Address, Data, Size
출력	Data Read/Write에 대한 SF Status
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-016
5.17. [SR-SoC-SF-003] SF Data Erase
항목	설명
요구사항 식별자	SR-SoC-SF-003
요구사항 제목	SF Data Erase
요구사항 설명	SF SW는 Serial Flash의 데이터를 삭제할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. Serial Flash 메모리의 데이터를 삭제하는 Test Application을 실행한다.
2. Serial Flash에 Address와 Erase Command를 전송한다.
3. 삭제된 영역을 Read 하여 Data가 0xFF인지 확인한다.
입력 	Address, Size
출력	Erase 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-016
5.18. [SR-SoC-ADC-001] ADC 초기화
항목	설명
요구사항 식별자	SR-SoC-ADC-001
요구사항 제목	ADC 초기화
요구사항 설명	ADC SW는 입력 값에 따라 ADC를 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. ADC를 초기화하는 Test Application을 실행한다.
2. 초기화에 대한 ADC 결과값을 확인한다.
입력 	N/A
출력	초기화 결과 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-007
관련 시스템 요구사항	TR-012
5.19. [SR-SoC-ADC-002] ADC Data Read
항목	설명
요구사항 식별자	SR-SoC-ADC-002
요구사항 제목	ADC Data Read
요구사항 설명	ADC SW는 ADC 장치로부터 Data를 Read할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. ADC Test Application을 실행한다.
2. ADC에서 Data를 Read 한다.
3. Read 한 Data를 확인한다.
입력	N/A
출력	ADC Data
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-007
관련 시스템 요구사항	TR-012
5.20. [SR-SoC-CAN-001] CAN 설정
항목	설명
요구사항 식별자	SR-SoC-CAN-001
요구사항 제목	CAN 설정
요구사항 설명	CAN SW는 입력 값에 따라 CAN을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. CAN을 설정하는 Test Application을 실행한다.
2. 입력 값을 CAN에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	CAN Parameter
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-013, TR-014
5.21. [SR-SoC-CAN-002] CAN Data 송/수신
항목	설명
요구사항 식별자	SR-SoC-CAN-002
요구사항 제목	CAN Data 송/수신
요구사항 설명	CAN SW는 Data를 송/수신할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. CAN Test Application을 실행한다.
2. Test Application에서 외부 CAN 장비로 CAN Data를 송신한다.
3. 외부 CAN 장비에서 CAN Data가 수신되는지 확인한다
4. 외부 CAN 장비에서 Test Application으로 CAN Data를 송신한다.
5. Test Application에서 CAN Data가 수신되는지 확인한다.
입력 	CAN 송/수신 Parameter
출력	CAN Data
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-013, TR-014
5.22. [SR-SoC-TS-001] Read TS Data
항목	설명
요구사항 식별자	SR-SoC-TS-001
요구사항 제목	Read TS Data
요구사항 설명	TS SW는 Time Stamp Data를 읽어올 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. TS Test Application을 실행한다.
2. Time Stamp 값을 읽어온다.
2. 읽어온 Time Stamp 값을 확인한다.
입력 	N/A
출력	Time Stamp
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-007, PDE-008
관련 시스템 요구사항	TR-010
5.23. [SR-SoC-SYS-001] PLL 설정
항목	설명
요구사항 식별자	SR-SoC-SYS-001
요구사항 제목	PLL 설정
요구사항 설명	SYS SW는 입력 값에 따라 PLL을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. SYS Test Application을 실행 한다.
2. PLL 값을 SYS에 설정한다.
2. 설정에 대한 반환 값을 확인한다.
입력 	PLL Ratio
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-003
관련 시스템 요구사항	TR-010
5.24. [SR-SoC-SYS-002] CMA Buffer 설정
항목	설명
요구사항 식별자	SR-SoC-SYS-002
요구사항 제목	CMA 버퍼 설정
요구사항 설명	SYS SW는 물리적으로 연속된 Memory를 할당할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. SYS Test Application을 실행한다.
2. CMA Buffer를 할당한다.
3. DMA를 이용하여 할당된 Buffer Memory A에서 Memory B로 Data를 복사한다.
4. Memory Copy를 수행한 결과값을 확인한다.
입력 	Address Size
출력	결과에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-003
관련 시스템 요구사항	TR-010
5.25. [SR-SoC-SYS-003] System Reset
항목	설명
요구사항 식별자	SR-SoC-SYS-003
요구사항 제목	System Reset
요구사항 설명	System Reset을 Release를 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. SYS Test Application을 수행한다.
2. System Reset의 Release를 실행한다.
3. Release된 결과를 Register로 확인한다.
입력 	N/A
출력	N/A
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-003
관련 시스템 요구사항	TR-010
5.26. [SR-SoC-NCLD-001] 압축 이미지 로딩
항목	설명
요구사항 식별자	SR-SoC-NCLD-001
요구사항 제목	압축 이미지 로딩
요구사항 설명	NCLD SW는 저장 장치에서 압축 이미지를 읽어 File System에 Load할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. NCLD Test Application을 실행한다.
2. 압축 Image를 저장 장치에 저장한다.
3. Test Application은 저장 장치에서 압축 Image를 읽어와 File System에 Load 한다.
4. File System에 Load된 Data를 확인한다.
입력 	압축된 Image
출력	압축 해제된 Data
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-001
관련 시스템 요구사항	TR-010, TR-012
5.27. [SR-SoC-DMA-001] DMA Data 전송
항목	설명
요구사항 식별자	SR-SoC-DMA-001
요구사항 제목	DMA Data 전송
요구사항 설명	DMA SW는 DMA로 Data를 전송할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. DMA Test Application을 실행한다.
2. DMA를 이용하여 Source Memory에 있는 Data를 Destination Memory로 Data를 복사합니다.
3. Source Memory의 Data와 Destination Memory의 Data를 비교하여 동일한지 확인한다.
입력 	DMA Parameter
출력	결과에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-012
5.28. [SR-SoC-H264ENC-001] H264 Encoder 설정
항목	설명
요구사항 식별자	SR-SoC-H264ENC-001
요구사항 제목	H264 Encoder 설정
요구사항 설명	H264ENC SW는 입력 값에 따라 H264ENC 동작을 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. H264ENC를 설정하는 Test Application을 실행한다.
2. 입력 값을 H264ENC에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	Encoder Parameter
출력	설정에 대한 반환 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-013
관련 시스템 요구사항	TR-019
5.29. [SR-SoC-H264ENC-002] H264 Encoder 동작
항목	설명
요구사항 식별자	SR-SoC-H264ENC-002
요구사항 제목	H264 Encoder 동작
요구사항 설명	H264ENC SW는 입력 값에 따라 H264 Encoding을 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. H264ENC Test Application을 실행한다.
2. Data를 H264로 Encoding 한다.
3. Encoding된 결과값을 PC Player로 확인한다.
입력 	영상 입력(YUV420)
출력	H.264 NAL Data
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-013
관련 시스템 요구사항	TR-019
5.30. [SR-SoC-MMC-001] MMC 초기화
항목	설명
요구사항 식별자	SR-SoC-MMC-001
요구사항 제목	MMC 초기화
요구사항 설명	MMC SW는 입력 값에 따라 MMC를 초기화할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. MMC를 초기화하는 Test Application을 실행한다.
2. 초기화에 대한 MMC 상태 값을 확인한다.
입력 	N/A
출력	MMC 상태 값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-012
관련 시스템 요구사항	TR-017
5.31. [SR-SoC-MMC-002] MMC Data Read/Write
항목	설명
요구사항 식별자	SR-SoC-MMC-002
요구사항 제목	MMC Data Read/Write
요구사항 설명	MMC에 Data를 Read/Write할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. MMC Test Application을 실행한다.
2. 입력된 Address에 Data를 Write 한다.
3. MMC에서 Data를 Read 하여 Write 했던 Data와 동일한지 확인한다.
4. 반환된 결과값을 확인한다.
입력 	Address, Data Size
출력	Data Read/Write에 대한 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-012
관련 시스템 요구사항	TR-017
5.32. [SR-SoC-INI-001] Configuration Load
항목	설명
요구사항 식별자	SR-SoC-INI-001
요구사항 제목	Configuration Load
요구사항 설명	File System에 저장된 설정 파일을 읽을 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. INI Test Application을 실행한다.
2. File System에서 설정 파일을 읽어 온다.
3. 읽어온 Configuration Data를 확인한다.
4. 확인된 결과값을 반환한다.
입력 	Configuration File
출력	반환된 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-001
관련 시스템 요구사항	TR-010
5.33. [SR-SoC-OSAL-001] Create Message Queue
항목	설명
요구사항 식별자	SR-SoC-OSAL-001
요구사항 제목	Create Message Queue
요구사항 설명	OSAL SW는 입력 값에 따라 Message Queue를 만들 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. OSAL Test Application을 실행한다.
2. Message Queue를 Creation 한다.
3. Creation 한 결과에 대한 반환 값을 확인한다.
입력 	OSAL Parameter
출력	반환된 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-001
관련 시스템 요구사항	TR-010
5.34. [SR-SoC-OSAL-002] Create Thread
항목	설명
요구사항 식별자	SR-SoC-OSAL-002
요구사항 제목	Create Thread
요구사항 설명	OSAL SW는 입력 값에 따라 Thread를 만들 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. OSAL Test Application을 실행한다.
2. Thread를 Creation 한다.
3. Creation 한 결과에 대한 반환 값을 확인한다.
입력 	OSAL Parameter
출력	반환된 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-001
관련 시스템 요구사항	TR-010
5.35. [SR-SoC-GRAPHICS-001] 포멧 변환
항목	설명
요구사항 식별자	SR-SoC-GRAPHICS-001
요구사항 제목	포멧 변환
요구사항 설명	GRAPHICS SW는 Data의 포맷을 변환할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. GRAPHICS Test Application을 실행한다.
2. YUV Data를 RGB Data로 변환한다.
3. Data 변환의 결과를 확인한다.
입력 	Graphic Parameter
출력	Data Convert 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-009
관련 시스템 요구사항	TR-010
5.36. [SR-SoC-GRAPHICS-002] 해상도 변환
항목	설명
요구사항 식별자	SR-SoC-GRAPHICS-002
요구사항 제목	해상도 변환
요구사항 설명	GRAPHICS SW는 Data의 해상도를 변환할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. GRAPHICS Test Application을 실행한다.
2. Data의 해상도를 1920x1080에서 1280x720으로 변환한다.
3. Data 변환의 결과를 확인한다.
입력 	Graphic Parameter
출력	Data Convert 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-009
관련 시스템 요구사항	TR-010
5.37. [SR-SoC-GRAPHICS-003] Rotation
항목	설명
요구사항 식별자	SR-SoC-GRAPHICS-003
요구사항 제목	Rotation
요구사항 설명	GRAPHICS SW는 Data를 Rotation을 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. GRAPHICS Test Application을 실행한다.
2. Data를 90도 Rotation 한다.
3. Data의 변환 결과를 확인한다.
입력 	Graphic Parameter
출력	Data Convert 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-009
관련 시스템 요구사항	TR-010
5.38. [SR-SoC-GRAPHICS-004] Overlay Mix
항목	설명
요구사항 식별자	SR-SoC-GRAPHICS-004
요구사항 제목	Overlay Mix
요구사항 설명	GRAPHICS SW는 Data에 Overlay Mix를 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. GRAPHICS Test Application을 실행한다.
2. Data에 Overlay Mix를 실행한다.
3. Data의 변환 결과를 확인한다.
입력 	Graphic Parameter
출력	Data Convert 결과값
중요도	상
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-009
관련 시스템 요구사항	TR-010
5.39. [SR-SoC-UART-001] UART 설정
항목	설명
요구사항 식별자	SR-SoC-UART-001
요구사항 제목	UART 설정
요구사항 설명	UART SW는 입력 값에 따라 UART를 설정할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. UART를 설정하는 Test Application을 실행한다.
2. 입력 값을 UART에 설정한다.
3. 설정에 대한 반환 값을 확인한다.
입력 	UART Parameter
출력	설정에 대한 반환 값
중요도	하
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-018
5.40. [SR-SoC-UART-002] UART Data 송/수신
항목	설명
요구사항 식별자	SR-SoC-UART-002
요구사항 제목	UART Data 송/수신
요구사항 설명	UART SW는 UART Data를 송/수신 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. UART Test Application을 실행한다.
2. Test Application에서 Serial Terminal로 Data를 송신한다. 
3. Serial Terminal에서 송신된 Data를 확인한다.
4. Serial Terminal에서 Test Application으로 Data를 송신한다.
5. Test Application에서 Data를 수신하여 확인한다.
입력 	UART Parameter
출력	UART Data
중요도	하
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-008
관련 시스템 요구사항	TR-018
5.41. [SR-SoC-BUFF-001] Data Buffer의 생성과 제어
항목	설명
요구사항 식별자	SR-SoC-BUFF-001
요구사항 제목	Data Buffer의 생성과 제어
요구사항 설명	Data Buffer를 생성하고 제어를 할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. Buffer를 생성하고 제어하는 Test Application을 실행한다.
2. Flipflop Buffer를 생성한다.
3. Buffer에 Data를 Write 한다.
4. Buffer의 Data를 Read 하여 Write 한 Data와 비교하여 Data의 Write/Read가 정상 동작하는지 확인한다.
5. Circular Buffer를 생성한다.
6. Enqueue를 수행한다.
7. Dequeue를 하여  Data가 정상적으로 읽히는지 확인한다.
입력 	Buffer Parameter
출력	Success or Failure
중요도	하
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-001
관련 시스템 요구사항	TR-010
5.42. [SR-SoC-NCLDH-001] NC Loader의 File 제어
항목	설명
요구사항 식별자	SR-SoC-NCLDH-001
요구사항 제목	NC Loader의 File 제어
요구사항 설명	NC Loader의 File을 제어 할 수 있다.
ASIL	B
요구사항 검증방법	1. NC Loader Application을 실행한다.
2. File Open을 실행한다. 
3. File Open에 대한 결과를 확인한다.
입력 	File Path
출력	File Pointer
중요도	하
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-001
관련 시스템 요구사항	TR-010, TR-012
5.43. [SR-SoC-PVT-001] PVT 센서의 제어
항목	설명
요구사항 식별자	SR-SoC-PVT-001
요구사항 제목	PVT 센서의 제어
요구사항 설명	Voltage 및 Temperature 센서에서 값을 읽어와 사용자에게 보정된 값을 제공할 수 있어야 한다.
ASIL	B
요구사항 검증방법	1. PVT Test Application을 실행한다.
2. Voltage 및 Temperature 센서의 값이 정상적으로 읽히는지 확인한다.
3. 읽어온 값을 Calibration 한다. 
4. 보정된 결과값을 확인한다.
입력 	File Path
출력	File Pointer
중요도	하
요구사항 재사용	신규
관련 시스템 엘리먼트	PDE-004, PDE-007, PDE-008
관련 시스템 요구사항	TR-012

6. 기능안전 요구사항(Functional Safety Requirement)
6.1. [SSR-SoC-NPUM-001] NPU 설정
항목	설명
요구사항 식별자	SSR-SoC-NPUM-001
요구사항 제목	NPU 설정
Variants	ALL
요구사항 설명	NPUM SW는 NPU가 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. NPU Test Application을 실행한다.
2. NPU의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-008
관련 시스템 엘리먼트	PDE-001
관련 TSC	TSC-008
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.2. [SSR-SoC-NPUM-002] NPU 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-NPUM-002
요구사항 제목	NPU 오류 검출
Variants	ALL
요구사항 설명	NPUM SW는 NPU에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. NPUM Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-008
관련 시스템 엘리먼트	PDE-001
관련 TSC	TSC-008
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.3. [SSR-SoC-WDT-001] CPU Monitoring 설정
항목	설명
요구사항 식별자	SSR-SoC-WDT-001
요구사항 제목	CPU Monitoring 설정
Variants	ALL
요구사항 설명	WDT SW는 Refresh 주기를 입력으로 받아 CPU가 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. WDT Test Application을 실행한다.
2. WDT의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-013
관련 시스템 엘리먼트	PDE-001, PDE-004
관련 TSC	TSC-012
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.4. [SSR-SoC-WDT-002] CPU Monitoring 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-WDT-002
요구사항 제목	CPU Monitoring 오류 검출
Variants	ALL
요구사항 설명	WDT SW는 지정된 Refresh 주기 이내에 Refresh 되지 않는 상태를 검출하여 SE에 전달하여야 한다.
요구사항 검증방법	1. WDT Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. Refresh Count를 멈춘다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-013
관련 시스템 엘리먼트	PDE-001, PDE-004
관련 TSC	TSC-012
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.5. [SSR-SoC-STM-001] Safety Mechanism 설정
항목	설명
요구사항 식별자	SSR-SoC-STM-001
요구사항 제목	Safety Mechanism 설정
Variants	ALL
요구사항 설명	Safety Mechanism SW는 기능 안전 설정을 정상적으로 할 수 있어야 한다.
요구사항 검증방법	1. Safety Mechanism Test Application을 실행한다.
2. Safety Mechanism의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-022
관련 시스템 엘리먼트	PDE-001
관련 TSC	TSC-003
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.6. [SSR-SoC-STM-002] Safety Mechanism 동작 확인
항목	설명
요구사항 식별자	SSR-SoC-STM-002
요구사항 제목	Safety Mechanism 동작 확인
Variants	ALL
요구사항 설명	Safety Mechanism SW은 정상 적으로 동작하는지 확인할 수 있어야 한다.
요구사항 검증방법	1. Safety Mechanism Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-022
관련 시스템 엘리먼트	PDE-001
관련 TSC	TSC-003
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.7. [SSR-SoC-SE-001] SE 설정
항목	설명
요구사항 식별자	SSR-SoC-SE-001
요구사항 제목	Safety Engine 설정
Variants	ALL
요구사항 설명	SE SW는 Fault 발생 시 Fault를 전달받아 외부로 Fault 신호를 전달할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. SE Test Application을 실행한다.
2. SE의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-010
관련 시스템 엘리먼트	PDE-004, PDE-005
관련 TSC	TSC-016
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.8. [SSR-SoC-SE-002] Check Fault Signal
항목	설명
요구사항 식별자	SSR-SoC-SE-002
요구사항 제목	Check Fault Signal
Variants	ALL
요구사항 설명	SE SW는 Fault를 감지 하면 Fault 신호를 외부로 전달하여야 한다.
요구사항 검증방법	1. SE Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에서 Fault를 전달받아 외부로 Fault 신호를 전달하는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-010
관련 시스템 엘리먼트	PDE-004, PDE-005
관련 TSC	TSC-016
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.9. [SSR-SoC-CC-001] Communication Control 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-CC-001
요구사항 제목	Communication Control 오류 검출
Variants	ALL
요구사항 설명	CC SW는 Communication Control에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. CC Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-025
관련 시스템 엘리먼트	PDE-005, PDE-008, PDE-012
관련 TSC	TSC-006
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.10. [SSR-SoC-CM-001] Clock Monitoring 설정
항목	설명
요구사항 식별자	SSR-SoC-CM-001
요구사항 제목	Clock Monitoring 설정
Variants	ALL
요구사항 설명	CM SW는 Clock Monitoring이 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. CM Test Application을 실행한다.
2. CM의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-011
관련 시스템 엘리먼트	PDE-001, PDE-003, PDE-005
관련 TSC	TSC-010
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.11. [SSR-SoC-CM-002] Clock Monitoring 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-CM-002
요구사항 제목	Clock Monitoring 오류 검춣 
Variants	ALL
요구사항 설명	CM SW는 Clock Monitoring에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. CM Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-011
관련 시스템 엘리먼트	PDE-001, PDE-003, PDE-005
관련 TSC	TSC-010
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.12. [SSR-SoC-IFRB-001] Read Back 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-IFRB-001
요구사항 제목	Read Back 오류 검출
Variants	ALL
요구사항 설명	IFRB SW는 Read Back 동작에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. IFRB Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-008, TSR-021
관련 시스템 엘리먼트	PDE-001, PDE-002, PDE-004, PDE-005, PDE-008
관련 TSC	TSC-002, TSC-008
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.13. [SSR-SoC-IFTO-001] Time Out 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-IFTO-001
요구사항 제목	Time Out 오류 검출
Variants	ALL
요구사항 설명	IFTO SW는 Time Out 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. IFTO Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-002
관련 시스템 엘리먼트	PDE-001, PDE-004, PDE-005, PDE-008, PDE-012
관련 TSC	TSC-002
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.14. [SSR-SoC-MI-001] Memory Integrity Check 설정
항목	설명
요구사항 식별자	SSR-SoC-MI-001
요구사항 제목	Memory Intergrity Check 설정
Variants	ALL
요구사항 설명	MI SW는 Memory Integrity Check가 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. MI Test Application을 실행한다.
2. MI의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-003
관련 시스템 엘리먼트	PDE-001, PDE-005, PDE-006
관련 TSC	TSC-007
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.15. [SSR-SoC-MI-002] Memory Integrity Check 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-MI-002
요구사항 제목	Memory Integrity Check 오류 검출
Variants	ALL
요구사항 설명	MI SW는 Memory Integrity Check에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. MI Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-003
관련 시스템 엘리먼트	PDE-001, PDE-005, PDE-006
관련 TSC	TSC-007
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.16. [SSR-SoC-RDT-001] RDT 설정
항목	설명
요구사항 식별자	SSR-SoC-RDT-001
요구사항 제목	RDT 설정
Variants	ALL
요구사항 설명	RDT SW는 RDT가 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. RDT Test Application을 실행한다.
2. RDT의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-014
관련 시스템 엘리먼트	PDE-001, PDE-003, PDE-005
관련 TSC	TSC-013
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.17. [SSR-SoC-RDT-002] RDT 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-RDT-002
요구사항 제목	RDT 오류 검출
Variants	ALL
요구사항 설명	RDT SW는 RDT에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. RDT Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-014
관련 시스템 엘리먼트	PDE-001, PDE-003, PDE-005
관련 TSC	TSC-013
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.18. [SSR-SoC-VM-001] Voltage Monitoring 설정
항목	설명
요구사항 식별자	SSR-SoC-VM-001
요구사항 제목	Voltage Monitoring 설정
Variants	ALL
요구사항 설명	VM SW는 Voltage Monitoring이 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. VM Test Application을 실행한다.
2. VM의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-019
관련 시스템 엘리먼트	PDE-001, PDE-005, PDE-007
관련 TSC	TSC-014
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.19. [SSR-SoC-VM-002] Voltage Monitoring 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-VM-002
요구사항 제목	VM 오류 검출
Variants	ALL
요구사항 설명	VM SW는 Voltage Monitoring에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. VM Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-019
관련 시스템 엘리먼트	PDE-001, PDE-005, PDE-007
관련 TSC	TSC-014
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.20. [SSR-SoC-TM-001] Temperature Monitoring 설정
항목	설명
요구사항 식별자	SSR-SoC-TM-001
요구사항 제목	Temperature Monitoring 설정
Variants	ALL
요구사항 설명	TM SW는 Temperature Monitoring이 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. TM Test Application을 실행한다.
2. TM의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-017
관련 시스템 엘리먼트	PDE-001, PDE-005, PDE-007
관련 TSC	TSC-014
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.21. [SSR-SoC-TM-002] Temperature Monitoring 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-TM-002
요구사항 제목	TM 오류 검출
Variants	ALL
요구사항 설명	TM SW는 Temperature Monitoring에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. TM Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-017
관련 시스템 엘리먼트	PDE-001, PDE-005, PDE-007
관련 TSC	TSC-014
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.22. [SSR-SoC-FM-001] Fault Monitoring 설정
항목	설명
요구사항 식별자	SSR-SoC-FM-001
요구사항 제목	Fault Monitoring 설정
Variants	ALL
요구사항 설명	FM SW는 Fault Monitoring이 정상 동작되고 있는지를 검사할 수 있는 상태로 설정하여야 한다.
요구사항 검증방법	1. FM Test Application을 실행한다.
2. FM의 설정을 수행한다.
3. 설정에 대한 반환 값을 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-010
관련 시스템 엘리먼트	PDE-004, PDE-005
관련 TSC	TSC-016
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.23. [SSR-SoC-FM-002] Fault Monitoring 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-FM-002
요구사항 제목	TM 오류 검출
Variants	ALL
요구사항 설명	FM SW는 Fault Monitoring에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. FM Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-010
관련 시스템 엘리먼트	PDE-004, PDE-005
관련 TSC	TSC-016
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.24. [SSR-SoC-OIC-001] OIC CPU 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-OIC-001
요구사항 제목	OIC CPU 오류 검출
Variants	ALL
요구사항 설명	OIC SW는 OIC CPU 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. OIC Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. CPU에 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-013, TSR-024
관련 시스템 엘리먼트	PDE-001, PDE-002, PDE-005
관련 TSC	TSC-009, TSC-012
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.25. [SSR-SoC-OIC-002] OIC CNN 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-OIC-002
요구사항 제목	OIC CNN 오류 검출
Variants	ALL
요구사항 설명	OIC SW는 OIC CNN 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. OIC Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. CNN에 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-003, TSR-024
관련 시스템 엘리먼트	PDE-002, PDE-005, PDE-011
관련 TSC	TSC-007, TSC-009
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.26. [SSR-SoC-OIC-003] OIC H264 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-OIC-003
요구사항 제목	OIC H264 오류 검출
Variants	ALL
요구사항 설명	OIC SW는 OIC H264 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. OIC Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. H264에 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-005, TSR-024
관련 시스템 엘리먼트	PDE-002, PDE-005, PDE-013
관련 TSC	TSC-005, TSC-009
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.27. [SSR-SoC-OIC-004] OIC DDR 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-OIC-004
요구사항 제목	OIC DDR 오류 검출
Variants	ALL
요구사항 설명	OIC SW는 OIC DDR 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. OIC Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. DDR에 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-005, TSR-024
관련 시스템 엘리먼트	PDE-002, PDE-005, PDE-014
관련 TSC	TSC-005, TSC-009
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed
6.28. [SSR-SoC-H264SM-001] H264 Encoder Monitoring 오류 검출
항목	설명
요구사항 식별자	SSR-SoC-H264SM-001
요구사항 제목	H264 Encoder Monitoring 오류 검출
Variants	ALL
요구사항 설명	H264SM SW는 H264SM에서 오류가 발생하면 오류 상태를 SE에 전달하여야 한다.
요구사항 검증방법	1. H264SM Test Application을 실행한다.
2. 오류 없이 Test Application이 실행되는 것을 확인한다.
3. 오류가 발생 되도록 Fault Injection을 실행한다.
4. Fault가 발생하면 SE에 Fault가 전달되었는지 확인한다.
FHTI	66ms
ASIL	ASIL B
관련 요구사항	TSR-003
관련 시스템 엘리먼트	PDE-005, PDE-013
관련 TSC	TSC-007
우선순위	상
요구사항 근거	시스템 요구 사항 명세서, 시스템 설계서
요구사항 재사용	신규
요구사항 상태	Reviewed

7. 성능 요구사항(Performance Requirements)
7.1. [SNR-SoC-SDK-001] Boot UP Time
항목	설명
요구사항 식별자	SNR-SoC-SDK-001
요구사항 제목	Boot UP Time
요구사항 설명	Apache5 SW는 Power-On이 된 이후 영상의 첫 Vsync가 출력 될 때까지의 시간이 3초 이내여야 한다.
요구사항 검증방법	1. Image 센서의 영상이 출력 되는 기능이 적용된 Camera Application을 실행한다.
2. 영상 출력의 Power-On Reset의 상승 Edge부터 첫 영상 출력까지의 시간을 측정한다.
입력	SW Code (릴리즈 버전)
출력	Map파일
중요도	하
요구사항 재사용	신규
관련 시스템 요구사항	TR-010
8. 자원 요구사항(Resource Requirements)
8.1. [SNR-SoC-SDK-002] Memory Usage
항목	설명
요구사항 식별자	SNR-SoC-SDK-002
요구사항 제목	Memory Usage
요구사항 설명	SDK SW의 메모리 사용량은 전체 메모리의 80% 이하여야 한다.
요구사항 검증방법	1. 빌드하여 생성된 Map 파일을 준비한다.
2. 생성된 Map 파일의 Code, RO Data, RW Data와 ZI Data 영역의 크기를 확인한다.
3. SRAM 영역의 크기를 계산한다.
4. 메모리 사용량이 SRAM 용량의 80% 이하임을 확인한다.
입력	SW Code (릴리즈 버전)
출력	Map파일
중요도	하
요구사항 재사용	신규
관련 시스템 요구사항	TR-010
8.2. [SNR-SoC-SDK-003] CPU Usage
항목	설명
요구사항 식별자	SNR-SoC-SDK-003
요구사항 제목	CPU Usage
요구사항 설명	SDK이 사용하는 CPU의 점유율이 80% 이하여야 한다.
요구사항 검증방법	1. Application을 실행 한다.
2. CPU의 Utilization의 결과값을 확인한다.
입력	N/A
출력	CPU Utilization의 결과값
중요도	하
요구사항 재사용	신규
관련 시스템 요구사항	TR-010

9. 개발 제약 사항(Development Constraints)
	해당 GHS RTOS(INTIGRITY)만 고려 한다.


7. SW 컴포넌트 설계(SW Component Design)
7.1. SW 일반 컴포넌트(SW Normal Component)
7.1.1. [SWC-ADC-001] ADC
7.1.1.1. 개요(Overview)
구분	내용
기능(Function)	Analog Data 값을 Digital Data 값으로 변경.
입력(Input)	ADC 설정 Parameter
출력(Output)	ADC Data의 출력 값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-ADC-001, SR-SoC-ADC-002
관련 안전 메커니즘	N/A
[표 6] ADC 기능 개요
7.1.1.2. 정적 설계
 
[그림 5] ADC Interface
7.1.1.3. 동적 설계
7.1.1.3.1. [SCB-ADC-001] Device Initialize
Function Description	ADC 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 7] Device Initialize Sequence Diagram
7.1.1.3.2. [SCB-ADC-002] Device IOCTL 수행
Function Description	ADC의 Start, Wait For Done, Finish와 Get voltage IOCTL을 수행한다.
Dynamic   behavior	 
[표 8] Device IOCTL 수행 Sequence Diagram

7.1.1.4. 인터페이스(Interface)
Interface ID	Name
SCI-ADC-001	nc_adc_probe
SCI-ADC-002	nc_adc_ioctl
SCI-ADC-003	nc_adc_ioctl_start
SCI-ADC-004	nc_adc_ioctl_finish
SCI-ADC-005	nc_adc_ioctl_wait_for_done
SCI-ADC-006	nc_adc_ioctl_get_voltage
[표 9] SW 인터페이스 개요
7.1.1.4.1. [SCI-ADC-001] nc_adc_probe()
Interface ID	SCI-ADC-001
Name	nc_adc_probe
Descrizxption	ADC 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Node	N/A
IN	Driver	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 10] nc_adc_probe() 인터페이스
7.1.1.4.2. [SCI-ADC-002] nc_adc_ioctl()
Interface ID	SCI-ADC-002
Name	nc_adc_ioctl
Description	ADC의 입력 명령에 해당하는 내부 인터페이스를 Routing 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 11] nc_adc_ioctl() 인터페이스
7.1.1.4.3. [SCI-ADC-003] nc_adc_ioctl_start()
Interface ID	SCI-ADC-003
Name	nc_adc_ioctl_start
Description	ADC의 Start를 수행하는 인터페이스.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 12] nc_adc_ioctl_start() 인터페이스
7.1.1.4.4. [SCI-ADC-004] nc_adc_ioctl_finish()
Interface ID	SCI-ADC-004
Name	nc_adc_ioctl_finish
Description	ADC의 Finish를 수행하는 인터페이스.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 13] nc_adc_ioctl_finish() 인터페이스
7.1.1.4.5. [SCI-ADC-005] nc_adc_ioctl_wait_for_done()
Interface ID	SCI-ADC-005
Name	nc_adc_ioctl_wait_for_done
Description	ADC 신호가 Conversion 될 때까지 기다린다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Interface	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 14] nc_adc_ioctl_wait_for_done() 인터페이스
7.1.1.4.6. [SCI-ADC-006] nc_adc_ioctl_get_voltage()
Interface ID	SCI-ADC-006
Name	nc_adc_ioctl_get_voltage
Description	ADC Conversion data를 읽는다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 15] nc_adc_ioctl_get_voltage() 인터페이스
7.1.2. [SWC-BUFF-001] BUFF
7.1.2.1. 개요(Overview)
구분	내용
기능(Function)	Flipflop Buffer와 Cicular Buffer를 생성하고 제어한다.
입력(Input)	N/A
출력(Output)	Buffer Pointer
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-BUFF-001
관련 안전 메커니즘	N/A
[표 16] BUFF 기능 개요
7.1.2.2. 정적 설계
 
[그림 6] BUFF Interface
7.1.2.3. 동적 설계
7.1.2.3.1. [SCB-BUFF-001] Circular Buffer Create and Destroy
Function Description	Circular Buffer의 생성과 해제를 한다.
Dynamic   behavior	 
[표 17] Circular Buffer Create and Destroy Sequence Diagram
7.1.2.3.2. [SCB-BUFF-002] Flipflop Buffer Read/Write
Function Description	Flipflop Buffer의 Read/Write 동작을 수행한다.
Dynamic   behavior	 
[표 18] Flipflop Buffer Read/Write Sequence Diagram
7.1.2.3.3. [SCB-BUFF-003] Flipflop Buffer Create and Destroy
Function Description	Flipflop Buffer 의 생성과 해제를 한다.
Dynamic   behavior	 
[표 19] Flipflop Buffer Create and Destroy Sequence Diagram
7.1.2.3.4. [SCB-BUFF-004] Circular Buffer Enqueue/Dequeue
Function Description	Circulat Buffer의 Enqueue/Dequeue를 한다.
Dynamic   behavior	 
[표 20] Circular Buffer Enqueue/Dequeue Sequence Diagram

7.1.2.4. 인터페이스(Interface)
Interface ID	Name
SCI-BUFF-001	nc_tsfs_ff_create_buffers
SCI-BUFF-002	nc_tsfs_ff_destroy_buffers
SCI-BUFF-003	nc_tsfs_ff_get_addr_of_buffer
SCI-BUFF-004	nc_tsfs_ff_get_buf_size
SCI-BUFF-005	nc_tsfs_ff_get_readable_buffer_and_timestamp
SCI-BUFF-006	nc_tsfs_ff_finish_read_buf
SCI-BUFF-007	nc_tsfs_ff_get_writable_buffer_and_set_timestamp
SCI-BUFF-008	nc_tsfs_ff_finish_write_buf
SCI-BUFF-009	nc_tsfs_cb_create_buffers
SCI-BUFF-010	nc_tsfs_cb_destroy_buffers
SCI-BUFF-011	nc_tsfs_cb_max_count
SCI-BUFF-012	nc_tsfs_cb_current_count
SCI-BUFF-013	nc_tsfs_cb_max_buf_size
SCI-BUFF-014	nc_tsfs_cb_enqueue
SCI-BUFF-015	nc_tsfs_cb_get_time_stamp_of_current
SCI-BUFF-016	nc_tsfs_cb_dequeue_start
SCI-BUFF-017	nc_tsfs_cb_dequeue_finish
[표 21] SW 인터페이스 개요
7.1.2.4.1. [SCI-BUFF-001] nc_tsfs_ff_create_buffers()
Interface ID	SCI-BUFF-001
Name	nc_tsfs_ff_create_buffers
Description	fsync flipflop buffer를 생성한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
IN	Buffer Size	N/A
반환
항목	범위
	Error	SUCCESS or FAILURE
[표 22] nc_tsfs_ff_create_buffers() 인터페이스
7.1.2.4.2. [SCI-BUFF-002] nc_tsfs_ff_destroy_buffers()
Interface ID	SCI-BUFF-002
Name	nc_tsfs_ff_destroy_buffersr
Description	Fsync flipflop 버퍼를 Destroy 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
N/A	N/A
[표 23] nc_tsfs_ff_destroy_buffers() 인터페이스
7.1.2.4.3. [SCI-BUFF-003] nc_tsfs_ff_get_addr_of_buffer()
Interface ID	SCI-BUFF-003
Name	nc_tsfs_ff_get_addr_of_buffer
Description	입력된 Index의 Buffer 주소를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
IN	Buffer Index	N/A
반환
항목	범위
Buffer Address	N/A
[표 24] nc_tsfs_ff_get_addr_of_buffer() 인터페이스
7.1.2.4.4. [SCI-BUFF-004] nc_tsfs_ff_get_buf_size()
Interface ID	SCI-BUFF-004
Name	nc_tsfs_ff_get_buf_size
Description	Buffer Size를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
Buffer Size	N/A
[표 25] nc_tsfs_ff_get_buf_size() 인터페이스
7.1.2.4.5. [SCI-BUFF-005] nc_tsfs_ff_get_readable_buffer_and_timestamp()
Interface ID	SCI-BUFF-005
Name	nc_tsfs_ff_get_readable_buffer_and_timestamp
Description	Index Buffer의 Address와 Time Stamp를 읽어 온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
OUT	Time Stamp	N/A
반환
항목	범위
Buffer Address	N/A
[표 26] nc_tsfs_ff_get_readable_buffer_and_timestamp() 인터페이스
7.1.2.4.6. [SCI-BUFF-006] nc_tsfs_ff_finish_read_buf()
Interface ID	SCI-BUFF-006
Name	nc_tsfs_ff_finish_read_buf
Description	Buffer의 Read 동작을 끝낸다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
N/A	N/A
[표 27] nc_tsfs_ff_finish_read_buf() 인터페이스
7.1.2.4.7. [SCI-BUFF-007] nc_tsfs_ff_get_writable_buffer_and_set_timestamp()
Interface ID	SCI-BUFF-007
Name	nc_tsfs_ff_get_writable_buffer_and_set_timestamp
Description	Time Stamp를 설정하고 Index와 Address를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
OUT	Index	N/A
IN	Time Stamp	N/A
반환
항목	범위
Buffer Address	N/A
[표 28] nc_tsfs_ff_get_writable_buffer_and_set_timestamp() 인터페이스
7.1.2.4.8. [SCI-BUFF-008] nc_tsfs_ff_finish_write_buf()
Interface ID	SCI-BUFF-008
Name	nc_tsfs_ff_finish_write_buf
Description	Write를 Finish 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
N/A	N/A
[표 29] nc_tsfs_ff_finish_write_buf() 인터페이스
7.1.2.4.9. [SCI-BUFF-009] nc_tsfs_cb_create_buffers()
Interface ID	SCI-BUFF-009
Name	nc_tsfs_cb_create_buffers
Description	fsync Circular 버퍼를 생성한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
IN	Max Count	N/A
IN	Buffer Max Size	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 30] nc_tsfs_cb_create_buffers() 인터페이스
7.1.2.4.10. [SCI-BUFF-010] nc_tsfs_cb_destroy_buffers()
Interface ID	SCI-BUFF-010
Name	nc_tsfs_cb_destroy_buffers
Description	fsync Circular 버퍼를 Release 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
N/A	N/A
[표 31] nc_tsfs_cb_destroy_buffers() 인터페이스
7.1.2.4.11. [SCI-BUFF-011] nc_tsfs_cb_max_count()
Interface ID	SCI-BUFF-011
Name	nc_tsfs_cb_max_count
Description	fsync Circular 버퍼의 Max Count를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
Error	FAILURE or Max Buffer Count
[표 32] nc_tsfs_cb_max_count() 인터페이스
7.1.2.4.12. [SCI-BUFF-012] nc_tsfs_cb_current_count()
Interface ID	SCI-BUFF-012
Name	nc_tsfs_cb_current_count
Description	fsync Circular 버퍼의 Current Count를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
Error	FAILURE or Current Buffer Count
[표 33] nc_tsfs_cb_current_count() 인터페이스
7.1.2.4.13. [SCI-BUFF-013] nc_tsfs_cb_max_buf_size()
Interface ID	SCI-BUFF-013
Name	nc_tsfs_cb_max_buf_size
Description	fsync Circular 버퍼의 Max Size를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
Error	FAILURE or Max Buffer Size
[표 34] nc_tsfs_cb_max_buf_size() 인터페이스
7.1.2.4.14. [SCI-BUFF-014] nc_tsfs_cb_enqueue()
Interface ID	SCI-BUFF-014
Name	nc_tsfs_cb_enqueue
Description	fsync Circular 버퍼에 Data를 Insert 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
IN	Time Stamp	N/A
OUT	Data Address	N/A
IN	Data Size	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 35] nc_tsfs_cb_enqueue() 인터페이스
7.1.2.4.15. [SCI-BUFF-015] nc_tsfs_cb_get_time_stamp_of_current()
Interface ID	SCI-BUFF-015
Name	nc_tsfs_cb_get_time_stamp_of_current
Description	Current의 Time Stamp를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
OUT	Time Stamp	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 36] nc_tsfs_cb_get_time_stamp_of_current() 인터페이스
7.1.2.4.16. [SCI-BUFF-016] nc_tsfs_cb_dequeue_start()
Interface ID	SCI-BUFF-016
Name	nc_tsfs_cb_dequeue_start
Description	fsync Circular 버퍼에 저장된 Data를 가져온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
OUT	Data Buffer	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 37] nc_tsfs_cb_dequeue_start() 인터페이스
7.1.2.4.17. [SCI-BUFF-017] nc_tsfs_cb_dequeue_finish()
Interface ID	SCI-BUFF-017
Name	nc_tsfs_cb_dequeue_finish
Description	Dequeue를 완료 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Ownership ID	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 38] nc_tsfs_cb_dequeue_finish() 인터페이스
7.1.3. [SWC-CAN-001] CAN
7.1.3.1. 개요(Overview)
구분	내용
기능(Function)	외부 장치와의 Data의 송수신을 위한 CAN 통신을 제어.
입력(Input)	CAN Parameter
출력(Output)	CAN Data의 송수신 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-CAN-001, SR-SoC-CAN-002
관련 안전 메커니즘	SM-20
[표 39] CAN 기능 개요
7.1.3.2. 정적 설계
 
[그림 7] CAN Interface
7.1.3.3. 동적 설계
7.1.3.3.1. [SCB-CAN-001] Device Initialize
Function Description	CAN의 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 40] Device Initialize Sequence Diagram
7.1.3.3.2. [SCB-CAN-002] Device IOCTL 수행
Function Description	CAN의 Set Parameter, Shut down, Data Transmit, Data Receive와 Get Device IOCTL 명령을 수행한다.
Dynamic   behavior	 
[표 41] Device IOCTL 수행 Sequence Diagram

7.1.3.4. 인터페이스(Interface)
Interface ID	Name
SCI-CAN-001	nc_can_probe
SCI-CAN-002	nc_can_ioctl
SCI-CAN-003	nc_can_ioctl_start_up_with_set_param
SCI-CAN-004	nc_can_ioctl_shutdown
SCI-CAN-005	nc_can_ioctl_transmit_data
SCI-CAN-006	nc_can_ioctl_receive_data
SCI-CAN-007	nc_can_ioctl_get_iodevice
[표 42] SW 인터페이스 개요
7.1.3.4.1. [SCI-CAN-001] nc_can_probe()
Interface ID	SCI-CAN-001
Name	nc_can_probe
Description	CAN 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
Error	SUCCESS
[표 43] nc_can_probe() 인터페이스
7.1.3.4.2. [SCI-CAN-002] nc_can_ioctl()
Interface ID	SCI-CAN-002
Name	nc_can_ioctl
Description	CAN에 전달된 입력 명령에 해당하는 기능으로 Routing을 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Handler	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 44] nc_can_ioctl() 인터페이스
7.1.3.4.3. [SCI-CAN-003] nc_can_ioctl_start_up_with_set_param()
Interface ID	SCI-CAN-003
Name	nc_can_ioctl_start_up_with_set_param
Description	CAN 장치 사용을 위해 초기화를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 8] nc_can_ioctl_start_up_with_set_param() 인터페이스
7.1.3.4.4. [SCI-CAN-004] nc_can_ioctl_shutdown()
Interface ID	SCI-CAN-004
Name	nc_can_ioctl_shutdown
Description	CAN 장치의 사용 중지를 위해 Shut Down 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 8] nc_can_ioctl_shutdown() 인터페이스
7.1.3.4.5. [SCI-CAN-005] nc_can_ioctl_transmit_data()
Interface ID	SCI-CAN-005
Name	nc_can_ioctl_transmit_data
Description	CAN의 Data 송신 작업을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 8] nc_can_ioctl_transmit_data() 인터페이스
7.1.3.4.6. [SCI-CAN-006] nc_can_ioctl_receive_data()
Interface ID	SCI-CAN-006
Name	nc_can_ioctl_receive_data
Description	CAN의 Data 수신 작업을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 8] nc_can_ioctl_receive_data() 인터페이스
7.1.3.4.7. [SCI-CAN-007] nc_can_ioctl_get_iodevice()
Interface ID	SCI-CAN-007
Name	nc_can_ioctl_get_iodevice
Description	IO Device의 Parameter를 가져온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance	N/A
OUT	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 8] nc_can_ioctl_get_iodevice() 인터페이스
7.1.4. [SWC-CNN-001] CNN
7.1.4.1. 개요(Overview)
구분	내용
기능(Function)	CNN 기능을 제어
입력(Input)	인식 Data
출력(Output)	인식 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-CNN-001, SR-SoC-CNN-002
관련 안전 메커니즘	SM-16
[표 45] CNN 기능 개요
7.1.4.2. 정적 설계
 
[그림 8] CNN Interface
7.1.4.3. 동적 설계
7.1.4.3.1. [SCB-CNN-001] Device Initialize
Function Description	CNN의 사용을 위해 초기화를 한다.
Dynamic   behavior	 
[표 46] Device Initialize Sequence Diagram
7.1.4.4. 인터페이스(Interface)
Interface ID	Name
N/A	N/A
[표 47] SW 인터페이스 개요
7.1.5. [SWC-DMA-001] DMA
7.1.5.1. 개요(Overview)
구분	내용
기능(Function)	Data 전송을 위한 DMA330 제어
입력(Input)	DMA Parameter
출력(Output)	DMA 전송에 따른 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-DMA-001
관련 안전 메커니즘	N/A
[표 48] DMA 기능 개요
7.1.5.2. 정적 설계
 
[그림 9] DMA Interface
7.1.5.3. 동적 설계
7.1.5.3.1. [SCB-DMA-001] Device Initialize
Function Description	DMA 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 49] Device Initialize Sequence Diagram
7.1.5.3.2. [SCB-DMA-002] Device IOCTL 수행
Function Description	DMA Reset, Get Status, IRQ Receive와 Transmission의 Prepare과 Start에 대한 IOCTL Command를 처리한다.
Dynamic   behavior	 
[표 50] Device IOCTL 수행 Sequence Diagram
7.1.5.4. 인터페이스(Interface)	
Interface ID	Name
SCI-DMA-001	nc_dma_probe
SCI-DMA-002	nc_dma_ioctl
SCI-DMA-003	nc_dma_prepare_transmission
[표 51] SW 인터페이스 개요
7.1.5.4.1. [SCI-DMA-001] nc_dma_probe()
Interface ID	SCI-DMA-001
Name	nc_dma_probe
Description	DMA 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Node Tree	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 52] nc_dma_probe() 인터페이스
7.1.5.4.2. [SCI-DMA-002] nc_dma_ioctl()
Interface ID	SCI-DMA-002
Name	nc_dma_ioctl
Description	DMA에 입력되는 명령의 내부 Interface가 정의되어 있다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle Address	N/A
IN	Command	N/A
IN	Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 53] nc_dma_ioctl() 인터페이스
7.1.5.4.3. [SCI-DMA-003] nc_dma_prepare_transmission()
Interface ID	SCI-DMA-003
Name	nc_dma_prepare_transmission
Description	DMA prepare transmission.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle Address	N/A
IN	Parameter Buffer	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 54] nc_dma_prepare_transmission() 인터페이스
7.1.6. [SWC-GRAPHICS-001] GRAPHICS
7.1.6.1. 개요(Overview)
구분	내용
기능(Function)	영상 Data에 대한 Resize, Mix 등의 기능을 제어한다.
입력(Input)	Graphic Parameter
출력(Output)	Graphic Conversion의 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	 SR-SoC-GRAPHICS-001, SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-003, SR-SoC-GRAPHICS-004
관련 안전 메커니즘	N/A
[표 55] GRAPHICS 기능 개요
7.1.6.2. 정적 설계
 
[그림 10] GRAPHICS Interface
7.1.6.3. 동적 설계
7.1.6.3.1. [SCB-GRAPHICS-001] Image Conversion 수행
Function Description	Image의 Resize, Mix, Format Convert, Crop, Clip과 Rotate의 기능을 수행한다.
Dynamic   behavior	 
[표 56] Image Conversion Sequence Diagram
7.1.6.3.2. [SCB-GRAPHICS-002] Create/Destroy Graphic Thread Pool
Function Description	Graphic Thread Poll을 Create/Destroy한다.
Dynamic   behavior	 
[표 57] Create/Destroy Graphic Thread Pool Sequence Diagram
7.1.6.4. 인터페이스(Interface)
Interface ID	Name
SCI-GRAPHICS-001	nc_graphics_parallel_constructor
SCI-GRAPHICS-002	nc_graphics_parallel_deconstructor
SCI-GRAPHICS-003	nc_graphics_parallel_resize_image
SCI-GRAPHICS-004	nc_graphics_parallel_overlay_mix_image
SCI-GRAPHICS-005	nc_Mix_Argb2Yuyv
SCI-GRAPHICS-006	nc_Mix_Abgr2Yuyv
SCI-GRAPHICS-007	nc_Mix_Rgba2Yuyv
SCI-GRAPHICS-008	nc_Mix_Bgra2Yuyv
SCI-GRAPHICS-009	nc_MixPaste_Argb2Yuyv
SCI-GRAPHICS-010	nc_MixPaste_Abgr2Yuyv
SCI-GRAPHICS-011	nc_MixPaste_Rgba2Yuyv
SCI-GRAPHICS-012	nc_MixPaste_Bgra2Yuyv
SCI-GRAPHICS-013	nc_Img_resize_bilinear_yuvPlanar
SCI-GRAPHICS-014	nc_Resize_Yuv422_hafwid_verti_scaledn
SCI-GRAPHICS-015	nc_Resize_Yuv422_vertical_scaledn
SCI-GRAPHICS-016	nc_Resize_Yuv422_halfwidth
SCI-GRAPHICS-017	nc_Img_Yuv_packed_to_planar
SCI-GRAPHICS-018	nc_Img_Yuv_planar_to_packed
SCI-GRAPHICS-019	nc_Img_Yuv_nv12_to_yuv422
SCI-GRAPHICS-020	nc_Img_Rgb24_packed_to_tiled_planar
SCI-GRAPHICS-021	nc_Cvt_Yuv422_to_Rgb
SCI-GRAPHICS-022	nc_Cvt_Yuv422_to_Rgb__c
SCI-GRAPHICS-023	nc_Crop_Yuv422__c
SCI-GRAPHICS-024	nc_Paste_Yuv422__c
SCI-GRAPHICS-025	nc_Crop_Rgb32__c
SCI-GRAPHICS-026	nc_Paste_Rgb32__c
SCI-GRAPHICS-027	nc_Rotate_YUV422Planar_Yp_Degree90CW__c
SCI-GRAPHICS-028	nc_Rotate_YUV422Planar_UVp_Degree90CW__c
SCI-GRAPHICS-029	nc_Rotate_YUV422Planar_Yp_Degree90CCW__c
SCI-GRAPHICS-030	nc_Rotate_YUV422Planar_UVp_Degree90CCW__c
[표 58] SW 인터페이스 개요
7.1.6.4.1. [SCI-GRAPHICS-001] nc_graphics_parallel_constructor()
Interface ID	SCI-GRAPHICS-001
Name	nc_graphics_parallel_constructor
Description	병렬 처리를 위해 Nextchip Graphic Engine의 Instance를 생성하고 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Name	
IN	Number of Thread Pool	
반환
항목	범위
Parallel Instance	N/A
[표 59] nc_graphics_parallel_constructor() 인터페이스
7.1.6.4.2. [SCI-GRAPHICS-002] nc_graphics_parallel_deconstructor()
Interface ID	SCI-GRAPHICS-002
Name	nc_graphics_parallel_deconstructor
Description	병렬 처리를 위해 Nextchip Graphic Engine의 Instance를 해지한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Parallel Instance Handle	N/A
반환
항목	범위
N/A	N/A
[표 60] nc_graphics_parallel_deconstructor() 인터페이스
7.1.6.4.3. [SCI-GRAPHICS-003] nc_graphics_parallel_resize_image()
Interface ID	SCI-GRAPHICS-003
Name	nc_graphics_parallel_resize_image
Description	병렬 처리 알고리즘을 사용하여 Image Resize를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Parallel Instance Handle	N/A
IN	Image Format	N/A
IN	Method of Interpolation	N/A
IN	Source Buffer Address	N/A
IN	Width of Source Image	N/A
IN	Height of Source Image	N/A
IN	Destination Buffer Address	N/A
IN	Width of Destination Image	N/A
IN	Height of Destination Image	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 61] nc_graphics_parallel_resize_image() 인터페이스
7.1.6.4.4. [SCI-GRAPHICS-004] nc_graphics_parallel_overlay_mix_image()
Interface ID	SCI-GRAPHICS-004
Name	nc_graphics_parallel_overlay_mix_image
Description	병렬 처리 알고리즘을 사용하여 이미지 Overlay Mix를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Parallel Instance Handle	N/A
IN	Overlay Mix Format	N/A
IN	Source Buffer Address	N/A
IN	Destination Buffer Address	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 62] nc_graphics_parallel_overlay_mix_image() 인터페이스
7.1.6.4.5. [SCI-GRAPHICS-005] nc_Mix_Argb2Yuyv()
Interface ID	SCI-GRAPHICS-009
Name	nc_Mix_Argb2Yuyv
Description	ARGB와 YUV422을 혼합한다
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	ARGB Image Data.	N/A
IN	YUV422 Image Data	N/A
IN	Image Pixel Width	N/A
IN	Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 63] nc_Mix_Argb2Yuyv() 인터페이스
7.1.6.4.6. [SCI-GRAPHICS-006] nc_Mix_Abgr2Yuyv()
Interface ID	SCI-GRAPHICS-010
Name	nc_Mix_Abgr2Yuyv
Description	ABGR과 YUYV422을 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	ABGR Image Data.	N/A
IN	YUV422 Image Data	N/A
IN	Image Pixel Width	N/A
IN	Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 64] nc_Mix_Abgr2Yuyv() 인터페이스
7.1.6.4.7. [SCI-GRAPHICS-007] nc_Mix_Rgba2Yuyv()
Interface ID	SCI-GRAPHICS-011
Name	nc_Mix_Rgba2Yuyv
Description	RGBA와 YUYV422을 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	RGBA Image Data.	N/A
IN	YUV422 Image Data	N/A
IN	Image Pixel Width	N/A
IN	Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 65] nc_Mix_Rgba2Yuyv() 인터페이스
7.1.6.4.8. [SCI-GRAPHICS-008] nc_Mix_Bgra2Yuyv()
Interface ID	SCI-GRAPHICS-012
Name	nc_Mix_Bgra2Yuyv
Description	BGRA와 YUYV422을 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	BGRA Image Data.	N/A
IN	YUV422 Image Data	N/A
IN	Image Pixel Width	N/A
IN	Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 66] nc_Mix_Bgra2Yuyv() 인터페이스
7.1.6.4.9. [SCI-GRAPHICS-009] nc_MixPaste_Argb2Yuyv()
Interface ID	SCI-GRAPHICS-013
Name	nc_MixPaste_Argb2Yuyv
Description	Source ARGB에서 Destination YUV422로 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	ARGB Source Image Data.	N/A
IN	Source Image Pixel Width	N/A
IN	Source Image Pixel Height	N/A
IN	Destination Image Pixel x Offset	N/A
IN	Destination Image Pixel y Offset	N/A
IN	YUV422 Destination Image Data	N/A
IN	Destination Image Pixel Width	N/A
IN	Destination Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 67] nc_MixPaste_Argb2Yuyv() 인터페이스
7.1.6.4.10. [SCI-GRAPHICS-010] nc_MixPaste_Abgr2Yuyv()
Interface ID	SCI-GRAPHICS-014
Name	nc_MixPaste_Abgr2Yuyv
Description	Source ABGR에서 Destination YUV422로 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	ABGR Source Image Data.	N/A
IN	Source Image Pixel Width	N/A
IN	Source Image Pixel Height	N/A
IN	Destination Image Pixel x Offset	N/A
IN	Destination Image Pixel y Offset	N/A
IN	YUV422 Destination Image Data	N/A
IN	Destination Image Pixel Width	N/A
IN	Destination Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 68] nc_MixPaste_Abgr2Yuyv() 인터페이스
7.1.6.4.11. [SCI-GRAPHICS-011] nc_MixPaste_Rgba2Yuyv()
Interface ID	SCI-GRAPHICS-015
Name	nc_MixPaste_Rgba2Yuyv
Description	Source RGBA에서 Destination YUV422로 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	RGBA Source Image Data.	N/A
IN	Source Image Pixel Width	N/A
IN	Source Image Pixel Height	N/A
IN	Destination Image Pixel x Offset	N/A
IN	Destination Image Pixel y Offset	N/A
IN	YUV422 Destination Image Data	N/A
IN	Destination Image Pixel Width	N/A
IN	Destination Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 69] nc_MixPaste_Rgba2Yuyv() 인터페이스
7.1.6.4.12. [SCI-GRAPHICS-012] nc_MixPaste_Bgra2Yuyv()
Interface ID	SCI-GRAPHICS-016
Name	nc_MixPaste_Bgra2Yuyv
Description	Source BGRA에서 Destination YUV422로 혼합한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	BGRA Source Image Data.	N/A
IN	Source Image Pixel Width	N/A
IN	Source Image Pixel Height	N/A
IN	Destination Image Pixel x Offset	N/A
IN	Destination Image Pixel y Offset	N/A
IN	YUV422 Destination Image Data	N/A
IN	Destination Image Pixel Width	N/A
IN	Destination Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 70] nc_MixPaste_Bgra2Yuyv() 인터페이스
7.1.6.4.13. [SCI-GRAPHICS-013] nc_Img_resize_bilinear_yuvPlanar()
Interface ID	SCI-GRAPHICS-017
Name	nc_Img_resize_bilinear_yuvPlanar
Description	YUV422 Planar Format Data를 Resize 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data.	N/A
IN	Source Image Pixel Stride	N/A
IN	Source Image Pixel Width	N/A
IN	Source Image Pixel Height	N/A
IN	YUV422 Destination Image Data.	N/A
IN	Destination Image Pixel Stride	N/A
IN	Destination Image Pixel Width	N/A
IN	Destination Image Pixel Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 71] nc_Img_resize_bilinear_yuvPlanar() 인터페이스
7.1.6.4.14. [SCI-GRAPHICS-014] nc_Resize_Yuv422_hafwid_verti_scaledn()
Interface ID	SCI-GRAPHICS-018
Name	nc_Resize_Yuv422_hafwid_verti_scaledn
Description	YUV422 Data의 Height는 Resize하고 Width는 반으로 줄인다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Source Width	N/A
IN	Source Height	N/A
IN	Destination Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 72] nc_Resize_Yuv422_hafwid_verti_scaledn() 인터페이스
7.1.6.4.15. [SCI-GRAPHICS-015] nc_Resize_Yuv422_vertical_scaledn()
Interface ID	SCI-GRAPHICS-019
Name	nc_Resize_Yuv422_vertical_scaledn
Description	YUV422 Data의 Height를 Resize 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Source Width	N/A
IN	Source Height	N/A
IN	Destination Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 73] nc_Resize_Yuv422_vertical_scaledn() 인터페이스
7.1.6.4.16. [SCI-GRAPHICS-016] nc_Resize_Yuv422_halfwidth()
Interface ID	SCI-GRAPHICS-020
Name	nc_Resize_Yuv422_halfwidth
Description	YUV422 Data의 Width를 반으로 Resize 한다
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Source Width	N/A
IN	Source Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 74] nc_Resize_Yuv422_halfwidth() 인터페이스
7.1.6.4.17. [SCI-GRAPHICS-017] nc_Img_Yuv_packed_to_planar()
Interface ID	SCI-GRAPHICS-021
Name	nc_Img_Yuv_packed_to_planar
Description	YUV422 Packed Image를 YUV422 Plane Image로 Conversion 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Packed Image Data	N/A
IN	YUV422 Plane Image Data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 75] nc_Img_Yuv_packed_to_planar() 인터페이스
7.1.6.4.18. [SCI-GRAPHICS-018] nc_Img_Yuv_planar_to_packed()
Interface ID	SCI-GRAPHICS-022
Name	nc_Img_Yuv_planar_to_packed
Description	YUV422 Planar Image를 YUV422 Packed Image로 Conversion 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Packed Image Data	N/A
IN	YUV422 Plane Image Data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 76] nc_Img_Yuv_planar_to_packed() 인터페이스
7.1.6.4.19. [SCI-GRAPHICS-019] nc_Img_Yuv_nv12_to_yuv422()
Interface ID	SCI-GRAPHICS-023
Name	nc_Img_Yuv_nv12_to_yuv422
Description	nv12에서 YUV422로 Conversion 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	nv12 image data	N/A
IN	yuv422 image data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 77] nc_Img_Yuv_nv12_to_yuv422() 인터페이스
7.1.6.4.20. [SCI-GRAPHICS-020] nc_Img_Rgb24_packed_to_tiled_planar()
Interface ID	SCI-GRAPHICS-024
Name	nc_Img_Rgb24_packed_to_tiled_planar
Description	RGB24 Packed Image를 RGB24 Tiled Image로 Conversion 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	rgb24 packed image data.	N/A
IN	rgb24 tiled image data.	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 78] nc_Img_Rgb24_packed_to_tiled_planar() 인터페이스
7.1.6.4.21. [SCI-GRAPHICS-021] nc_Cvt_Yuv422_to_Rgb()
Interface ID	SCI-GRAPHICS-025
Name	nc_Cvt_Yuv422_to_Rgb
Description	YUV422 Image를 RGB Image로 Conversion 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	yuv422 image data.	N/A
IN	RGB image data.	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 79] nc_Cvt_Yuv422_to_Rgb() 인터페이스
7.1.6.4.22. [SCI-GRAPHICS-022] nc_Cvt_Yuv422_to_Rgb__c()
Interface ID	SCI-GRAPHICS-026
Name	nc_Cvt_Yuv422_to_Rgb__c
Description	YUV422 Packed Image를 RGB Packed Image로 Conversion 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	yuv422 image data.	N/A
IN	RGB image data.	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 80] nc_Cvt_Yuv422_to_Rgb__c() 인터페이스
7.1.6.4.23. [SCI-GRAPHICS-023] nc_Crop_Yuv422__c()
Interface ID	SCI-GRAPHICS-027
Name	nc_Crop_Yuv422__c
Description	Source (X, Y) 지검에 Crop된 YUV422 Data를 저장한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Source Image Data	N/A
IN	Source Width Size	N/A
IN	Source Height Size	N/A
IN	Source X Offset	N/A
IN	Source Y Offset	N/A
IN	Destination Image Data	N/A
IN	Crop Width Size	N/A
IN	Crop Height Size	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 81] nc_Crop_Yuv422__c() 인터페이스
7.1.6.4.24. [SCI-GRAPHICS-024] nc_Paste_Yuv422__c()
Interface ID	SCI-GRAPHICS-028
Name	nc_Paste_Yuv422__c
Description	Destination Offset (X, Y) 지점에 YUV422 Data를 붙여 넣는다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Source Image Data	N/A
IN	Source Width Size	N/A
IN	Source Height Size	N/A
IN	Destination X Offset	N/A
IN	Destination Y Offset	N/A
IN	Destination Image Data	N/A
IN	Destination Width Size	N/A
IN	Destination Height Size	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 82] nc_Paste_Yuv422__c() 인터페이스
7.1.6.4.25. [SCI-GRAPHICS-025] nc_Crop_Rgb32__c()
Interface ID	SCI-GRAPHICS-029
Name	nc_Crop_Rgb32__c
Description	Source (X, Y) 지검에 Crop된 RGB32 Data를 저장한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Source Image Data	N/A
IN	Source Width Size	N/A
IN	Source Height Size	N/A
IN	Source X Offset	N/A
IN	Source Y Offset	N/A
IN	Destination Image Data	N/A
IN	Destination Width Size	N/A
IN	Destination Height Size	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 83] nc_Crop_Rgb32__c() 인터페이스
7.1.6.4.26. [SCI-GRAPHICS-026] nc_Paste_Rgb32__c()
Interface ID	SCI-GRAPHICS-030
Name	nc_Paste_Rgb32__c
Description	Destination (X, Y) 지점에 RGB32 Data를 붙여 넣는다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Source Image Data	N/A
IN	Source Width Size	N/A
IN	Source Height Size	N/A
IN	Destination X Offset	N/A
IN	Destination Y Offset	N/A
IN	Destination Image Data	N/A
IN	Destination Width Size	N/A
IN	Destination Height Size	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 84] nc_Paste_Rgb32__c() 인터페이스
7.1.6.4.27. [SCI-GRAPHICS-027] nc_Rotate_YUV422Planar_Yp_Degree90CW__c()
Interface ID	SCI-GRAPHICS-031
Name	nc_Rotate_YUV422Planar_Yp_Degree90CW__c
Description	YUV422 Planar Image의 Y Planar값이 90도 회전한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 85] nc_Rotate_YUV422Planar_Yp_Degree90CW__c() 인터페이스
7.1.6.4.28. [SCI-GRAPHICS-028] nc_Rotate_YUV422Planar_UVp_Degree90CW__c()
Interface ID	SCI-GRAPHICS-032
Name	nc_Rotate_YUV422Planar_UVp_Degree90CW__c
Description	YUV422 Planar Image의 UV Planar값이 90도 회전한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 86] nc_Rotate_YUV422Planar_UVp_Degree90CW__c() 인터페이스
7.1.6.4.29. [SCI-GRAPHICS-029] nc_Rotate_YUV422Planar_Yp_Degree90CCW__c()
Interface ID	SCI-GRAPHICS-033
Name	nc_Rotate_YUV422Planar_Yp_Degree90CCW__c
Description	YUV422 Planar Image의 Y Planar값이 90도 회전한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 87] nc_Rotate_YUV422Planar_Yp_Degree90CCW__c() 인터페이스
7.1.6.4.30. [SCI-GRAPHICS-030] nc_Rotate_YUV422Planar_UVp_Degree90CCW__c()
Interface ID	SCI-GRAPHICS-034
Name	nc_Rotate_YUV422Planar_UVp_Degree90CCW__c
Description	YUV422 Planar Image의 UV Planar값이 90도 회전한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	YUV422 Source Image Data	N/A
IN	YUV422 Destination Image Data	N/A
IN	Image Width	N/A
IN	Image Height	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 88] nc_Rotate_YUV422Planar_UVp_Degree90CCW__c() 인터페이스
7.1.7. [SWC-H264ENC-001] H264ENC
7.1.7.1. 개요(Overview)
구분	내용
기능(Function)	H264 Encoding 기능을 제어
입력(Input)	Encoder Parameter
출력(Output)	Encoding 수행의 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-H264ENC-001, SR-SoC-H264ENC-002
관련 안전 메커니즘	SM-09
[표 89] H264ENC 기능 개요
7.1.7.2. 정적 설계
  
[그림 11] H264ENC Interface
7.1.7.3. 동적 설계
7.1.7.3.1. [SCB-H264ENC-001] Device Initialize
Function Description	H264 Encoder 사용을 위해 초기화 한다.
Dynamic   behavior	  
[표 90] Device Initialize Sequence Diagram
7.1.7.3.2. [SCB-H264ENC-002] Device IOCTL 수행
Function Description	IOCTL Command를 입력 받아 Data를 H.264 형태로 Encoding을 한다.
Dynamic   behavior	  
[표 91] Device IOCTL 수행 Sequence Diagram
7.1.7.4. 인터페이스(Interface)
Interface ID	Name
SCI-H264ENC-001	nc_h264enc_probe
SCI-H264ENC-002	nc_h264enc_ioctl
SCI-H264ENC-003	nc_h264enc_ioctl_get_input_image_parameter
SCI-H264ENC-004	nc_h264enc_ioctl_get_encoder_parameter
SCI-H264ENC-005	nc_h264enc_ioctl_set_input_image_parameter
SCI-H264ENC-006	nc_h264enc_ioctl_set_encoder_parameter
SCI-H264ENC-007	nc_h264enc_ioctl_initialize
SCI-H264ENC-008	nc_h264enc_ioctl_start_encoder
SCI-H264ENC-009	nc_h264enc_ioctl_post_process
SCI-H264ENC-010	nc_h264enc_ioctl_copy_to_input_buffer
SCI-H264ENC-011	nc_h264enc_ioctl_copy_from_input_buffer
SCI-H264ENC-012	nc_h264enc_ioctl_get_iodevice
SCI-H264ENC-013	nc_h264enc_SM_checkEncBuffer
[표 92] SW 인터페이스 개요
7.1.7.4.1. [SCI-H264ENC-001] nc_h264enc_probe()
Interface ID	SCI-H264ENC-001
Name	nc_h264enc_probe
Description	H264ENC 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 93] nc_h264enc_probe() 인터페이스
7.1.7.4.2. [SCI-H264ENC-002] nc_h264enc_ioctl()
Interface ID	SCI-H264ENC-002
Name	nc_h264enc_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Address of Driver Instance Handle	N/A
IN	Command Value	N/A
IN	IO Control Parameter Buffer	N/A
IN	Buffer Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 94] nc_h264enc_close() 인터페이스
7.1.7.4.3. [SCI-H264ENC-003] nc_h264enc_ioctl_get_input_image_parameter()
Interface ID	SCI-H264ENC-003
Name	nc_h264enc_ioctl_get_input_image_parameter
Description	입력 Image의 Parameter를 읽어온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
OUT	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 95] nc_h264enc_ioctl_get_input_image_parameter() 인터페이스
7.1.7.4.4. [SCI-H264ENC-004] nc_h264enc_ioctl_get_encoder_parameter()
Interface ID	SCI-H264ENC-004
Name	nc_h264enc_ioctl_get_encoder_parameter
Description	Encoder의 Parameter를 읽어온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
		OUT	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 96] nc_h264enc_ioctl_get_encoder_parameter() 인터페이스
7.1.7.4.5. [SCI-H264ENC-005] nc_h264enc_ioctl_set_input_image_parameter()
Interface ID	SCI-H264ENC-005
Name	nc_h264enc_ioctl_set_input_image_parameter
Description	입력 Image의 매개변수를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 97] nc_h264enc_ioctl_set_input_image_parameter() 인터페이스
7.1.7.4.6. [SCI-H264ENC-006] nc_h264enc_ioctl_set_encoder_parameter()
Interface ID	SCI-H264ENC-006
Name	nc_h264enc_ioctl_set_encoder_parameter
Description	Encoder의 매개변수를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 98] nc_h264enc_ioctl_set_encoder_parameter() 인터페이스
7.1.7.4.7. [SCI-H264ENC-007] nc_h264enc_ioctl_initialize()
Interface ID	SCI-H264ENC-007
Name	nc_h264enc_ioctl_initialize
Description	Initialize H264ENC.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 99] nc_h264enc_ioctl_initialize() 인터페이스
7.1.7.4.8. [SCI-H264ENC-008] nc_h264enc_ioctl_start_encoder()
Interface ID	SCI-H264ENC-008
Name	nc_h264enc_ioctl_start_encoder
Description	H264ENC의 Start를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 100] nc_h264enc_ioctl_start_encoder() 인터페이스
7.1.7.4.9. [SCI-H264ENC-009] nc_h264enc_ioctl_post_process()
Interface ID	SCI-H264ENC-009
Name	nc_h264enc_ioctl_post_process
Description	Post Process Command를 처리한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 101] nc_h264enc_ioctl_post_process() 인터페이스
7.1.7.4.10. [SCI-H264ENC-010] nc_h264enc_ioctl_copy_to_input_buffer()
Interface ID	SCI-H264ENC-010
Name	nc_h264enc_ioctl_copy_to_input_buffer
Description	Parameter 값을 Input Buffer에 Copy 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS of FAILURE
[표 102] nc_h264enc_ioctl_copy_to_input_buffer() 인터페이스
7.1.7.4.11. [SCI-H264ENC-011] nc_h264enc_ioctl_copy_from_input_buffer()
Interface ID	SCI-H264ENC-011
Name	nc_h264enc_ioctl_copy_from_input_buffer
Description	Input Buffer값을 Parameter에 Copy한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS of FAILURE
[표 103] nc_h264enc_ioctl_copy_from_input_buffer() 인터페이스
7.1.7.4.12. [SCI-H264ENC-012] nc_h264enc_ioctl_get_iodevice()
Interface ID	SCI-H264ENC-012
Name	nc_h264enc_ioctl_get_iodevice
Description	IO Device를 가져온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS of FAILURE
[표 104] nc_h264enc_ioctl_get_iodevice() 인터페이스
7.1.7.4.13. [SCI-H264ENC-013] nc_h264enc_SM_checkEncBuffer()
Interface ID	SCI-H264ENC-013
Name	nc_h264enc_SM_checkEncBuffer
Description	Check Encoding Buffer.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	IO Control Parameter Buffer	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS of FAILURE
[표 105] nc_h264enc_SM_checkEncBuffer() 인터페이스
7.1.8. [SWC-I2C-001] I2C
7.1.8.1. 개요(Overview)
구분	내용
기능(Function)	Device의 제어를 위한 I2C 통신의 제어.
입력(Input)	I2C Parameter
출력(Output)	I2C Read/Write 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-I2C-001, SR-SoC-I2C-002
관련 안전 메커니즘	SM-18, SM-19
[표 106] I2C 기능 개요
7.1.8.2. 정적 설계
 
[그림 12] I2C Interface
7.1.8.3. 동적 설계
7.1.8.3.1. [SCB-I2C-001] Device Initialize
Function Description	I2C 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 107] Device Initialize Sequence Diagram
7.1.8.3.2. [SCB-I2C-002] Device IOCTL 수행
Function Description	I2C Read/Write, Set Clock Speed, Safe Write의 IOCTL Command를 입력 받아 기능을 수행한다.
Dynamic   behavior	 
[표 108] Device IOCTL 수행 Sequence Diagram
7.1.8.4. 인터페이스(Interface)
Interface ID	Name
SCI-I2C-001	nc_i2c_probe
SCI-I2C-002	nc_i2c_ioctl
SCI-I2C-003	nc_i2c_ioctl_read
SCI-I2C-004	nc_i2c_ioctl_write
SCI-I2C-005	nc_i2c_ioctl_set_scl
SCI-I2C-006	nc_i2c_ioctl_safe_write
[표 109] SW 인터페이스 개요
7.1.8.4.1. [SCI-I2C-001] nc_i2c_probe()
Interface ID	SCI-DMA-001
Name	nc_i2c_probe
Description	I2C 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 110] nc_i2c_probe() 인터페이스
7.1.8.4.2. [SCI-I2C-002] nc_i2c_ioctl()
Interface ID	SCI-I2C-002
Name	nc_i2c_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Address of Driver Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 111] nc_i2c_ioctl() 인터페이스
7.1.8.4.3. [SCI-I2C-003] nc_i2c_ioctl_read()
Interface ID	SCI-I2C-003
Name	nc_i2c_ioctl_read
Description	I2C의 Read Command를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 112] nc_i2c_ioctl_read() 인터페이스
7.1.8.4.4. [SCI-I2C-004] nc_i2c_ioctl_write()
Interface ID	SCI-I2C-004
Name	nc_i2c_ioctl_write
Description	I2C의 Write Command를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 113] nc_i2c_ioctl_write() 인터페이스
7.1.8.4.5. [SCI-I2C-005] nc_i2c_ioctl_set_scl()
Interface ID	SCI-I2C-005
Name	nc_i2c_ioctl_set_scl
Description	I2C의 System Clock을 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 114] nc_i2c_ioctl_set_scl() 인터페이스
7.1.8.4.6. [SCI-I2C-006] nc_i2c_ioctl_safe_write()
Interface ID	SCI-I2C-006
Name	nc_i2c_ioctl_safe_write
Description	I2C로 Data를 Write 한 다음에 다시 Read 하여 Data의 비교를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 115] nc_i2c_ioctl_safe_write() 인터페이스
7.1.9. [SWC-INI-001] INI
7.1.9.1. 개요(Overview)
구분	내용
기능(Function)	Configuration 정보가 저장된 String과 File의 Parsing을 수행한다.
입력(Input)	Parsing 대상의 Parameter
출력(Output)	Parse 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-INI-001
관련 안전 메커니즘	N/A
[표 116] INI 기능 개요
7.1.9.2. 정적 설계
 
[그림 13] INI Interface
7.1.9.3. 동적 설계
7.1.9.3.1. [SCB-INI-001] Parse String
Function Description	Configuration 정보가 저장된 String을 Parsing 한다.
Dynamic   behavior	 
[표 117] Parse String Sequence Diagram
7.1.9.3.2. [SCB-INI-002] Parse File
Function Description	Configuration 정보가 저장된 File을 Parsing 한다.
Dynamic   behavior	 
[표 118] Parse File Sequence Diagram
7.1.9.4. 인터페이스(Interface)
Interface ID	Name
SCI-INI-001	ini_parse
SCI-INI-002	ini_parse_string
SCI-INI-003	ini_parse_file
SCI-INI-004	ini_parse_stream
[표 119] SW 인터페이스 개요
7.1.9.4.1. [SCI-INI-001] ini_parse()
Interface ID	SCI-INI-001
Name	ini_parse
Description	INI Style file을 입력받아 Parsing 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	File Name Pointer	N/A
IN	Handler Function	N/A
IN	User Pointer	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 120] ini_parse() 인터페이스
7.1.9.4.2. [SCI-INI-002] ini_parse_string()
Interface ID	SCI-INI-002
Name	ini_parse_string
Description	String을 입력받아 Parsing 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	String Pointer	N/A
IN	Handler Function	N/A
IN	User Pointer	N/A
반환
항목	범위
Error	0  or Line Number
[표 121] ini_parse_string() 인터페이스
7.1.9.4.3. [SCI-INI-003] ini_parse_file()
Interface ID	SCI-INI-003
Name	ini_parse_file
Description	Same as ini_parse(), but takes a FILE* instead of filename.
After completion, fileclose must be done by the caller.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	String Pointer	N/A
IN	Handler Function	N/A
IN	User Pointer	N/A
반환
항목	범위
Error	0  or Line Number
[표 122] ini_parse_file() 인터페이스
7.1.9.4.4. [SCI-INI-004] ini_parse_stream()
Interface ID	SCI-INI-004
Name	ini_parse_stream
Description	Same as ini_parse(), but takes an ini_reader function pointer instead of filename. Used for implementing custom or string-based I/O.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Reader Function	N/A
IN	String Pointer	N/A
IN	Handler Function	N/A
IN	User Pointer	N/A
반환
항목	범위
Error	0  or Line Number
[표 123] ini_parse_stream() 인터페이스
7.1.10. [SWC-LIN-001] LIN
7.1.10.1. 개요(Overview)
구분	내용
기능(Function)	외부 장치와의 Data 송수신을 위한 LIN 통신의 제어
입력(Input)	LIN Parameter
출력(Output)	LIN Data의 송수신 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-LIN-001, SR-SoC-LIN-002
관련 안전 메커니즘	SM-20
[표 124] LIN 기능 개요
7.1.10.2. 정적 설계
 
[그림 14] LIN Interface
7.1.10.3. 동적 설계
7.1.10.3.1. [SCB-LIN-001] Device Initialize
Function Description	LIN 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 125] Device Initialize Sequence Diagram
7.1.10.3.2. [SCB-LIN-002] Device IOCTL 수행
Function Description	LIN (Master/Slave)Read/Write/Init/Deinit, Set BaudRate를 IOCTL Command로 입력 받아 기능을 수행한다.
Dynamic   behavior	 
[표 126] Device IOCTL 수행 Sequence Diagram
7.1.10.4. 인터페이스(Interface)
Interface ID	Name
SCI-LIN-001	nc_lin_probe
SCI-LIN-002	nc_lin_ioctl
SCI-LIN-003	nc_lin_ioctl_initialize
SCI-LIN-004	nc_lin_ioctl_deinitialize
SCI-LIN-005	nc_lin_ioctl_master_write
SCI-LIN-006	nc_lin_ioctl_master_read
SCI-LIN-007	nc_lin_ioctl_master_read_by_log_mode
SCI-LIN-008	nc_lin_ioctl_broadcast_bus_sleep
SCI-LIN-009	nc_lin_ioctl_wake_up_bus
SCI-LIN-010	nc_lin_ioctl_wait_for_ready
SCI-LIN-011	nc_lin_ioctl_slave_write
SCI-LIN-012	nc_lin_ioctl_slave_read
SCI-LIN-013	nc_lin_ioctl_slave_read_by_log_mode
[표 127] SW 인터페이스 개요
7.1.10.4.1. [SCI-LIN-001] nc_lin_probe()
Interface ID	SCI-LIN-001
Name	nc_lin_probe
Description	LIN 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 128] nc_lin_probe()인터페이스
7.1.10.4.2. [SCI-LIN-002] nc_lin_ioctl()
Interface ID	SCI-LIN-002
Name	nc_lin_ioctl
Description	LIN에 입력되는 명령의 내부 Interface가 정의되어 있다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 129] nc_lin_ioctl()인터페이스
7.1.10.4.3. [SCI-LIN-003] nc_lin_ioctl_initialize()
Interface ID	SCI-LIN-003
Name	nc_lin_ioctl_initialize
Description	LIN 초기화를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 130] nc_lin_ioctl_initialize()인터페이스
7.1.10.4.4. [SCI-LIN-004] nc_lin_ioctl_deinitialize()
Interface ID	SCI-LIN-004
Name	nc_lin_ioctl_deinitialize
Description	LIN의 Deinitialize를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 131] nc_lin_ioctl_deinitialize()인터페이스
7.1.10.4.5. [SCI-LIN-005] nc_lin_ioctl_master_write()
Interface ID	SCI-LIN-005
Name	nc_lin_ioctl_master_write
Description	Master Mode로 LIN Data를 송신한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 132] nc_lin_ioctl_master_write()인터페이스
7.1.10.4.6. [SCI-LIN-006] nc_lin_ioctl_master_read()
Interface ID	SCI-LIN-006
Name	nc_lin_ioctl_master_read
Description	Master 모드로 LIN Data를 수신한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 133] nc_lin_ioctl_master_read()인터페이스
7.1.10.4.7. [SCI-LIN-007] nc_lin_ioctl_master_read_by_log_mode()
Interface ID	SCI-LIN-007
Name	nc_lin_ioctl_master_read_by_log_mode
Description	Master 모드로 LIN Data를 송신한다.
송신의 방식은 log mode를 사용한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 134] nc_lin_ioctl_master_read_by_log_mode()인터페이스
7.1.10.4.8. [SCI-LIN-008] nc_lin_ioctl_broadcast_bus_sleep()
Interface ID	SCI-LIN-008
Name	nc_lin_ioctl_broadcast_bus_sleep
Description	Broadcast Bus Sleep을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 135] nc_lin_ioctl_broadcast_bus_sleep()인터페이스
7.1.10.4.9. [SCI-LIN-009] nc_lin_ioctl_wake_up_bus()
Interface ID	SCI-LIN-009
Name	nc_lin_ioctl_wake_up_bus
Description	LIN Bus에 Wake UP을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 136] nc_lin_ioctl_wake_up_bus()인터페이스
7.1.10.4.10. [SCI-LIN-010] nc_lin_ioctl_wait_for_ready()
Interface ID	SCI-LIN-010
Name	nc_lin_ioctl_wait_for_ready
Description	LIN의 Ready 상태를 기다린다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 137] nc_lin_ioctl_wait_for_ready()인터페이스
7.1.10.4.11. [SCI-LIN-011] nc_lin_ioctl_slave_write()
Interface ID	SCI-LIN-011
Name	nc_lin_ioctl_slave_write
Description	Slave Mode로 LIN Data를 송신한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 138] nc_lin_ioctl_slave_write()인터페이스
7.1.10.4.12. [SCI-LIN-012] nc_lin_ioctl_slave_read()
Interface ID	SCI-LIN-012
Name	nc_lin_ioctl_slave_read
Description	Slave Mode로 LIN Data를 수신한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 139] nc_lin_ioctl_slave_read()인터페이스
7.1.10.4.13. [SCI-LIN-013] nc_lin_ioctl_slave_read_by_log_mode()
Interface ID	SCI-LIN-013
Name	nc_lin_ioctl_slave_read_by_log_mode
Description	Slave Mode로 LIN Data를 수신한다.
수신 방식은 Log Mod이다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 140] nc_lin_ioctl_slave_read_by_log_mode()인터페이스
7.1.11. [SWC-MMC-001] MMC
7.1.11.1. 개요(Overview)
구분	내용
기능(Function)	Data의 R/W를 위한 MMC의 동작을 제어.
입력(Input)	MMC Parameter
출력(Output)	MMC Read/Write 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-MMC-001, SR-SoC-MMC-002
관련 안전 메커니즘	SM-18, SM-20
[표 141] MMC 기능 개요
7.1.11.2. 정적 설계
  
[그림 15] MMC Interface
7.1.11.3. 동적 설계
7.1.11.3.1. [SCB-MMC-001] Device Initialize
Function Description	MMC 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 142] Device Initialize Sequence Diagram
7.1.11.3.2. [SCB-MMC-002] Command Send
Function Description	MMC Command를 전송한다.
Dynamic   behavior	 
[표 143] Command Send Sequence Diagram
7.1.11.3.3. [SCB-MMC-003] Bus & Mem Initialize
Function Description	MMC의 Bus와 Memory를 초기화 한다.
Dynamic   behavior	 
[표 144] Bus & Mem Initialize Sequence Diagram
7.1.11.4. 인터페이스(Interface)
Interface ID	Name
SCI-MMC-001	nc_mmc_probe
SCI-MMC-002	nc_mmc_send_command
SCI-MMC-003	nc_mmc_dma_transfer
SCI-MMC-004	nc_mmc_set_bus_speed
SCI-MMC-005	nc_mmc_set_low_bus_speed
SCI-MMC-006	nc_mmc_set_high_bus_speed
SCI-MMC-007	nc_mmc_set_high_bus_speed_preset
SCI-MMC-008	nc_mmc_reset
SCI-MMC-009	nc_mmc_bus_initialize
SCI-MMC-010	nc_mmc_mem_initialize
SCI-MMC-011	nc_mmc_inserted
[표 145] SW 인터페이스 개요
7.1.11.4.1. [SCI-MMC-001] nc_mmc_probe()
Interface ID	SCI-MMC-001
Name	nc_mmc_probe
Description	MMC 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다..
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Card Information	N/A
IN	IO Device Name	N/A
반환
항목	범위
N/A	N/A
[표 146] nc_mmc_probe() 인터페이스
7.1.11.4.2. [SCI-MMC-002] nc_mmc_send_command()
Interface ID	SCI-MMC-002
Name	nc_mmc_send_command
Description	Send mmc command
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
IN	Command Value	N/A
IN	Response Type	N/A
IN	Response	N/A
IN	Argument	N/A
IN	Deselect	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 147] nc_mmc_send_command() 인터페이스
7.1.11.4.3. [SCI-MMC-003] nc_mmc_dma_transfer()
Interface ID	SCI-MMC-003
Name	nc_mmc_dma_transfer
Description	transfer mmc dma command
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
IN	Command Value	N/A
IN	Response	N/A
IN	Response Type	N/A
IN	Argument	N/A
IN	Is write	N/A
IN	Is send stop	N/A
IN	GHS Buffer	N/A
IN	Block Size	N/A
IN	Block Count	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 148] nc_mmc_dma_transfer() 인터페이스
7.1.11.4.4. [SCI-MMC-004] nc_mmc_set_bus_speed()
Interface ID	SCI-MMC-004
Name	nc_mmc_set_bus_speed
Description	transfer mmc dma command
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
IN	Frequency	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 149] nc_mmc_set_bus_speed() 인터페이스
7.1.11.4.5. [SCI-MMC-005] nc_mmc_set_low_bus_speed()
Interface ID	SCI-MMC-005
Name	nc_mmc_set_low_bus_speed
Description	Set mmc low bus speed
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 150] nc_mmc_set_low_bus_speed() 인터페이스
7.1.11.4.6. [SCI-MMC-006] nc_mmc_set_high_bus_speed()
Interface ID	SCI-MMC-006
Name	nc_mmc_set_high_bus_speed
Description	Set mmc high bus speed
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 151] nc_mmc_set_high_bus_speed() 인터페이스
7.1.11.4.7. [SCI-MMC-007] nc_mmc_set_high_bus_speed_preset()
Interface ID	SCI-MMC-007
Name	nc_mmc_set_high_bus_speed_preset
Description	Set mmc high bus speed
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
IN	Frequency	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 152] nc_mmc_set_high_bus_speed_preset() 인터페이스
7.1.11.4.8. [SCI-MMC-008] nc_mmc_reset()
Interface ID	SCI-MMC-008
Name	nc_mmc_reset
Description	Reset MMC
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
반환
항목	범위
N/A	N/A
[표 153] nc_mmc_reset() 인터페이스
7.1.11.4.9. [SCI-MMC-009] nc_mmc_bus_initialize()
Interface ID	SCI-MMC-009
Name	nc_mmc_bus_initialize
Description	Initialize Bus
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
IN	Init Memory	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 154] nc_mmc_bus_initialize() 인터페이스
7.1.11.4.10. [SCI-MMC-010] nc_mmc_mem_initialize()
Interface ID	SCI-MMC-010
Name	nc_mmc_mem_initialize
Description	Initialize memory
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 155] nc_mmc_mem_initialize() 인터페이스
7.1.11.4.11. [SCI-MMC-011] nc_mmc_inserted()
Interface ID	SCI-MMC-011
Name	nc_mmc_inserted
Description	Check mmc is inserted or not
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	MMC Information	N/A
반환
항목	범위
Boolean	TRUE or FALSE
[표 156] nc_mmc_inserted() 인터페이스

7.1.12. [SWC-NCDRV-001] NCDRV
7.1.12.1. 개요(Overview)
구분	내용
기능(Function)	NC Driver의 동작을 제어.
입력(Input)	Bus Name
출력(Output)	Descriptor
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-VDMA_CNN-001, SR-SoC-VDMA_H264-001, SR-SoC-ADC-001, SR-SoC-CAN-001, SR-SoC-DMA-001, SR-SoC-H264ENC-001, SR-SoC-I2C-001, SR-SoC-LIN-001, SR-SoC-PWM-001, SR-SoC-SPI-001, SR-SoC-UART-001, SR-SoC-PVT-001, SR-SoC-SF-001, SR-SoC-NCLD-001, SSR-SoC-STM-001, SSR-SoC-CC-001, SSR-SoC-FM-001, SSR-SoC-H264SM-001, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001, SSR-SoC-NPUM-001, SSR-SoC-OIC-001, SSR-SoC-TM-001, SSR-SoC-VM-001, SSR-SoC-WDT-001, SSR-SoC-SE-001
관련 안전 메커니즘	SM-09, SM-15, SM-17, SM-18, SM-19, SM-20, SM-21, SM-22, SM-91
[표 157] NCDRV 기능 개요
7.1.12.2. 정적 설계
 
[그림 16] NCDRV Interface
7.1.12.3. 동적 설계
7.1.12.3.1. [SCB-NCDRV-001] Driver Start UP
Function Description	Device Tree에 등록된 Device를 검색하여 Driver를 초기화 한다.
Dynamic   behavior	 
[표 158] Driver Start UP Sequence Diagram
7.1.12.3.2. [SCB-NCDRV-002] Find Device Name
Function Description	장치 트리와 호환되는 장치 트리 노드를 찾고, 자식 노드의 부모인 경우 부모 노드의 장치 이름을 name_buf에 저장하고 결과를 반환합니다.
Dynamic   behavior	 
[표 159] Find Device Name Sequence Diagram
7.1.12.3.3. [SCB-NCDRV-003] Driver Open
Function Description	입력 bus_name의 Driver Instance Handle을 찾고 Driver Open을 수행한 후 Driver Descriptor를 반환한다.
Dynamic   behavior	 
[표 160] Driver Open Sequence Diagram
7.1.12.3.4. [SCB-NCDRV-004] Driver Close
Function Description	Driver를 Close 한 뒤 결과를 반환한다.
Dynamic   behavior	 
[표 161] Driver Close Sequence Diagram
7.1.12.3.5. [SCB-NCDRV-005] Register Handle
Function Description	각 Driver의 Instance Handle을 Driver Handle Pool에 등록한다.
Dynamic   behavior	 
[표 162] Register Handle Sequence Diagram
7.1.12.3.6. [SCB-NCDRV-006] Device IOCTL 수행
Function Description	각 Driver의 IOCTL을 수행하고 결과를 반환한다.
Dynamic   behavior	 
[표 163] Device IOCTL 수행 Sequence Diagram
7.1.12.4. 인터페이스(Interface)
Interface ID	Name
SCI-NCDRV-001	nc_driver_register_handle
SCI-NCDRV-002	nc_driver_find_device_name
SCI-NCDRV-003	nc_driver_startup
SCI-NCDRV-004	nc_driver_open
SCI-NCDRV-005	nc_driver_close
SCI-NCDRV-006	nc_driver_ioctl
[표 164] SW 인터페이스 개요
7.1.12.4.1. [SCI-NCDRV-001] nc_driver_register_handle()
Interface ID	SCI-NCDRV-001
Name	nc_driver_register_handle
Description	리소스 관리자에 동기화 모듈을 등록한다.
Driver Handle을 Driver Handle Pool에 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Driver Handle	N/A
IN	Instance Handle	0 – 1
반환
항목	범위
N/A	N/A
[표 165] nc_driver_register_handle() 인터페이스
7.1.12.4.2. [SCI-NCDRV-002] nc_driver_find_device_name()
Interface ID	SCI-NCDRV-002
Name	nc_driver_find_device_name
Description	Device Tree를 찾고 자식 Node의 부모 Node 이름을 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Compatible Name	N/A
IN	Device Tree Child Node	N/A
IN	Return Address of Name Buffer	N/A
IN	Name Buffer Length	N/A
IN	Return Address of Name Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 166] nc_driver_find_device_name() 인터페이스
7.1.12.4.3. [SCI-NCDRV-003] nc_driver_startup()
Interface ID	SCI-NCDRV-003
Name	nc_driver_startup
Description	시스템 디바이스 트리와 드라이버를 초기화한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
N/A	N/A	N/A
반환
항목	범위
N/A	N/A
[표 167] nc_driver_startup() 인터페이스
7.1.12.4.4. [SCI-NCDRV-004] nc_driver_open()
Interface ID	SCI-NCDRV-004
Name	nc_driver_open
Description	입력된 Bus 이름의 Drive Instance Handle을 찾아 Device Open을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Bus Name	N/A
반환
항목	범위
Descriptor	N/A
[표 168] nc_driver_open() 인터페이스
7.1.12.4.5. [SCI-NCDRV-005] nc_driver_close()
Interface ID	SCI-NCDRV-005
Name	nc_driver_close
Description	Driver를 Close 하고 결과를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Descriptor of Device Driver	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 169] nc_driver_close() 인터페이스
7.1.12.4.6. [SCI-NCDRV-006] nc_driver_ioctl()
Interface ID	SCI-NCDRV-006
Name	nc_driver_ioctl
Description	Driver를 Close 하고 결과를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Descriptor of Device Driver	N/A
IN	Command Value	N/A
IN	Buffer Address or Value	N/A
IN	Size of Param	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 170] nc_driver_ioctl() 인터페이스
7.1.13. [SWC-NCLD-001] NCLD
7.1.13.1. 개요(Overview)
구분	내용
기능(Function)	저장 장치에 저장되어 있는 Data의 Loading을 수행.
입력(Input)	압축된 Image
출력(Output)	압축 해제된 Image
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-NCLD-001
관련 안전 메커니즘	N/A
[표 171] NCLD 기능 개요
7.1.13.2. 정적 설계
 
[그림 17] NCLD Interface
7.1.13.3. 동적 설계
7.1.13.3.1. [SCB-NCLD-001] NC Loader실행
Function Description	NC Loader를 실행하여 저장 장치에 저장되어 있는 Data를 Loading 한다.
Dynamic   behavior	 
[표 172] NC Loader 실행 Sequence Diagram
7.1.13.4. 인터페이스(Interface)
Interface ID	Name
SCI-NCLD-001	main
[표 173] SW 인터페이스 개요
7.1.13.4.1. [SCI-NCLD-001] main()
Interface ID	SCI-NCLD-001
Name	Main
Description	Application 실행에 필요한 준비를 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
N/A	N/A	N/A
반환
항목	범위
N/A	N/A
[표 174] main() 인터페이스
7.1.14. [SWC-NCLDH-001] NCLDH
7.1.14.1. 개요(Overview)
구분	내용
기능(Function)	File을 Loading을 위한 Wait Mount Done, Wait File Loading, Timed open 기능을 제공.
입력(Input)	File Path
출력(Output)	File Pointer
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-NCLDH-001
관련 안전 메커니즘	N/A
[표 175] NCLDH 기능 개요
7.1.14.2. 정적 설계
 
[그림 18] NCLDH Interface
7.1.14.3. 동적 설계
7.1.14.3.1. [SCB-NCLDH-001] Wait File Loading
Function Description	NC Loader가 모든 Data를 File System에 기록할 때까지 대기한다.
Dynamic   behavior	 
[표 176] Wait File Loading Sequence Diagram
7.1.14.4. 인터페이스(Interface)
Interface ID	Name
SCI-NCLDH-001	nc_loader_wait_for_file
[표 177] SW 인터페이스 개요
7.1.14.4.1. [SCI-NCLDH-001] nc_loader_wait_for_file()
Interface ID	SCI-NCLDH-001
Name	nc_loader_wait_for_file
Description	nc_loader가 입력된 제한 시간 동안 Filesystem에 File을 썼는지 확인하고 결과를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	File Path	N/A
IN	Time Out Value	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 178] nc_loader_wait_for_file() 인터페이스
7.1.15. [SWC-OSAL-001] OSAL
7.1.15.1. 개요(Overview)
구분	내용
기능(Function)	Message Queue와 Task의 제어.
입력(Input)	OSAL Parameter
출력(Output)	Message Queue와 Task 동작에 따른 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-OSAL-001, SR-SoC-OSAL-002
관련 안전 메커니즘	N/A
[표 179] OSAL 기능 개요
7.1.15.2. 정적 설계
 
[그림 19] OSAL Interface
7.1.15.3. 동적 설계
7.1.15.3.1. [SCB-OSAL-001] Initialize & Message Send/Receive
Function Description	OSAL을 초기화 후 메시지 송수신 동작을 수행한다.
Dynamic   behavior	 
[표 180] Initialize & Message Send/Receive Sequence Diagram
7.1.15.4. 인터페이스(Interface)
Interface ID	Name
SCI-OSAL-001	nc_ghs_ipc_create_mq
SCI-OSAL-002	nc_ghs_ipc_mq_send
SCI-OSAL-003	nc_ghs_ipc_mq_receive
SCI-OSAL-004	nc_ghs_ipc_close_mq
SCI-OSAL-005	nc_ghs_create_normal_task
SCI-OSAL-006	nc_ghs_create_task_with_option
[표 181] SW 인터페이스 개요
7.1.15.4.1. [SCI-OSAL-001] nc_ghs_ipc_create_mq()
Interface ID	SCI-OSAL-001
Name	nc_ghs_ipc_create_mq
Description	This function is for creating message queue. (like linux posix message queue).
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	End point name	N/A
IN	Max message size	N/A
IN	Message queue mode	N/A
IN	gpic information	N/A
반환
항목	범위
Error	SUCCESS or FAUILRE
[표 182] nc_ghs_ipc_create_mq() 인터페이스
7.1.15.4.2. [SCI-OSAL-002] nc_ghs_ipc_mq_send()
Interface ID	SCI-OSAL-002
Name	nc_ghs_ipc_mq_send
Description	This function is for sending message queue. (like linux posix message queue)
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	gpic information	N/A
IN	Memory-allocated data pointer	N/A
IN	Sending data length	N/A
IN	End point name	N/A
반환
항목	범위
Error	SUCCESS or FAUILRE
[표 183] nc_ghs_ipc_mq_send() 인터페이스
7.1.15.4.3. [SCI-OSAL-003] nc_ghs_ipc_mq_receive()
Interface ID	SCI-OSAL-003
Name	nc_ghs_ipc_mq_receive
Description	This function is for receiving message queues. (like linux posix message queue).
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	gpic information	N/A
IN	Data pointer	N/A
IN	Data length	N/A
IN	Received Data size	N/A
IN	Received protocol number	N/A
반환
항목	범위
Size	Data size
[표 184] nc_ghs_ipc_mq_receive() 인터페이스
7.1.15.4.4. [SCI-OSAL-004] nc_ghs_ipc_close_mq()
Interface ID	SCI-OSAL-004
Name	nc_ghs_ipc_close_mq
Description	This function is for closing message queue. (like linux posix message queue).
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	gpic information	N/A
반환
항목	범위
void	void
[표 185] nc_ghs_ipc_close_mq() 인터페이스
7.1.15.4.5. [SCI-OSAL-005] nc_ghs_create_normal_task()
Interface ID	SCI-OSAL-005
Name	nc_ghs_create_normal_task
Description	This function is for creating task with usual option.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Function pointer	N/A
IN	Task name	N/A
IN	Task argument	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 186] nc_ghs_create_normal_task() 인터페이스
7.1.15.4.6. [SCI-OSAL-006] nc_ghs_create_task_with_option()
Interface ID	SCI-OSAL-006
Name	nc_ghs_create_task_with_option
Description	This function is for creating task with detail option.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Function Pointer	N/A
IN	Task Name	N/A
IN	Task Argument	N/A
IN	Task Priority	N/A
IN	Task Stack Size	N/A
IN	Running Task	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 187] nc_ghs_create_task_with_option() 인터페이스
7.1.16. [SWC-PVT-001] PVT
7.1.16.1. 개요(Overview)
구분	내용
기능(Function)	Temperature, Voltage와 Process Sensor 제어.
입력(Input)	PVT Parameter
출력(Output)	Temperature와 Voltage Sensor 값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-PVT-001
관련 안전 메커니즘	SM-21, SM-22
[표 188] PVT 기능 개요
7.1.16.2. 정적 설계
 
[그림 20] PVT Interface
7.1.16.3. 동적 설계
7.1.16.3.1. [SCB-PVT-001] Device Initialize
Function Description	PVT 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 189] Device Initialize Sequence Diagram
7.1.16.3.2. [SCB-PVT-002] Device IOCTL 수행
Function Description	PVT Set Calibration Data, Get Voltage와 Get Temperature를 IOCTL Command로 입력 받아 기능을 수행한다.
Dynamic   behavior	 
[표 190] Device IOCTL 수행 Sequence Diagram
7.1.16.4. 인터페이스(Interface)
Interface ID	Name
SCI-PVT-001	nc_pvt_probe
SCI-PVT-002	nc_pvt_ioctl
SCI-PVT-003	nc_pvt_ioctl_set_calibration_data
SCI-PVT-004	nc_pvt_ioctl_get_calibration_data
SCI-PVT-005	nc_pvt_ioctl_get_temperature
SCI-PVT-006	nc_pvt_ioctl_get_voltage
[표 191] SW 인터페이스 개요
7.1.16.4.1. [SCI-PVT-001] nc_pvt_probe()
Interface ID	SCI-PVT-001
Name	nc_pvt_probe
Description	PVT 제어에 필요한 시스템 자원을 요청 및 초기화를 하고 Instance Handle를 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Node Tree	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 192] nc_pvt_probe() 인터페이스
7.1.16.4.2. [SCI-PVT-002] nc_pvt_ioctl()
Interface ID	SCI-PVT-002
Name	nc_pvt_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 193] nc_pvt_ioctl() 인터페이스
7.1.16.4.3. [SCI-PVT-003] nc_pvt_ioctl_set_calibration_data()
Interface ID	SCI-PVT-003
Name	nc_pvt_ioctl_set_calibration_data
Description	PVT 값에 Calibration 값을 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 194] nc_pvt_ioctl_set_calibration_data() 인터페이스
7.1.16.4.4. [SCI-PVT-004] nc_pvt_ioctl_get_calibration_data()
Interface ID	SCI-PVT-004
Name	nc_pvt_ioctl_get_calibration_data
Description	PVT의 Calibration 값을 가져온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 195] nc_pvt_ioctl_get_calibration_data() 인터페이스
7.1.16.4.5. [SCI-PVT-005] nc_pvt_ioctl_get_temperature()
Interface ID	SCI-PVT-005
Name	nc_pvt_ioctl_get_temperature
Description	Temperature Data을 읽어온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 196] nc_pvt_ioctl_get_temperature() 인터페이스
7.1.16.4.6. [SCI-PVT-006] nc_pvt_ioctl_get_voltage()
Interface ID	SCI-PVT-006
Name	nc_pvt_ioctl_get_voltage
Description	Voltage Data를 읽어온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 197] nc_pvt_ioctl_get_voltage() 인터페이스
7.1.17. [SWC-PWM-001] PWM
7.1.17.1. 개요(Overview)
구분	내용
기능(Function)	Pulse Wave의 제어.
입력(Input)	PWM Parameter
출력(Output)	입력에 따른 파형 출력
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-PWM-001, SR-SoC-PWM-002
관련 안전 메커니즘	N/A
[표 198] PWM 기능 개요
7.1.17.2. 정적 설계
 
[그림 21] PWM Interface
7.1.17.3. 동적 설계
7.1.17.3.1. [SCB-PWM-001] Device Initialize
Function Description	PWM 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 199] Device Initialize Sequence Diagram
7.1.17.3.2. [SCB-PWM-002] Device IOCTL 수행
Function Description	IOCTL 명령으로 PWM의 Setting Period, Setting Duty, Setting Polarity, PWM Stop 과 PWM Run 동작을 수행한다.
Dynamic   behavior	 
[표 200] Device IOCTL 수행 Sequence Diagram
7.1.17.4. 인터페이스(Interface)
Interface ID	Name
SCI-PWM-001	nc_pwm_probe
SCI-PWM-002	nc_pwm_ioctl
SCI-PWM-003	nc_pwm_ioctl_initialize
SCI-PWM-004	nc_pwm_ioctl_set_period
SCI-PWM-005	nc_pwm_ioctl_set_duty_rate
SCI-PWM-006	nc_pwm_ioctl_set_dead_zone
SCI-PWM-007	nc_pwm_ioctl_set_polarity
SCI-PWM-008	nc_pwm_ioctl_run
SCI-PWM-009	nc_pwm_ioctl_stop
SCI-PWM-010	nc_pwm_ioctl_set_enable_interrupt
SCI-PWM-011	nc_pwm_ioctl_get_timing_parameter
[표 201] SW 인터페이스 개요
7.1.17.4.1. [SCI-PWM-001] nc_pwm_probe()
Interface ID	SCI-PWM-001
Name	nc_pwm_probe
Description	PWM 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 202] nc_pwm_probe() 인터페이스
7.1.17.4.2. [SCI-PWM-002] nc_pwm_ioctl()
Interface ID	SCI-PWM-002
Name	nc_pwm_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 203] nc_pwm_ioctl() 인터페이스
7.1.17.4.3. [SCI-PWM-003] nc_pwm_ioctl_initialize()
Interface ID	SCI-PWM-003
Name	nc_pwm_ioctl_initialize
Description	PWM을 초기화 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 204] nc_pwm_ioctl_initialize() 인터페이스
7.1.17.4.4. [SCI-PWM-004] nc_pwm_ioctl_set_period()
Interface ID	SCI-PWM-004
Name	nc_pwm_ioctl_set_period
Description	PWM이 Period를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 205] nc_pwm_ioctl_set_period() 인터페이스
7.1.17.4.5. [SCI-PWM-005] nc_pwm_ioctl_set_duty_rate()
Interface ID	SCI-PWM-005
Name	nc_pwm_ioctl_set_duty_rate
Description	PWM의 Duty를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 206] nc_pwm_ioctl_set_duty_rate() 인터페이스
7.1.17.4.6. [SCI-PWM-006] nc_pwm_ioctl_set_dead_zone()
Interface ID	SCI-PWM-006
Name	nc_pwm_ioctl_set_dead_zone
Description	PWM의 Dead Zone을 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 207] nc_pwm_ioctl_set_dead_zone() 인터페이스
7.1.17.4.7. [SCI-PWM-007] nc_pwm_ioctl_set_polarity()
Interface ID	SCI-PWM-007
Name	nc_pwm_ioctl_set_polarity
Description	PWM의 Polarity를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 208] nc_pwm_ioctl_set_polarity() 인터페이스
7.1.17.4.8. [SCI-PWM-008] nc_pwm_ioctl_run()
Interface ID	SCI-PWM-008
Name	nc_pwm_ioctl_run
Description	PWM을 RUN 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 209] nc_pwm_ioctl_run() 인터페이스
7.1.17.4.9. [SCI-PWM-009] nc_pwm_ioctl_stop()
Interface ID	SCI-PWM-009
Name	nc_pwm_ioctl_stop
Description	PWM을 STOP 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 210] nc_pwm_ioctl_stop() 인터페이스
7.1.17.4.10. [SCI-PWM-010] nc_pwm_ioctl_set_enable_interrupt()
Interface ID	SCI-PWM-010
Name	nc_pwm_ioctl_set_enable_interrupt
Description	PWM의 Interrupt를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 211] nc_pwm_ioctl_set_enable_interrupt() 인터페이스
7.1.17.4.11. [SCI-PWM-011] nc_pwm_ioctl_get_timing_parameter()
Interface ID	SCI-PWM-011
Name	nc_pwm_ioctl_get_timing_parameter
Description	PWM의 Timing Parameter를 가져온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 212] nc_pwm_ioctl_get_timing_parameter() 인터페이스
7.1.18. [SWC-SF-001] SF
7.1.18.1. 개요(Overview)
구분	내용
기능(Function)	Data의 R/W를 위한 Serial Flash의 제어.
입력(Input)	SF Parameter
출력(Output)	Serial Flash에 Data를 Read/Write 한 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-SF-001, SR-SoC-SF-002, SR-SoC-SF-003
관련 안전 메커니즘	N/A
[표 213] SF 기능 개요
7.1.18.2. 정적 설계
 
[그림 22] SF Interface
7.1.18.3. 동적 설계
7.1.18.3.1. [SCB-SF-001] Device Initialize
Function Description	Serial Flash를 사용하기 위해 초기화 한다.
Dynamic   behavior	 
[표 214] Device Initialize Sequence Diagram
7.1.18.3.2. [SCB-SF-002] Device IOCTL 수행
Function Description	IOCTL 명령을 통해 Serial Flash에 대한 데이터 읽기, 쓰기, 삭제와 SPI에 Clock 설정을 수행한다.
Dynamic   behavior	 
[표 215] Device IOCTL 수행 Sequence Diagram
7.1.18.4. 인터페이스(Interface)
Interface ID	Name
SCI-SF-001	nc_nor_flash_probe
SCI-SF-002	nc_nor_flash_open
SCI-SF-003	nc_nor_flash_close
SCI-SF-004	nc_nor_flash_ioctl
SCI-SF-005	nc_nor_flash_ioctl_exec_erase
SCI-SF-006	nc_nor_flash_ioctl_exec_page_programe_1_1_1
SCI-SF-007	nc_nor_flash_ioctl_exec_page_programe_1_1_4
SCI-SF-008	nc_nor_flash_ioctl_exec_page_programe_1_4_4
SCI-SF-009	nc_nor_flash_ioctl_exec_read_1_1_1
SCI-SF-010	nc_nor_flash_ioctl_exec_fast_read_1_1_4
SCI-SF-011	nc_nor_flash_ioctl_exec_fast_read_1_4_4
SCI-SF-012	nc_nor_flash_ioctl_set_sclk
SCI-SF-013	nc_nor_flash_ioctl_set_clock_property
SCI-SF-014	nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1
SCI-SF-015	nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4
SCI-SF-016	nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4
[표 216] SW 인터페이스 개요
7.1.18.4.1. [SCI-SF-001] nc_nor_flash_probe()
Interface ID	SCI-SF-001
Name	nc_nor_flash_probe
Description	SF 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 217] nc_nor_flash_probe() 인터페이스
7.1.18.4.2. [SCI-SF-002] nc_nor_flash_open()
Interface ID	SCI-SF-002
Name	nc_nor_flash_open
Description	Serial Flash Driver를 Open 할 때 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 218] nc_nor_flash_open() 인터페이스
7.1.18.4.3. [SCI-SF-003] nc_nor_flash_close()
Interface ID	SCI-SF-003
Name	nc_nor_flash_close
Description	Serial Flash Driver를 Close 할 때 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
반환
항목	범위
N/A	N/A
[표 219] nc_nor_flash_close() 인터페이스
7.1.18.4.4. [SCI-SF-004] nc_nor_flash_ioctl()
Interface ID	SCI-SF-004
Name	nc_nor_flash_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 220] nc_nor_flash_ioctl() 인터페이스
7.1.18.4.5. [SCI-SF-005] nc_nor_flash_ioctl_exec_erase()
Interface ID	SCI-SF-005
Name	nc_nor_flash_ioctl_exec_erase
Description	Serial Flash Data의 Erase를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 221] nc_nor_flash_ioctl_exec_erase() 인터페이스
7.1.18.4.6. [SCI-SF-006] nc_nor_flash_ioctl_exec_page_programe_1_1_1()
Interface ID	SCI-SF-006
Name	nc_nor_flash_ioctl_exec_page_programe_1_1_1
Description	Single SPI 모드로 Serial Flash에 Data를 Write 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 222] nc_nor_flash_ioctl_exec_page_programe_1_1_1() 인터페이스
7.1.18.4.7. [SCI-SF-007] nc_nor_flash_ioctl_exec_page_programe_1_1_4()
Interface ID	SCI-SF-007
Name	nc_nor_flash_ioctl_exec_page_programe_1_1_4
Description	Quad SPI 모드로 Serial Flash에 Data를 Write 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 223] nc_nor_flash_ioctl_exec_page_programe_1_1_4() 인터페이스
7.1.18.4.8. [SCI-SF-008] nc_nor_flash_ioctl_exec_page_programe_1_4_4()
Interface ID	SCI-SF-008
Name	nc_nor_flash_ioctl_exec_page_programe_1_4_4
Description	Quad SPI 모드로 Serial Flash에 Data를 Write 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 224] nc_nor_flash_ioctl_exec_page_programe_1_4_4() 인터페이스
7.1.18.4.9. [SCI-SF-009] nc_nor_flash_ioctl_exec_read_1_1_1()
Interface ID	SCI-SF-009
Name	nc_nor_flash_ioctl_exec_read_1_1_1
Description	Single SPI 모드로 Serial Flash에서 Data를 Read 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 225] nc_nor_flash_ioctl_exec_read_1_1_1() 인터페이스
7.1.18.4.10. [SCI-SF-010] nc_nor_flash_ioctl_exec_fast_read_1_1_4()
Interface ID	SCI-SF-010
Name	nc_nor_flash_ioctl_exec_fast_read_1_1_4
Description	Quad SPI 모드로 Serial Flash에서 Data를 Read 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 226] nc_nor_flash_ioctl_exec_fast_read_1_1_4() 인터페이스
7.1.18.4.11. [SCI-SF-011] nc_nor_flash_ioctl_exec_fast_read_1_4_4()
Interface ID	SCI-SF-011
Name	nc_nor_flash_ioctl_exec_fast_read_1_4_4
Description	Quad SPI 모드로 Serial Flash에서 Data를 Read 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 227] nc_nor_flash_ioctl_exec_fast_read_1_4_4() 인터페이스
7.1.18.4.12. [SCI-SF-012] nc_nor_flash_ioctl_set_sclk()
Interface ID	SCI-SF-012
Name	nc_nor_flash_ioctl_set_sclk
Description	SPI의 sclk를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 228] nc_nor_flash_ioctl_set_sclk() 인터페이스
7.1.18.4.13. [SCI-SF-013] nc_nor_flash_ioctl_set_clock_property()
Interface ID	SCI-SF-013
Name	nc_nor_flash_ioctl_set_clock_property
Description	Clock Property를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 229] nc_nor_flash_ioctl_set_clock_property() 인터페이스
7.1.18.4.14. [SCI-SF-014] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1()
Interface ID	SCI-SF-014
Name	nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1
Description	Single SPI 모드로 Serial Flash에 Data를 쓴 뒤 Data를 확인하여 Success/Failure을 판별한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 230] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1() 인터페이스
7.1.18.4.15. [SCI-SF-015] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4()
Interface ID	SCI-SF-015
Name	nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4
Description	Quad SPI 모드로 Serial Flash에 Data를 쓴 뒤 Data를 확인하여 Success/Failure을 판별한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 231] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4() 인터페이스
7.1.18.4.16. [SCI-SF-016] nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4()
Interface ID	SCI-SF-016
Name	nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4
Description	Quad SPI 모드로 Serial Flash에 Data를 쓴 뒤 Data를 확인하여 Success/Failure을 판별한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 232] nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4() 인터페이스
7.1.19. [SWC-SPI-001] SPI
7.1.19.1. 개요(Overview)
구분	내용
기능(Function)	Serial Flash와 통신을 위한 SPI의 제어.
입력(Input)	SPI Parameter
출력(Output)	Data Read/Write 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-SPI-001, SR-SoC-SPI-002
관련 안전 메커니즘	SM-18, SM-19
[표 233] SPI 기능 개요
7.1.19.2. 정적 설계
 
[그림 23] SPI Interface
7.1.19.3. 동적 설계
7.1.19.3.1. [SCB-SPI-001] Device Initialize
Function Description	SPI 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 234] Device Initialize Sequence Diagram
7.1.19.3.2. [SCB-SPI-002] Device IOCTL 수행
Function Description	SPI Set Clock Speed, Data Write와 Data Read를 IOCTL Command로 입력 받아 기능을 수행한다.
Dynamic   behavior	 
[표 235] Device IOCTL 수행 Sequence Diagram
7.1.19.4. 인터페이스(Interface)
Interface ID	Name
SCI-SPI-001	nc_spi_probe
SCI-SPI-002	nc_spi_ioctl
SCI-SPI-003	nc_spi_ioctl_set_sclk
SCI-SPI-004	nc_spi_ioctl_set_clock_property
SCI-SPI-005	nc_spi_ioctl_set_quad_config
SCI-SPI-006	nc_spi_ioctl_transfer
SCI-SPI-007	nc_spi_ioctl_quad_read
SCI-SPI-008	nc_spi_ioctl_quad_write
[표 236] SW 인터페이스 개요
7.1.19.4.1. [SCI-SPI-001] nc_spi_probe()
Interface ID	SCI-SPI-001
Name	nc_spi_probe
Description	SPI 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 237] nc_spi_probe() 인터페이스
7.1.19.4.2. [SCI-SPI-002] nc_spi_ioctl()
Interface ID	SCI-SPI-002
Name	nc_spi_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 238] nc_spi_ioctl() 인터페이스
7.1.19.4.3. [SCI-SPI-003] nc_spi_ioctl_set_sclk()
Interface ID	SCI-SPI-003
Name	nc_spi_ioctl_set_sclk
Description	SPI의 sclk를 Instance Handle에 저장한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 239] nc_spi_ioctl_set_sclk() 인터페이스
7.1.19.4.4. [SCI-SPI-004] nc_spi_ioctl_set_clock_property()
Interface ID	SCI-SPI-004
Name	nc_spi_ioctl_set_clock_property
Description	SPI의 Clock 속성을 Instance Handle에 저장한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 240] nc_spi_ioctl_set_clock_property() 인터페이스
7.1.19.4.5. [SCI-SPI-005] nc_spi_ioctl_set_quad_config()
Interface ID	SCI-SPI-005
Name	nc_spi_ioctl_set_quad_config
Description	SPI의 Quad Configuration을 Instance Handle에 저장한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 241] nc_spi_ioctl_set_quad_config() 인터페이스
7.1.19.4.6. [SCI-SPI-006] nc_spi_ioctl_transfer()
Interface ID	SCI-SPI-006
Name	nc_spi_ioctl_transfer
Description	Single SPI Mode로 Data를 전송한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 242] nc_spi_ioctl_transfer() 인터페이스
7.1.19.4.7. [SCI-SPI-007] nc_spi_ioctl_quad_read()
Interface ID	SCI-SPI-007
Name	nc_spi_ioctl_quad_read
Description	Quad SPI Mode로 Data를 읽어온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 243] nc_spi_ioctl_quad_read() 인터페이스
7.1.19.4.8. [SCI-SPI-008] nc_spi_ioctl_quad_write()
Interface ID	SCI-SPI-008
Name	nc_spi_ioctl_quad_write
Description	Quad SPI Mode로 Data를 쓴다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 244] nc_spi_ioctl_quad_write() 인터페이스
7.1.20. [SWC-SYS-001] SYS
7.1.20.1. 개요(Overview)
구분	내용
기능(Function)	System 구동에 필요한 GPIO, Clock와 Reset 제어.
입력(Input)	System Parameter
출력(Output)	System의 구동 성공 여부 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-SYS-001, SR-SoC-SYS-002, SR-SoC-SYS-003
관련 안전 메커니즘	N/A
[표 245] SYS 기능 개요
7.1.20.2. 정적 설계
 
[그림 24] SYS Interface
7.1.20.3. 동적 설계
7.1.20.3.1. [SCB-SYS-001] Reserved Memory Initialize
Function Description	CMA Buffer 예약을 수행한다.
Dynamic   behavior	 
[표 246] Reserved Memory Initialize Sequence Diagram
7.1.20.3.2. [SCB-SYS-002] Get/Set PLL Ratio
Function Description	PLL Ratio를 Get/Set 한다.
Dynamic   behavior	 
[표 247] Get/Set PLL Ratio Diagram
7.1.20.4. 인터페이스(Interface)
Interface ID	Name
N/A	N/A
[표 248] SW 인터페이스 개요
7.1.21. [SWC-TS-001] TS
7.1.21.1. 개요(Overview)
구분	내용
기능(Function)	Time Stamp의 기능을 제어.
입력(Input)	Timer Parameter
출력(Output)	Time Stamp 결과값
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-TS-001
관련 안전 메커니즘	N/A
[표 249] TS 기능 개요
7.1.21.2. 정적 설계
 
[그림 25] TS Interface
7.1.21.3. 동적 설계
7.1.21.3.1. [SCB-TS-001] Get Time Stamp
Function Description	Micro Second 단위로 Time Stamp 값을 가져온다.
Dynamic   behavior	 
[표 250] Get Time Stamp Sequence Diagram
7.1.21.4. 인터페이스(Interface)
Interface ID	Name
SCI-TS-001	nc_timestamp_get_rtc_us
SCI-TS-002	nc_timestamp_get_elapsed_rtc_us
[표 251] SW 인터페이스 개요
7.1.21.4.1. [SCI-TS-001] nc_timestamp_get_rtc_us()
Interface ID	SCI-TS-001
Name	nc_timestamp_get_rtc_us
Description	us(Micro Second) 단위로 Time Stamp 값을 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
N/A	N/A	N/A
반환
항목	범위
Time Stamp	N/A
[표 252] nc_timestamp_get_rtc_us() 인터페이스
7.1.21.4.2. [SCI-TS-002] nc_timestamp_get_elapsed_rtc_us()
Interface ID	SCI-TS-002
Name	nc_timestamp_get_elapsed_rtc_us
Description	경과 시간을 us(Micro Second) 단위로 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Start Time	N/A
반환
항목	범위
Elapsed Time	N/A
[표 253] nc_timestamp_get_elapsed_rtc_us() 인터페이스
7.1.22. [SWC-UART-001] UART
7.1.22.1. 개요(Overview)
구분	내용
기능(Function)	디버깅을 위한 UART 통신을 제어.
입력(Input)	UART Parameter
출력(Output)	UART Data 출력
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-UART-001, SR-SoC-UART-002
관련 안전 메커니즘	N/A
[표 254] UART 기능 개요
7.1.22.2. 정적 설계
 
[그림 26] UART Interface
7.1.22.3. 동적 설계
7.1.22.3.1. [SCB-UART-001] Device Initialize
Function Description	UART를 사용하기 위해 Device를 초기화 한다.
Dynamic   behavior	 
[표 255] Device Initialize Sequence Diagram
7.1.22.3.2. [SCB-UART-002] UART Send & Receive
Function Description	UART의 Send & Receive를 수행한다.
Dynamic   behavior	 
[표 256] UART Send & Receive Sequence Diagram
7.1.22.4. 인터페이스(Interface)
Interface ID	Name
SCI-UART-001	nc_uart_probe
SCI-UART-002	nc_uart_open
SCI-UART-003	nc_uart_ioctl
SCI-UART-004	nc_uart_ioctl_set_xfer_mode
SCI-UART-005	nc_uart_ioctl_transmit
SCI-UART-006	nc_uart_ioctl_receive
[표 257] SW 인터페이스 개요
7.1.22.4.1. [SCI-UART-001] nc_uart_probe()
Interface ID	SCI-UART-001
Name	nc_uart_probe
Description	UART 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 258] nc_uart_probe() 인터페이스
7.1.22.4.2. [SCI-UART-002] nc_uart_open()
Interface ID	SCI-UART-002
Name	nc_uart_open
Description	UART Driver Open 시 수행되는 작업이 정의되어 있다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 259] nc_uart_open() 인터페이스
7.1.22.4.3. [SCI-UART-003] nc_uart_ioctl()
Interface ID	SCI-UART-003
Name	nc_uart_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 260] nc_uart_ioctl() 인터페이스
7.1.22.4.4. [SCI-UART-004] nc_uart_ioctl_set_xfer_mode()
Interface ID	SCI-UART-004
Name	nc_uart_ioctl_set_xfer_mode
Description	UART 전송 모드를 설정하고 결과를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 261] nc_uart_ioctl_set_xfer_mode() 인터페이스
7.1.22.4.5. [SCI-UART-005] nc_uart_ioctl_transmit()
Interface ID	SCI-UART-005
Name	nc_uart_ioctl_transmit
Description	UART 전송을 수행하고 결과를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 262] nc_uart_ioctl_transmit() 인터페이스
7.1.22.4.6. [SCI-UART-006] nc_uart_ioctl_receive()
Interface ID	SCI-UART-006
Name	nc_uart_ioctl_receive
Description	UART 수신을 수행하고 결과를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 263] nc_uart_ioctl_receive() 인터페이스
7.1.23. [SWC-VDMA_CNN-001] VDMA_CNN
7.1.23.1. 개요(Overview)
구분	내용
기능(Function)	VDMA CNN의 기능을 제어.
입력(Input)	Buffer Information, Resolution
출력(Output)	Video Image Data
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-VDMA_CNN-001, SR-SoC-VDMA_CNN-002
관련 안전 메커니즘	N/A
[표 264] VDMA_CNN 기능 개요
7.1.23.2. 정적 설계
 
[그림 27] VDMA_CNN Interface
7.1.23.3. 동적 설계
7.1.23.3.1. [SCB-VDMA_CNN-001] VDMA_CNN Initialize
Function Description	VDMA_CNN을 사용하기 위해 초기화 한다.
Dynamic   behavior	 
[표 265] VDMA_CNN Initialize Sequence Diagram
7.1.23.3.2. [SCB-VDMA_CNN-002] VDMA_CNN IOCTL 수행
Function Description	VDMA_CNN의 Command를 수행한다.
Dynamic   behavior	 
[표 266] VDMA_CNN IOCTL 수행 Sequence Diagram
7.1.23.4. 인터페이스(Interface)
Interface ID	Name
SCI-VDMA_CNN-001	nc_vdma_cnn_probe
SCI-VDMA_CNN-002	nc_vdma_cnn_ioctl
SCI-VDMA_CNN-003	nc_vdma_cnn_ioctl_set_resolution_of_write
SCI-VDMA_CNN-004	nc_vdma_cnn_ioctl_set_resolution_of_scan
SCI-VDMA_CNN-005	nc_vdma_cnn_ioctl_enable_write
SCI-VDMA_CNN-006	nc_vdma_cnn_ioctl_disable_write
SCI-VDMA_CNN-007	nc_vdma_cnn_ioctl_enable_scan
SCI-VDMA_CNN-008	nc_vdma_cnn_ioctl_disable_scan
SCI-VDMA_CNN-009	nc_vdma_cnn_ioctl_start_scan
SCI-VDMA_CNN-010	nc_vdma_cnn_ioctl_set_input_of_scan
SCI-VDMA_CNN-011	nc_vdma_cnn_ioctl_get_index_of_scan_input
SCI-VDMA_CNN-012	nc_vdma_cnn_ioctl_get_buf_info_of_write_output
SCI-VDMA_CNN-013	nc_vdma_cnn_ioctl_get_buf_info_of_scan_input
SCI-VDMA_CNN-014	nc_vdma_cnn_ioctl_get_buf_info_of_scan_output
SCI-VDMA_CNN-015	nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input
SCI-VDMA_CNN-016	nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output
[표 267] SW 인터페이스 개요
7.1.23.4.1. [SCI-VDMA_CNN-001] nc_vdma_cnn_probe()
Interface ID	SCI-VDMA_CNN-001
Name	nc_vdma_cnn_probe
Description	VDMA_CNN 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 268] nc_vdma_cnn_probe() 인터페이스
7.1.23.4.2. [SCI-VDMA_CNN-002] nc_vdma_cnn_ioctl()
Interface ID	SCI-VDMA_CNN-002
Name	nc_vdma_cnn_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 269] nc_vdma_cnn_ioctl() 인터페이스
7.1.23.4.3. [SCI-VDMA_CNN-003] nc_vdma_cnn_ioctl_set_resolution_of_write()
Interface ID	SCI-VDMA_CNN-003
Name	nc_vdma_cnn_ioctl_set_resolution_of_write
Description	CNN Write에 대한 Resolution을 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 270] nc_vdma_cnn_ioctl_set_resolution_of_write() 인터페이스
7.1.23.4.4. [SCI-VDMA_CNN-004] nc_vdma_cnn_ioctl_set_resolution_of_scan()
Interface ID	SCI-VDMA_CNN-004
Name	nc_vdma_cnn_ioctl_set_resolution_of_scan
Description	CNN Scan에 대한 Resolution을 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 271] nc_vdma_cnn_ioctl_set_resolution_of_scan() 인터페이스
7.1.23.4.5. [SCI-VDMA_CNN-005] nc_vdma_cnn_ioctl_enable_write()
Interface ID	SCI-VDMA_CNN-005
Name	nc_vdma_cnn_ioctl_enable_write
Description	CNN Write를 Enable 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 272] nc_vdma_cnn_ioctl_enable_write() 인터페이스
7.1.23.4.6. [SCI-VDMA_CNN-006] nc_vdma_cnn_ioctl_disable_write()
Interface ID	SCI-VDMA_CNN-006
Name	nc_vdma_cnn_ioctl_disable_write
Description	CNN Write를 Disable 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 273] nc_vdma_cnn_ioctl_disable_write() 인터페이스
7.1.23.4.7. [SCI-VDMA_CNN-007] nc_vdma_cnn_ioctl_enable_scan()
Interface ID	SCI-VDMA_CNN-007
Name	nc_vdma_cnn_ioctl_enable_scan
Description	CNN Scan을 Enable 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 274] nc_vdma_cnn_ioctl_enable_scan() 인터페이스
7.1.23.4.8. [SCI-VDMA_CNN-008] nc_vdma_cnn_ioctl_disable_scan()
Interface ID	SCI-VDMA_CNN-008
Name	nc_vdma_cnn_ioctl_disable_scan
Description	CNN Scan을 Disable 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 275] nc_vdma_cnn_ioctl_disable_scan() 인터페이스
7.1.23.4.9. [SCI-VDMA_CNN-009] nc_vdma_cnn_ioctl_start_scan()
Interface ID	SCI-VDMA_CNN-009
Name	nc_vdma_cnn_ioctl_start_scan
Description	CNN Scan을 Start 한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 276] nc_vdma_cnn_ioctl_start_scan() 인터페이스
7.1.23.4.10. [SCI-VDMA_CNN-010] nc_vdma_cnn_ioctl_set_input_of_scan()
Interface ID	SCI-VDMA_CNN-010
Name	nc_vdma_cnn_ioctl_set_input_of_scan
Description	CNN Scan의 Input Source Path를 설정한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 277] nc_vdma_cnn_ioctl_set_input_of_scan() 인터페이스
7.1.23.4.11. [SCI-VDMA_CNN-011] nc_vdma_cnn_ioctl_get_index_of_scan_input()
Interface ID	SCI-VDMA_CNN-011
Name	nc_vdma_cnn_ioctl_get_index_of_scan_input
Description	CNN Scan 입력 버퍼의 Index 값을 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 278] nc_vdma_cnn_ioctl_get_index_of_scan_input() 인터페이스
7.1.23.4.12. [SCI-VDMA_CNN-012] nc_vdma_cnn_ioctl_get_buf_info_of_write_output()
Interface ID	SCI-VDMA_CNN-012
Name	nc_vdma_cnn_ioctl_get_buf_info_of_write_output
Description	CNN Write의 구성 정보를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 279] nc_vdma_cnn_ioctl_get_buf_info_of_write_output() 인터페이스
7.1.23.4.13. [SCI-VDMA_CNN-013] nc_vdma_cnn_ioctl_get_buf_info_of_scan_input()
Interface ID	SCI-VDMA_CNN-013
Name	nc_vdma_cnn_ioctl_get_buf_info_of_scan_input
Description	CNN Scan의 입력 버퍼 구성 정보를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 280] nc_vdma_cnn_ioctl_get_buf_info_of_scan_input() 인터페이스
7.1.23.4.14. [SCI-VDMA_CNN-014] nc_vdma_cnn_ioctl_get_buf_info_of_scan_output()
Interface ID	SCI-VDMA_CNN-014
Name	nc_vdma_cnn_ioctl_get_buf_info_of_scan_output
Description	CNN Scan의 출력 버퍼 구성 정보를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 281] nc_vdma_cnn_ioctl_get_buf_info_of_scan_output() 인터페이스
7.1.23.4.15. [SCI-VDMA_CNN-015] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input()
Interface ID	SCI-VDMA_CNN-015
Name	nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input
Description	CNN Scan의 입력 버퍼 Interval Size를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 282] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input() 인터페이스
7.1.23.4.16. [SCI-VDMA_CNN-016] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output()
Interface ID	SCI-VDMA_CNN-016
Name	nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output
Description	CNN Scan의 출력 버퍼 Interval Size를 반환한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 283] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output() 인터페이스
7.1.24. [SWC-VDMA_H264-001] VDMA_H264
7.1.24.1. 개요(Overview)
구분	내용
기능(Function)	VDMA H264의 기능을 제어.
입력(Input)	Buffer Information, Resolution
출력(Output)	Video Image Data
ASIL	B
개발 형태 	신규
관련 요구사항	SR-SoC-VDMA_H264-001, SR-SoC-VDMA_H264-002
관련 안전 메커니즘	N/A
[표 284] VDMA_H264 기능 개요
7.1.24.2. 정적 설계
 
[그림 28] VDMA_H264 Interface
7.1.24.3. 동적 설계
7.1.24.3.1. [SCB-VDMA_H264-001] VDMA_H264 Initialize
Function Description	VDMA_H264 사용을 위해 초기화 한다.
Dynamic   behavior	 
[표 285] VDMA_H264 Initialize Sequence Diagram
7.1.24.3.2. [SCB-VDMA_H264-002] VDMA_H264 Command 수행
Function Description	IOCTL로 VDMA_H264에 Command가 전달되면 Command에 맞는 동작을 수행한다.
Dynamic   behavior	 
[표 286] VDMA_H264 Command 수행 Sequence Diagram
7.1.24.4. 인터페이스(Interface)
Interface ID	Name
SCI-VDMA_H264-001	nc_vdma_h264_probe
SCI-VDMA_H264-002	nc_vdma_h264_ioctl
SCI-VDMA_H264-003	nc_vdma_h264_ioctl_init
SCI-VDMA_H264-004	nc_vdma_h264_ioctl_enable
SCI-VDMA_H264-005	nc_vdma_h264_ioctl_disable
SCI-VDMA_H264-006	nc_vdma_h264_ioctl_get_resolution
[표 287] SW 인터페이스 개요
7.1.24.4.1. [SCI-VDMA_H264-001] nc_vdma_h264_probe()
Interface ID	SCI-VDMA_H264-001
Name	nc_vdma_h264_probe
Description	VDMA_H264 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Device Tree Node	N/A
IN	Driver Descriptor	N/A
반환
항목	범위
N/A	N/A
[표 288] nc_vdma_h264_probe() 인터페이스
7.1.24.4.2. [SCI-VDMA_H264-002] nc_vdma_h264_ioctl()
Interface ID	SCI-VDMA_H264-002
Name	nc_vdma_h264_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 289] nc_vdma_h264_ioctl() 인터페이스
7.1.24.4.3. [SCI-VDMA_H264-003] nc_vdma_h264_ioctl_init()
Interface ID	SCI-VDMA_H264-003
Name	nc_vdma_h264_ioctl_init
Description	VDMA H264 초기화를 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 290] nc_vdma_h264_ioctl_init() 인터페이스
7.1.24.4.4. [SCI-VDMA_H264-004] nc_vdma_h264_ioctl_enable()
Interface ID	SCI-VDMA_H264-004
Name	nc_vdma_h264_ioctl_enable
Description	VDMA H264 Enable을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
N/A	N/A
[표 291] nc_vdma_h264_ioctl_enable() 인터페이스
7.1.24.4.5. [SCI-VDMA_H264-005] nc_vdma_h264_ioctl_disable()
Interface ID	SCI-VDMA_H264-005
Name	nc_vdma_h264_ioctl_disable
Description	VDMA H264 Disable을 수행한다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
N/A	N/A
[표 292] nc_vdma_h264_ioctl_disable() 인터페이스
7.1.24.4.6. [SCI-VDMA_H264-006] nc_vdma_h264_ioctl_get_resolution()
Interface ID	SCI-VDMA_H264-006
Name	nc_vdma_h264_ioctl_get_resolution
Description	VDMA H264에 대한 Resolution 정보를 가져온다.
Call Condition	단발적(On demand)
파라메타
항목	범위
IN	Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
반환
항목	범위
Error	SUCCESS or FAILURE
[표 293] nc_vdma_h264_ioctl_get_resolution() 인터페이스
7.2. SW 기능안전 컴포넌트(SW Safety Component)
7.2.1. [SWC-CC-001] CC
7.2.1.1. 개요(Overview)
구분	내용
기능(Function)	Communication Controller에 Error가 발생하면 SE에 Fault를 전달한다.
입력(Input)	Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-CC-001
관련 안전 메커니즘	SM-20
[표 294] CC 기능 개요
7.2.1.2. 정적 설계
 
 [그림 29] CC 컴포넌트 관계도
7.2.1.3. 동적 설계
7.2.1.3.1. [SCB-CC-001] Run Communication Controller
Function Description	LIN, CAN, MMC, GMAC의 Fault를 검사하는 Communication Controller를 실행한다.
Dynamic   behavior	 
[표 295] Run Communication Controller Sequence Diagram
7.2.1.4. 인터페이스(Interface)
Interface ID	Name
SCI-CC-001	nc_set_communication_controller_fault
 [표 296] CC 인터페이스 개요
7.2.1.4.1. [SCI-CC-001] nc_set_communication_controller_fault()
Interface ID	SCI-CC-001
Name	nc_set_communication_controller_fault
Description	Communication Controller의 오류 감지를 위해 레지스터에 Fault를 등록한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Instance Parameter Address	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 297] nc_set_communication_controller_fault() 인터페이스
7.2.2. [SWC-CM-001] CM
7.2.2.1. 개요(Overview)
구분	내용
기능(Function)	Clock Monitoring에 Error가 발생하면 SE에 Fault를 전달한다.
입력(Input)	Clock Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-CM-001, SSR-SoC-CM-002
관련 안전 메커니즘	SM-08
[표 298] CM 기능 개요
7.2.2.2. 정적 설계
 
 [그림 30] CM 컴포넌트 관계도
7.2.2.3. 동적 설계
7.2.2.3.1.  [SCB-CM-001] Run Clock Monitoring Task
Function Description	Clock Monitoring Task를 실행한다.
Dynamic   behavior	 
[표 299] Run Clock Monitoring Task Sequence Diagram
7.2.2.4. 인터페이스(Interface)
Interface ID	Name
SCI-CM-001	clock_monitor_task
 [표 300] CM 인터페이스 개요
7.2.2.4.1. [SCI-CM-001] clock_monitor_task()
Interface ID	SCI-CM-001
Name	clock_monitor_task
Description	Clock Monitoring Task를 실행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 301] clock_monitor_task() 인터페이스
7.2.3. [SWC-FM-001] FM
7.2.3.1. 개요(Overview)
구분	내용
기능(Function)	IP Block들의 Fault Register를 Masking 하고 Fault를 체크한다.
Fault가 Masking되는 Block은 CPU, H264, DDR, HSP, ISP이다.
그리고 User Task를 만들어 Application에서 구현되는 DMA와 Ethernet의 Fault를 체크한다.
입력(Input)	Fault Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-FM-001, SSR-SoC-FM-002
관련 안전 메커니즘	SM-09
[표 302] FM 기능 개요
7.2.3.2. 정적 설계
 
 [그림 31] FM 컴포넌트 관계도
7.2.3.3. 동적 설계
7.2.3.3.1. [SCB-FM-001] Run Fault Monitoring Task
Function Description	Fault의 Check하는 Monitoring Task를 실행한다.
Dynamic   behavior	 
[표 303] Run Fault Monitoring Task Sequence Diagram
7.2.3.3.2. [SCB-FM-002] Fault Receive From User Task
Function Description	User Task의 Fault를 Monitoring을 한다.
Dynamic   behavior	 
[표 304] Fault Receive From User Task Sequence Diagram
7.2.3.4. 인터페이스(Interface)
Interface ID	Name
SCI-FM-001	ip_fault_monitor_task
SCI-FM-002	ip_fault_receive_from_user_task
 [표 305] FM 인터페이스 개요
7.2.3.4.1. [SCI-FM-001] ip_fault_monitor_task()
Interface ID	SCI-FM-001
Name	ip_fault_monitor_task
Description	Fault Monitor Task를 실행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 306] ip_fault_monitor_task() 인터페이스
7.2.3.4.2. [SCI-FM-002] ip_fault_receive_from_user_task()
Interface ID	SCI-FM-002
Name	ip_fault_receive_from_user_task
Description	Receives a failure from the user task.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 307] ip_fault_receive_from_user_task() 인터페이스
7.2.4. [SWC-H264SM-001] H264SM
7.2.4.1. 개요(Overview)
구분	내용
기능(Function)	H264ENC 수행 중 Error가 발생하면 SE에 Fault를 전달한다.
입력(Input)	H264 Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-H264SM-001
관련 안전 메커니즘	SM-09
[표 308] H264SM 기능 개요
7.2.4.2. 정적 설계
 
 [그림 32] H264SM 컴포넌트 관계도
7.2.4.3. 동적 설계
7.2.4.3.1.  [SCB-H264SM-001] Run H264 Safety Monitoring
Function Description	H264의 Fault Check를 위해 Safety Monitoring을 실행한다.
Dynamic   behavior	 
[표 309] Run H264 Safety Monitoring Sequence Diagram
7.2.4.4. 인터페이스(Interface)
Interface ID	Name
SCI-H264SM-001	h264_monitor_task
 [표 310] H264SM 인터페이스 개요
7.2.4.4.1. [SCI-H264SM-001] h264_monitor_task()
Interface ID	SCI-H264SM-001
Name	h264_monitor_task
Description	H264 Monitoring Task를 실행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 311] h264_monitor_task() 인터페이스
7.2.5. [SWC-IFRB-001] IFRB
7.2.5.1. 개요(Overview)
구분	내용
기능(Function)	통신 인터페이스(I2C, SPI)에서 Read Back Error가 발생하면 SE에 Fault를 전달.
입력(Input)	IFRB Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-IFRB-001
관련 안전 메커니즘	SM-19
[표 312] IFRB 기능 개요
7.2.5.2. 정적 설계
 
 [그림 33] IFRB 컴포넌트 관계도
7.2.5.3. 동적 설계
7.2.5.3.1.  [SCB-IFRB-001] Set Read Back Error
Function Description	Read Back Error를 Masking한다.
Dynamic   behavior	 
[표 313] Set Read Back Error Sequence Diagram
7.2.5.4. 인터페이스(Interface)
Interface ID	Name
SCI-IFRB-001	nc_set_interface_readback_status
 [표 314] IFRB 인터페이스 개요
7.2.5.4.1. [SCI-IFRB-001] nc_set_interface_readback_status()
Interface ID	SCI-IFRB-001
Name	nc_set_interface_readback_status
Description	Set IFRB Status.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Instance	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 315] nc_set_interface_readback_status() 인터페이스
7.2.6. [SWC-IFTO-001] IFTO
7.2.6.1. 개요(Overview)
구분	내용
기능(Function)	통신 인터페이스(I2C, SPI, MMC)에서 Time Out Error가 발생하면 SE에 Fault를 전달.
입력(Input)	IFTO Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-IFTO-001
관련 안전 메커니즘	SM-18
[표 316] IFTO 기능 개요
7.2.6.2. 정적 설계
 
 [그림 34] IFTO 컴포넌트 관계도
7.2.6.3. 동적 설계
7.2.6.3.1.  [SCB-IFTO-001] Set Time Out Masking
Function Description	Time Out Error를 Masking한다.
Dynamic   behavior	 
[표 317] Set Time Out Masking Sequence Diagram
7.2.6.4. 인터페이스(Interface)
Interface ID	Name
SCI-IFTO-001	nc_set_interface_timeout_status
 [표 318] IFTO 인터페이스 개요
7.2.6.4.1. [SCI-IFTO-001] nc_set_interface_timeout_status()
Interface ID	SCI-IFTO-001
Name	nc_set_interface_timeout_status
Description	Set IFTO Status.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Instance	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 319] nc_set_interface_timeout_status() 인터페이스
7.2.7. [SWC-MI-001] MI
7.2.7.1. 개요(Overview)
구분	내용
기능(Function)	Memory Integrity 검사에서 Error가 발생하면 SE에 Fault를 전달.
입력(Input)	MI Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-MI-001, SSR-SoC-MI-002
관련 안전 메커니즘	SM-10
[표 320] MI 기능 개요
7.2.7.2. 정적 설계
 
 [그림 35] MI 컴포넌트 관계도
7.2.7.3. 동적 설계
7.2.7.3.1. [SCB-MI-001] Set Memory Integrity
Function Description	Memory Integrity Check Task를 수행한다.
Dynamic   behavior	 
[표 321] Set Memory Integrity Sequence Diagram
7.2.7.4. 인터페이스(Interface)
Interface ID	Name
SCI-MI-001	memory_integrity_check_task
 [표 322] MI 인터페이스 개요
7.2.7.4.1. [SCI-MI-001] memory_integrity_check_task()
Interface ID	SCI-MI-001
Name	memory_integrity_check_task
Description	Memory Integrity를 체크 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 323] memory_integrity_check_task() 인터페이스                                                                                                                                                                                                                                                                                                                                                                                             
7.2.8. [SWC-NPUM-001] NPUM
7.2.8.1. 개요(Overview)
구분	내용
기능(Function)	NPU 동작에 Error가 발생하면 SE에 Fault를 전달.
입력(Input)	NPU Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-NPUM-001, SSR-SoC-NPUM-002
관련 안전 메커니즘	SM-16
[표 324] NPUM 기능 개요
7.2.8.2. 정적 설계
 
 [그림 36] NPUM 컴포넌트 관계도
7.2.8.3. 동적 설계
7.2.8.3.1.  [SCB-NPUM-001] Run NPU Task
Function Description	NPU의 Fault Check를 위해 Task를 실행한다.
Dynamic   behavior	 
[표 325] Run NPU Task Sequence Diagram
7.2.8.4. 인터페이스(Interface)
Interface ID	Name
SCI-NPUM-001	npu_monitor_task
 [표 326] NPUM 인터페이스 개요
7.2.8.4.1. [SCI-NPUM-001] npu_monitor_task()
Interface ID	SCI-NPUM-001
Name	npu_monitor_task
Description	NPU Simulation Task
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 327] npu_monitor_task() 인터페이스
7.2.9. [SWC-OIC-001] OIC
7.2.9.1. 개요(Overview)
구분	내용
기능(Function)	OIC Bus에 연결된 IP에 문제가 발생하면 SE에 Fault를 전달.
입력(Input)	OIC Parameter
출력(Output)	오류 방생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
관련 안전 메커니즘	SM-17
[표 328] OIC 기능 개요
7.2.9.2. 정적 설계
 
 [그림 37] OIC 컴포넌트 관계도
7.2.9.3. 동적 설계
7.2.9.3.1. [SCB-OIC-001] Set OIC Bus Monitoring
Function Description	OIC Bus를 사용하는 CPU, CNN, ISP, CODA와 DDR의 Interrupt Pending을 Clear하고 Fault를 설정한다.
Dynamic   behavior	  
[표 329] Set OIC Bus Monitoring Sequence Diagram
7.2.9.3.2. [SCB-OIC-002] Device IOCTL 수행
Function Description	OIC Enable Fault/Interrupt, Get IRQ, Enable ECC Monitor, Read FD Status를 IOCTL Command로 입력 받아 기능을 수행한다.
Dynamic   behavior	  
[표 330] Device IOCTL 수행 Sequence Diagram
7.2.9.3.3. [SCB-OIC-003] Device Initialize
Function Description	OIC 사용을 위해 초기화 한다.
Dynamic   behavior	  
[표 331] Device Initialize Sequence Diagram
7.2.9.4. 인터페이스(Interface)
Interface ID	Name
SCI-OIC-001	oic_control_monitor_task
SCI-OIC-002	oic_control_halt_task
SCI-OIC-003	nc_oic_probe
SCI-OIC-004	nc_oic_ioctl_enable_fault_detect
SCI-OIC-005	nc_oic_ioctl_enable_interrupt
SCI-OIC-006	nc_oic_ioctl_get_irq_receiver
SCI-OIC-007	nc_oic_ioctl_enable_ecc_monitoring
SCI-OIC-008	nc_oic_ioctl_read_fd_status
SCI-OIC-009	nc_oic_ioctl
 [표 332] OIC 인터페이스 개요
7.2.9.4.1. [SCI-OIC-001] oic_control_monitor_task()
Interface ID	SCI-OIC-001
Name	oic_control_monitor_task
Description	OIC의 Monitoring을 수행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 333] oic_control_monitor_task() 인터페이스
7.2.9.4.2. [SCI-OIC-002] oic_control_halt_task()
Interface ID	SCI-OIC-002
Name	oic_control_halt_task
Description	OIC Interrupt가 지워지고 Fault가 설정될 때 가지 기다린다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 334] oic_control_halt_task() 인터페이스
7.2.9.4.3. [SCI-OIC-003] nc_oic_probe()
Interface ID	SCI-OIC-003
Name	nc_oic_probe.
Description	OIC 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Device Tree Node	N/A
IN	Driver Structure	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 335] nc_oic_probe() 인터페이스
7.2.9.4.4. [SCI-OIC-004] nc_oic_ioctl_enable_fault_detect()
Interface ID	SCI-OIC-004
Name	nc_oic_ioctl_enable_fault_detect
Description	OIC Driver Operation Mode를 설정한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	OIC Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 336] nc_oic_ioctl_enable_fault_detect() 인터페이스
7.2.9.4.5. [SCI-OIC-005] nc_oic_ioctl_enable_interrupt()
Interface ID	SCI-OIC-005
Name	nc_oic_ioctl_enable_interrupt
Description	OIC의 Interrupt를 Enable 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	OIC Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 337] nc_oic_ioctl_enable_interrupt() 인터페이스
7.2.9.4.6. [SCI-OIC-006] nc_oic_ioctl_get_irq_receiver()
Interface ID	SCI-OIC-006
Name	nc_oic_ioctl_get_irq_receiver
Description	IO Device를 가져온다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	OIC Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 338] nc_oic_ioctl_get_irq_receiver() 인터페이스
7.2.9.4.7. [SCI-OIC-007] nc_oic_ioctl_enable_ecc_monitoring()
Interface ID	SCI-OIC-007
Name	nc_oic_ioctl_enable_ecc_monitoring
Description	Enable OIC controller SECDED feature.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	OIC Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 339] nc_oic_ioctl_enable_ecc_monitoring() 인터페이스
7.2.9.4.8. [SCI-OIC-008] nc_oic_ioctl_read_fd_status()
Interface ID	SCI-OIC-008
Name	nc_oic_ioctl_read_fd_status
Description	Read OIC Firedoor status.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	OIC Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 340] nc_oic_ioctl_read_fd_status() 인터페이스
7.2.9.4.9. [SCI-OIC-009] nc_oic_ioctl()
Interface ID	SCI-OIC-009
Name	nc_oic_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	OIC Driver Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 341] nc_oic_ioctl() 인터페이스
7.2.10. [SWC-RDT-001] RDT
7.2.10.1. 개요(Overview)
구분	내용
기능(Function)	Redundant Timer 검사에 Error가 발생하면 SE에 Fault를 전달.
입력(Input)	Timer Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-RDT-001, SSR-SoC-RDT-002
관련 안전 메커니즘	SM-06
[표 342] RDT 기능 개요
7.2.10.2. 정적 설계
 
 [그림 38] RDT 컴포넌트 관계도
7.2.10.3. 동적 설계
7.2.10.3.1.  [SCB-RDT-001] Redundant Timer Task 실행
Function Description	Timer의 Fault Check를 위해서 Redundant Timer Task를 실행한다.
Dynamic   behavior	  
[표 343] Redundant Timer Task 실행 Sequence Diagram
7.2.10.4. 인터페이스(Interface)
Interface ID	Name
SCI-RDT-001	redundant_timer_task
 [표 344] RDT 인터페이스 개요
7.2.10.4.1. [SCI-RDT-001] redundant_timer_task()
Interface ID	SCI-RDT-001
Name	redundant_timer_task
Description	Redundant Timer Task를 실행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 345] redundant_timer_task() 인터페이스
7.2.11. [SWC-SE-001] SE
7.2.11.1. 개요(Overview)
구분	내용
기능(Function)	Fault를 전달받으면 외부에 Fault 신호를 전달.
입력(Input)	Safety Engine Parameter
출력(Output)	오류 신호 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-SE-001, SSR-SoC-SE-002
관련 안전 메커니즘	SM-91
[표 346] SE 기능 개요
7.2.11.2. 정적 설계
  
 [그림 39] SE 컴포넌트 관계도
7.2.11.3. 동적 설계
7.2.11.3.1. [SCB-SE-001] SE Initialize
Function Description	Safety Engine의 사용을 위해 설정을 한다.
Dynamic   behavior	 
[표 347] SE Initialize Sequence Diagram 
7.2.11.3.2. [SCB-SE-002] SE IOCTL 수행
Function Description	SE로 전달된 IOCTL Command를 수행한다.
Dynamic   behavior	 
[표 348] SE IOCTL 수행 Sequence Diagram
7.2.11.4. 인터페이스(Interface)
Interface ID	Name
SCI-SE-001	nc_safety_engine_probe
SCI-SE-002	nc_safety_engine_ioctl_set_mode
SCI-SE-003	nc_safety_engine_ioctl_control_enable
SCI-SE-004	nc_safety_engine_ioctl_sw_fault_clear
SCI-SE-005	nc_safety_engine_ioctl_read_status
SCI-SE-006	nc_safety_engine_ioctl
SCI-SE-007	nc_safety_engine_ioctl_get_ioaddr
SCI-SE-008	nc_safety_engine_ioctl_hw_fault_clear
SCI-SE-009	nc_safety_engine_ioctl_set_sw_fault
 [표 349] SE 인터페이스 개요
7.2.11.4.1. [SCI-SE-001] nc_safety_engine_probe()
Interface ID	SCI-SE-001
Name	nc_safety_engine_probe
Description	SE 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Device Tree Node	N/A
IN	Driver Structure	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 350] nc_safety_engine_probe()인터페이스
7.2.11.4.2. [SCI-SE-002] nc_safety_engine_ioctl_set_mode()
Interface ID	SCI-SE-002
Name	nc_safety_engine_ioctl_set_mode
Description	SE의 Operation Mode를 설정한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 351] nc_safety_engine_ioctl_set_mode()인터페이스
7.2.11.4.3. [SCI-SE-003] nc_safety_engine_ioctl_control_enable()
Interface ID	SCI-SE-003
Name	nc_safety_engine_ioctl_control_enable
Description	SE Driver를 Enable 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 352] nc_safety_engine_ioctl_control_enable()인터페이스
7.2.11.4.4. [SCI-SE-004] nc_safety_engine_ioctl_sw_fault_clear()
Interface ID	SCI-SE-004
Name	nc_safety_engine_ioctl_sw_fault_clear
Description	Fault 상태의 Register 값을 수동으로 지운다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 353] nc_safety_engine_ioctl_sw_fault_clear()인터페이스
7.2.11.4.5. [SCI-SE-005] nc_safety_engine_ioctl_read_status()
Interface ID	SCI-SE-005
Name	nc_safety_engine_ioctl_read_status
Description	SE의 Status 값을 읽어온다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 354] nc_safety_engine_ioctl_read_status()인터페이스
7.2.11.4.6. [SCI-SE-006] nc_safety_engine_ioctl()
Interface ID	SCI-SE-006
Name	nc_safety_engine_ioctl
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Command Value	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 355] nc_safety_engine_ioctl()인터페이스
7.2.11.4.7. [SCI-SE-007] nc_safety_engine_ioctl_get_ioaddr()
Interface ID	SCI-SE-007
Name	nc_safety_engine_ioctl_get_ioaddr
Description	Get viurtual IOAddress from kernel space.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 356] nc_safety_engine_ioctl_get_ioaddr()인터페이스
7.2.11.4.8. [SCI-SE-008] nc_safety_engine_ioctl_hw_fault_clear()
Interface ID	SCI-SE-008
Name	nc_safety_engine_ioctl_hw_fault_clear
Description	Clear HW Fault Status Register Manually.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 357] nc_safety_engine_ioctl_hw_fault_clear()인터페이스
7.2.11.4.9. [SCI-SE-009] nc_safety_engine_ioctl_set_sw_fault()
Interface ID	SCI-SE-009
Name	nc_safety_engine_ioctl_set_sw_fault
Description	Clear HW Fault Status Register Manually.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance Handle	N/A
IN	Parameter	N/A
IN	Parameter Size	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 358] nc_safety_engine_ioctl_set_sw_fault ()인터페이스
7.2.12. [SWC-STM-001] STM
7.2.12.1. 개요(Overview)
구분	내용
기능(Function)	기능 안전 컴포넌트의 Task를 관리한다.
입력(Input)	Safety Mechanism Parameter
출력(Output)	Safety Mechanism 설정에 대한 결과값
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-STM-001, SSR-SoC-STM-002
관련 안전 메커니즘	SM-09
[표 359] STM 기능 개요
7.2.12.2. 정적 설계
 
 [그림 40] STM 컴포넌트 관계도
7.2.12.3. 동적 설계
7.2.12.3.1. [SCB-STM-001] Create Task & Run Task
Function Description	Safety Mechanism Task들을 Creation 하고 Run 한다.
Dynamic   behavior	 
[표 360] STM Create Task & Run Task Sequence Diagram 
7.2.12.4. 인터페이스(Interface)
Interface ID	Name
SCI-STM-001	nc_sm_main
 [표 361] STM 인터페이스 개요
7.2.12.4.1. [SCI-STM-001] nc_sm_main()
Interface ID	SCI-STM-001
Name	nc_sm_main
Description	.Safety Mechanism의 main Function 이다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
N/A	N/A	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 362] nc_sm_main() 인터페이스
7.2.13. [SWC-TM-001] TM
7.2.13.1. 개요(Overview)
구분	내용
기능(Function)	Temperature Monitoring에서 Out of Range Error가 발생하면 SE에 Fault를 전달.
입력(Input)	Temperature Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-TM-001, SSR-SoC-TM-002
관련 안전 메커니즘	SM-22
[표 363] TM 기능 개요
7.2.13.2. 정적 설계
  
 [그림 41] TM 컴포넌트 관계도
7.2.13.3. 동적 설계
7.2.13.3.1. [SCB-TM-001] Run Temperature Monitoring Task
Function Description	Temperature 센서 값의 Out of Range를 Monitoring하는 Task를 실행한다.
그리고 센서 값이 설정 범위에서 벗어나면 Fault를 발생 시킨다.
Dynamic   behavior	 
[표 364] Run Temperature Monitoring Task Sequence Diagram 
7.2.13.4. 인터페이스(Interface)
Interface ID	Name
SCI-TM-001	temperature_monitor_task
 [표 365] TM 인터페이스 개요
7.2.13.4.1. [SCI-TM-001] temperature_monitor_task()
Interface ID	SCI-TM-001
Name	temperature_monitor_task
Description	Temperature Monitoring Task를 실행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 366] temperature_monitor_task() 인터페이스
7.2.14. [SWC-VM-001] VM
7.2.14.1. 개요(Overview)
구분	내용
기능(Function)	Voltage Monitoring에서 Out of Range Error가 발생하면 SE에 Fault를 전달.
입력(Input)	Voltage Monitoring Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-VM-001, SSR-SoC-VM-002
관련 안전 메커니즘	SM-21
[표 367] VM 기능 개요
7.2.14.2. 정적 설계
  
 [그림 42] VM 컴포넌트 관계도
7.2.14.3. 동적 설계
7.2.14.3.1. [SCB-VM-001] Run Voltage Monitoring Task
Function Description	Voltage 값을 모니터링하는 Task를 실행하고, Voltage 값이 설정 범위를 벗어나면 Fault를 발생시킨다.
Dynamic   behavior	 
[표 368] Run Voltage Monitoring Task Sequence Diagram 
7.2.14.4. 인터페이스(Interface)
Interface ID	Name
SCI-VM-001	voltage_monitor_task
s [표 369] VM 인터페이스 개요
7.2.14.4.1. [SCI-VM-001] voltage_monitor_task()
Interface ID	SCI-VM-001
Name	voltage_monitor_task
Description	Voltage Monitoring Task를 실행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 370] voltage_monitor_task() 인터페이스
7.2.15. [SWC-WDT-001] WDT
7.2.15.1. 개요(Overview)
구분	내용
기능(Function)	Watchdog 기능을 활성화 하고 SE Fault를 Mask 한다. 그리고 주기적으로 Refresh Count를 갱신한다.
입력(Input)	WDT Parameter
출력(Output)	오류 발생 시 오류 출력
ASIL	ASIL B
개발 형태 	신규
관련 요구사항	SSR-SoC-WDT-001, SSR-SoC-WDT-002
관련 안전 메커니즘	SM-15
[표 371] WDT 기능 개요
7.2.15.2. 정적 설계
  
 [그림 43] WDT 컴포넌트 관계도
7.2.15.3. 동적 설계
7.2.15.3.1. [SCB-WDT-001] WDT Run
Function Description	WDT를 Enable 하고 일정 간격으로 WDT의 Time을 Refresh 한다.
Dynamic   behavior	 
[표 372] WDT Run Sequence Diagram
7.2.15.3.2. [SCB-WDT-002] Device Initialize
Function Description	Timer 사용을 위해 Device를 초기화 한다.
Dynamic   behavior	 
[표 373] Device Initialize Sequence Diagram
7.2.15.3.3. [SCB-WDT-003] Device IOCTL 수행
Function Description	Timer의 Get Interrupt, Refresh Watchdog, Get Status, Stop, Run, Initialize를 IOCTL Command로 입력 받아 기능을 수행한다.
Dynamic   behavior	 
[표 374] Device IOCTL 수행 Sequence Diagram
7.2.15.4. 인터페이스(Interface)
Interface ID	Name
SCI-WDT-001	nc_timer_ioctl_get_interrupt_receiver
SCI-WDT-002	nc_timer_ioctl_refresh_watchdog
SCI-WDT-003	nc_timer_ioctl_get_status
SCI-WDT-004	nc_timer_ioctl_stop
SCI-WDT-005	nc_timer_ioctl_run
SCI-WDT-006	nc_timer_ioctl_initialize
SCI-WDT-007	nc_timer_ioctl
SCI-WDT-008	nc_timer_probe
SCI-WDT-009	watchdog_timer_check_task
 [표 375] WDT 인터페이스 개요
7.2.15.4.1. [SCI-WDT-001] nc_timer_ioctl_get_interrupt_receiver()
Interface ID	SCI-WDT-001
Name	nc_timer_ioctl_get_interrupt_receiver
Description	Timer Interrupt를 수신한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 376] nc_timer_ioctl_get_interrupt_receiver() 인터페이스
7.2.15.4.2. [SCI-WDT-002] nc_timer_ioctl_refresh_watchdog()
Interface ID	SCI-WDT-002
Name	nc_timer_ioctl_refresh_watchdog
Description	WDT의 Count를 Refresh 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 377] nc_timer_ioctl_refresh_watchdog() 인터페이스
7.2.15.4.3. [SCI-WDT-003] nc_timer_ioctl_get_status()
Interface ID	SCI-WDT-003
Name	nc_timer_ioctl_get_status
Description	Timer의 Status를 가져온다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 378] nc_timer_ioctl_get_status() 인터페이스
7.2.15.4.4. [SCI-WDT-004] nc_timer_ioctl_stop()
Interface ID	SCI-WDT-004
Name	nc_timer_ioctl_stop
Description	Timer를 Stop 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 379] nc_timer_ioctl_stop() 인터페이스
7.2.15.4.5. [SCI-WDT-005] nc_timer_ioctl_run()
Interface ID	SCI-WDT-005
Name	nc_timer_ioctl_run
Description	Timer를 Run 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 380] nc_timer_ioctl_run() 인터페이스
7.2.15.4.6. [SCI-WDT-006] nc_timer_ioctl_initialize()
Interface ID	SCI-WDT-006
Name	nc_timer_ioctl_initialize
Description	Timer을 초기화 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Driver Instance	N/A
IN	Parameter	N/A
IN	Parameter Length	N/A
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 381] nc_timer_ioctl_initialize() 인터페이스
7.2.15.4.7. [SCI-WDT-007] nc_timer_ioctl()
Interface ID	SCI-WDT-007
Name	nc_timer_ioctl
Description	입력 명령 수행을 위한 내부 인터페이스의 Routing 기능을 수행한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Instance Handle	N/A
IN	Command	N/A
IN	Parameter	N/A
	Parameter Length	
 반환(Return)
항목	범위
Error	SUCCESS or FAILURE
[표 382] nc_timer_ioctl() 인터페이스
7.2.15.4.8. [SCI-WDT-008] nc_timer_probe()
Interface ID	SCI-WDT-008
Name	nc_timer_probe
Description	Timer 제어에 필요한 시스템 자원을 요청 및 초기화하고 Instance Handle을 등록한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Device Tree Node	N/A
IN	Driver Structure	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 383] nc_timer_probe() 인터페이스
7.2.15.4.9. [SCI-WDT-009] watchdog_timer_check_task()
Interface ID	SCI-WDT-009
Name	watchdog_timer_check_task
Description	WDT Task를 Check 한다.
Call Condition	단발적(On demand)
파라메타(Parameter)
항목	범위
IN	Parameter	N/A
 반환(Return)
항목	범위
N/A	N/A
[표 384] watchdog_timer_check_task() 인터페이스

5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-ADC-001] adc_kernel_driver
adc_kernel_driver 유닛은 커널 부팅 시 ADC의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
HZ_TO_PICO_SECOND	Hz to PICO Second	1000000000000ULL
DEFAULT_TIMEOUT_US	Time Out us	500UL * 1000UL
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-ADC-001] nc_adc_kernel_probe()
Description	Performs hw resource initialization of adc at kernel-boot time.
Prototype	static Error nc_adc_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 5] nc_adc_kernel_probe() Description 
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_adc_kernel_probe() 제어 흐름도
5.1.5.2. [SWF-ADC-002] nc_adc_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceStatus function from user-space.
Prototype	static Error nc_adc_kernel_write_command(IODeviceVector iod, Value cmd, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
Error	Success or TimeOut or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
cmd	Value	command number
buf	void*	buffer address
len	Address	buffer size
[표 6] nc_adc_kernel_write_command() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_adc_kernel_write_command() 제어 흐름도 
5.1.5.3. [SWF-ADC-003] nc_adc_kernel_read_command()
Description	Performs an io request for iodevice by calling the ReadIODeviceStatus function from user-space.
Prototype	static Error nc_adc_kernel_read_command(IODeviceVector iod, Value cmd, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
Error	Success or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
cmd	Value	command number
buf	void*	buffer address
len	Address	buffer size
[표 7] nc_adc_kernel_read_command() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_adc_kernel_read_command() 제어 흐름도
 
5.1.5.4. [SWF-ADC-004] nc_adc_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline adc_kernel_driver_t *nc_adc_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-001
Return
Type	Spec. Designation
adc_kernel_driver_t*	Instance Handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 8] nc_adc_kernel_get_instance() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_adc_kernel_get_instance() 제어 흐름도
5.1.5.5. [SWF-ADC-005] nc_adc_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_adc_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
EVENT_HANDLED	Event Handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 9] nc_adc_kernel_exception_handler() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_adc_kernel_exception_handler() 제어 흐름도

5.2.  [SWU-ADC-002] adc_driver
adc_driver 유닛은 User가 ADC의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 ADC 초기화, Start, Finish, Get Value이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 10] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 11] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-ADC-001] nc_adc_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_adc_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	driver-descriptor
[표 12] nc_adc_probe() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 11] nc_adc_probe() 제어 흐름도
5.2.4.2. [SUI-ADC-002] nc_adc_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_adc_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 13] nc_adc_ioctl() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 12] nc_adc_ioctl() 제어 흐름도
5.2.4.3. [SUI-ADC-003] nc_adc_ioctl_start()
Description	ADC start request
Prototype	static Error nc_adc_ioctl_start(nc_adc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	nc_adc_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 14] nc_adc_ioctl_start() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 13] nc_adc_ioctl_start() 제어 흐름도
5.2.4.4. [SUI-ADC-004] nc_adc_ioctl_finish()
Description	ADC finish request
Prototype	static Error nc_adc_ioctl_finish(nc_adc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	nc_adc_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 15] nc_adc_ioctl_finish() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 14] nc_adc_ioctl_finish() 제어 흐름도
5.2.4.5. [SUI-ADC-005] nc_adc_ioctl_wait_for_done()
Description	Wait for ADC conversion to complete.
Prototype	static Error nc_adc_ioctl_wait_for_done(nc_adc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	nc_adc_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 16] nc_adc_ioctl_wait_for_done() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 15] nc_adc_ioctl_wait_for_done() 제어 흐름도
5.2.4.6. [SUI-ADC-006] nc_adc_ioctl_get_voltage()
Description	Reads the ADC conversion data, converts it to voltage level, and returns it.
Prototype	static Error nc_adc_ioctl_get_voltage(nc_adc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_adc_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 17] nc_adc_ioctl_get_voltage() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 16] nc_adc_ioctl_get_voltage() 제어 흐름도

5.2.5. Unit Function
5.2.5.1. [SWF-ADC-006] nc_adc_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static nc_adc_driver_t *nc_adc_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-ADC-001
Return
Type	Spec. Designation
nc_adc_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 18] nc_adc_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 17] nc_adc_get_instance() 제어 흐름도
5.1. [SWU-BUFF-001] nc_ts_fsync_flipflop_buffers
nc_ts_fsync_flipflop_buffers 유닛은 flip-flop buffer에 대한 Create/Destroy Buffer, Mutex Lock/Unlock, Get Read/Write Buffer, Get Address/Szie를 수행한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
g_tsfs_ff_buf_arr	s_tsfs_ff_element	Element Value	0	FlipFlop Buffer Element
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
MAX_TSB_CNT	Max TBS count	10U
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-BUFF-001] nc_tsfs_ff_create_buffers()
Description	Perform fsync flipflop buffer creation.
Prototype	int32_t nc_tsfs_ff_create_buffers(uint32_t owner, int32_t each_buf_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
each_buf_size	int32_t	each buffer size
[표 5] nc_tsfs_ff_create_buffers() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 8] nc_tsfs_ff_create_buffers() 제어 흐름도
5.1.4.2. [SUI-BUFF-002] nc_tsfs_ff_destroy_buffers()
Description	Destroys the fsync flipflop buffer.
Prototype	void nc_tsfs_ff_destroy_buffers (uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
[표 6] nc_tsfs_ff_destroy_buffers() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 9] nc_tsfs_ff_destroy_buffers() 제어 흐름도
5.1.4.3. [SUI-BUFF-003] nc_tsfs_ff_get_addr_of_buffer()
Description	Returns the buffer address of the entered index.
Prototype	uint8_t *nc_tsfs_ff_get_addr_of_buffer (uint32_t owner, int32_t idx)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
uint8_t*	buffer address of the entered index.'
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
idx	int32_t	buffer index
[표 7] nc_tsfs_ff_get_addr_of_buffer() Description
5.1.4.3.1. Control Flow Diagram
 
	[그림 10] nc_tsfs_ff_get_addr_of_buffer() 제어 흐름도
5.1.4.4. [SUI-BUFF-004] nc_tsfs_ff_get_buf_size()
Description	Returns buffer size.
Prototype	int32_t nc_tsfs_ff_get_buf_size (uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	buffer size
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
[표 8] nc_tsfs_ff_get_buf_size() Description
5.1.4.4.1. Control Flow Diagram
 
	[그림 11] nc_tsfs_ff_get_buf_size() 제어 흐름도
5.1.4.5. [SUI-BUFF-005] nc_tsfs_ff_get_readable_buffer_and_timestamp()
Description	Returns buffer address of read index buffer with timestamp.
Prototype	uint8_t *nc_tsfs_ff_get_readable_buffer_and_timestamp (uint32_t owner, uint64_t *ret_timestamp)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
uint8_t*	buffer address of read index buffer with timestamp.
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
ret_timestamp	uint64_t*	return address of timestamp
[표 9] nc_tsfs_ff_get_readable_buffer_and_timestamp() Description
5.1.4.5.1. Control Flow Diagram
 
	[그림 12] nc_tsfs_ff_get_readable_buffer_and_timestamp() 제어 흐름도
5.1.4.6. [SUI-BUFF-006] nc_tsfs_ff_finish_read_buf()
Description	Finish read action.
Prototype	void nc_tsfs_ff_finish_read_buf(uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
[표 10] nc_tsfs_ff_finish_read_buf() Description
5.1.4.6.1. Control Flow Diagram
 
	[그림 13] nc_tsfs_ff_finish_read_buf() 제어 흐름도
5.1.4.7. [SUI-BUFF-007] nc_tsfs_ff_get_writable_buffer_and_set_timestamp()
Description	Returns the current index and buffer address of the write buffer and sets the timestamp.
Prototype	uint8_t *nc_tsfs_ff_get_writable_buffer_and_set_timestamp (uint32_t owner, int32_t *ret_idx, uint64_t set_timestamp)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
uint8_t*	Buffer address
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
ret_idx	int32_t*	return address of buffer index
set_timestamp	uint64_t	timestamp value
[표 11] nc_tsfs_ff_get_writable_buffer_and_set_timestamp() Description
5.1.4.7.1. Control Flow Diagram
 
	[그림 14] nc_tsfs_ff_get_writable_buffer_and_set_timestamp() 제어 흐름도
5.1.4.8. [SUI-BUFF-008] nc_tsfs_ff_finish_write_buf()
Description	Finish write action.
Prototype	void nc_tsfs_ff_finish_write_buf(uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership( 0 ~ (MAX_TSB_CNT-1) )
[표 12nc_tsfs_ff_finish_write_buf() Description
5.1.4.8.1. Control Flow Diagram
 
	[그림 15] nc_tsfs_ff_finish_write_buf() 제어 흐름도
5.1.5. Unit Function 
5.1.5.1. [SWF-BUFF-001] lock_tsfs_ff_read_mutex()
Description	Waits for acquisition of internal memory reading access ownership of fsync flipflop buffer.
Prototype	static inline void lock_tsfs_ff_read_mutex(int32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	Int32_t	This is the ID number for ownership.
[표 13] lock_tsfs_ff_read_mutex() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 16] lock_tsfs_ff_read_mutex() 제어 흐름도
5.1.5.2. [SWF-BUFF-002] unlock_tsfs_ff_read_mutex()
Description	fsync Returns ownership of the internal memory reading access of the circular buffer.
Prototype	static inline void unlock_tsfs_ff_read_mutex(int32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	Int32_t	This is the ID number for ownership.
[표 14] unlock_tsfs_ff_read_mutex() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 17] unlock_tsfs_ff_read_mutex() 제어 흐름도
5.1.5.3. [SWF-BUFF-003] lock_tsfs_ff_write_mutex()
Description	Waits for acquisition of internal memory writing access ownership of fsync flipflop buffer.
Prototype	static inline void lock_tsfs_ff_write_mutex(int32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	Int32_t	This is the ID number for ownership.
[표 15] lock_tsfs_ff_write_mutex() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 18] lock_tsfs_ff_write_mutex() 제어 흐름도
5.1.5.4. [SWF-BUFF-004] unlock_tsfs_ff_write_mutex()
Description	fsync Returns ownership of the internal memory writing access of the circular buffer.
Prototype	static inline void unlock_tsfs_ff_write_mutex(int32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	Int32_t	This is the ID number for ownership.
[표 16] unlock_tsfs_ff_write_mutex() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 19] unlock_tsfs_ff_write_mutex() 제어 흐름도
5.2. [SWU-BUFF-002] nc_ts_fsync_circular_buffers
nc_ts_fsync_circular_buffers 유닛은 Circular Buffer의 Create/Destroy Buffer, Mutex Lock/Unlock, Enqueue/Dequeue를 수행한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
g_fs_buf_tcnt	int32_t	4byte	0	Buffer count
g_fs_buf_size	int32_t	4byte	0	Buffer size
g_fs_head	uint64_t	8byte	0	Buffer head
g_fs_tail	uint64_t	8byte	0	Buffer tail
g_fs_write_mutex	LocalMutex	4byte	0	Buffer write mutex
g_fs_circular_queue	stFrameElement	8byte	0	Circular Buffer queue
[표 17] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
MAX_TSB_CNT	Max TBS count	10U
[표 18] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-BUFF-009] nc_tsfs_cb_create_buffers()
Description	Perform fsync circular buffer creation.
Prototype	int32_t nc_tsfs_cb_create_buffers(uint32_t owner, int32_t max_cnt, int32_t buf_max_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
max_cnt	int32_t	Number of buffers to create
buf_max_size	int32_t	each buffer size
[표 19] nc_tsfs_cb_create_buffers() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 20] nc_tsfs_cb_create_buffers() 제어 흐름도
5.2.4.2. [SUI-BUFF-010] nc_tsfs_cb_destroy_buffers()
Description	Destroys the fsync circular buffer.
Prototype	void nc_tsfs_cb_destroy_buffers(uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
[표 20] nc_tsfs_cb_destroy_buffers() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 21] nc_tsfs_cb_destroy_buffers() 제어 흐름도
5.2.4.3. [SUI-BUFF-011] nc_tsfs_cb_max_count()
Description	Returns the number of fsync circular buffers for the owner.
Prototype	int32_t nc_tsfs_cb_max_count (uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Failure or Buffer Count
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
[표 21] nc_tsfs_cb_max_count() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 22] nc_tsfs_cb_max_count() 제어 흐름도
5.2.4.4. [SUI-BUFF-012] nc_tsfs_cb_current_count()
Description	Returns the current count of fsync circular buffers for the owner.
Prototype	int32_t nc_tsfs_cb_current_count (uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Failure or Current Count
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
[표 22] nc_tsfs_cb_current_count() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 23] nc_tsfs_cb_current_count() 제어 흐름도
5.2.4.5. [SUI-BUFF-013] nc_tsfs_cb_max_buf_size()
Description	Returns size of fsync circular buffers for the owner.
Prototype	int32_t nc_tsfs_cb_max_buf_size(uint32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Failure or Buffer Size
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
[표 23] nc_tsfs_cb_max_buf_size() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 24] nc_tsfs_cb_max_buf_size() 제어 흐름도
5.2.4.6. [SUI-BUFF-014] nc_tsfs_cb_enqueue()
Description	Insert data into the fsync circular buffer.
Prototype	int32_t nc_tsfs_cb_enqueue(uint32_t owner, uint64_t time_stamp, uint8_t *data, size_t size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
time_stamp	uint64_t	current timestamp
data	uint8_t*	input data address
size	size_t	input data size
[표 24] nc_tsfs_cb_enqueue() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 25] nc_tsfs_cb_enqueue() 제어 흐름도
5.2.4.7. [SUI-BUFF-015] nc_tsfs_cb_get_time_stamp_of_current()
Description	Returns the timestamp of the head buffer.
Prototype	int32_t nc_tsfs_cb_get_time_stamp_of_current(uint32_t owner, uint64_t *ts)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
ts	uint64_t*	return address of timestamp
[표 25] nc_tsfs_cb_get_time_stamp_of_current() Description
5.2.4.7.1. Control Flow Diagram
 
[그림 26] nc_tsfs_cb_get_time_stamp_of_current() 제어 흐름도
5.2.4.8. [SUI-BUFF-016] nc_tsfs_cb_dequeue_start()
Description	Extracts stored data information from fsync circular buffer.
Prototype	int32_t nc_tsfs_cb_dequeue_start(uint32_t owner, stFrameElement* ret_data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
ret_data	stFrameElement*	return address of data information
[표 26] nc_tsfs_cb_dequeue_start() Description
5.2.4.8.1. Control Flow Diagram
 
[그림 27] nc_tsfs_cb_dequeue_start() 제어 흐름도
5.2.4.9. [SUI-BUFF-017] nc_tsfs_cb_dequeue_finish()
Description	Finishes extracting data information stored from the fsync circular buffer.
Prototype	int32_t nc_tsfs_cb_dequeue_finish(uint32_t owner, stFrameElement* dq_data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
owner	uint32_t	This is the ID number for ownership.
dq_data	stFrameElement*	Dq data
[표 27] nc_tsfs_cb_dequeue_finish() Description
5.2.4.9.1. Control Flow Diagram
 
[그림 28] nc_tsfs_cb_dequeue_finish() 제어 흐름도
5.2.5. Unit Function 
5.2.5.1. [SWF-BUFF-005] lock_fscb_write_mutex()
Description	Waits for acquisition of internal memory access ownership of fsync circular buffer.
Prototype	static inline void lock_fscb_write_mutex(int32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	int32_t	This is the ID number for ownership.
[표 28] lock_fscb_write_mutex() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 29] lock_fscb_write_mutex() 제어 흐름도
5.2.5.2. [SWF-BUFF-006] unlock_fscb_write_mutex()
Description	fsync Returns ownership of the internal memory access of the circular buffer.
Prototype	static inline void unlock_fscb_write_mutex(int32_t owner)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-BUFF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
owner	Int32_t	This is the ID number for ownership.
[표 29] unlock_fscb_write_mutex() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 30] unlock_fscb_write_mutex() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-CAN-001] can_kernel_driver
can_kernel_driver 유닛은 커널 부팅 시 CAN의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
KHW_CLOCK_CAN_CORE	Can clock select number. Can core.	0
KHW_CLOCK_CAN_APB	Can clock select number. Can APB	1
NUM_OF_KHW_CLOCK	MAX number.	2
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-CAN-001] nc_can_kernel_probe()
Description	Performs hw resource initialization of can at kernel-boot time.
Prototype	static Error nc_can_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 5] nc_can_kernel_probe() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_can_kernel_probe() 제어 흐름도
5.1.5.2. [SWF-CAN-002] nc_can_kernel_read_command()
Description	Performs an io request for iodevice by calling the ReadBuffersFromIODevice function from user-space.
Prototype	static Error nc_can_kernel_read_command(IODeviceVector iod, Value command, Value sub_command, Buffer *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Success or Failure or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
sub_command	Value	sub-command number
buf	Buffer*	ghs linked buffer
[표 6] nc_can_kernel_read_command() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_can_kernel_read_command() 제어 흐름도
5.1.5.3. [SWF-CAN-003] nc_can_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteBuffersToIODevice function from user-space.
Prototype	static Error nc_can_kernel_write_command(IODeviceVector iod, Value command, Value sub_command, Buffer *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Success or Failure or IllegalLength or IlleagalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
sub_command	Value	sub-command number
buf	Buffer*	ghs linked buffer
[표 7] nc_can_kernel_write_command() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_can_kernel_write_command() 제어 흐름도
5.1.5.4. [SWF-CAN-004] nc_can_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline can_kernel_driver_t *nc_can_kernel_get_instance(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
can_kernel_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
dev_num	uint32_t	channel-number
[표 8] nc_can_kernel_get_instance() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_can_kernel_get_instance() 제어 흐름도
5.1.5.5. [SWF-CAN-005] nc_can_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_can_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
EVENT	EVENT handle
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME *	extended exception frame
id	Address	callback parameter
[표 9] nc_can_kernel_exception_handler() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_can_kernel_exception_handler() 제어 흐름도
5.2. [SWU-CAN-002] nc_library_can_core
nc_library_can_core 유닛은 CAN의 Data Receive/Transmit 수행을 위한 Vector CAN의 Library가 정의되어 있다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 10] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 11] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-CAN-006] nc_can_tx_event_list_is_full()
Description	Return information on whether TX event list is full.
Prototype	static Boolean nc_can_tx_event_list_is_full(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	CAN Message Parameter Information
[표 12] nc_can_tx_event_list_is_full() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 11] nc_can_tx_event_list_is_full() 제어 흐름도
5.2.5.2. [SWF-CAN-007] nc_can_copy_msg_from_msg_ram()
Description	Copy message from message ram.
Prototype	static void nc_can_copy_msg_from_msg_ram(can_struct *can_ptr, uint64_t msg_addr_in_msg_ram, can_msg_struct *msg_ptr, rx_info_struct rx_info)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
msg_addr_in_msg_ram	uint64_t	Message Ram Address
msg_ptr	can_msg_struct*	CAN Message Parameter Information
rx_info	rx_info_struct	CAN Rx Parameter Information
[표 13] nc_can_copy_msg_from_msg_ram() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 12] nc_can_copy_msg_from_msg_ram() 제어 흐름도
5.2.5.3. [SWF-CAN-008] nc_can_msg_list_is_full()
Description	Check whether the massage list is full
Prototype	static Boolean nc_can_msg_list_is_full(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
[표 14] nc_can_msg_list_is_full() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 13] nc_can_msg_list_is_full() 제어 흐름도
5.2.5.4. [SWF-CAN-009] nc_can_msg_list_get_next_free_element()
Description	Bring the other element of the message list
Prototype	static can_msg_struct *nc_can_msg_list_get_next_free_element(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
can_msg_struct*	can message structure information.
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
[표 15] nc_can_msg_list_get_next_free_element() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 14] nc_can_msg_list_get_next_free_element() 제어 흐름도
5.2.5.5. [SWF-CAN-010] nc_can_msg_list_add_msg_at_tail()
Description	Add a message to the end of the message list
Prototype	static void nc_can_msg_list_add_msg_at_tail(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 16] nc_can_msg_list_add_msg_at_tail() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 15] nc_can_msg_list_add_msg_at_tail() 제어 흐름도
5.2.5.6. [SWF-CAN-011] nc_can_copy_from_msgram_to_msglist()
Description	Copy message from message list of message ram.
Prototype	static void nc_can_copy_from_msgram_to_msglist(can_struct *can_ptr, uint64_t msg_addr_in_msg_ram, rx_info_struct rx_info)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
msg_addr_in_msg_ram	uint64_t	Message Address
rx_info	rx_info_struct	CAN Rx Parameter Information
[표 17] nc_can_copy_from_msgram_to_msglist() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 16] nc_can_copy_from_msgram_to_msglist() 제어 흐름도
5.2.5.7. [SWF-CAN-012] nc_can_rx_dedicated_buffer_copy_msg_to_msg_list()
Description	Copy the messages from the software message list from the rx buffer.
Prototype	static void nc_can_rx_dedicated_buffer_copy_msg_to_msg_list(can_struct *can_ptr, uint32_t ded_buffer_index)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
ded_buffer_index	uint32_t	index of the dedicated Rx buffer
[표 18] nc_can_rx_dedicated_buffer_copy_msg_to_msg_list() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 17] nc_can_rx_dedicated_buffer_copy_msg_to_msg_list() 제어 흐름도
5.2.5.8. [SWF-CAN-013] nc_can_rx_dedicated_buffer_process_new_msg()
Description	Read new message from rx buffer.
Prototype	static uint32_t nc_can_rx_dedicated_buffer_process_new_msg(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
uint32_t	Read Message Count
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 19] nc_can_rx_dedicated_buffer_process_new_msg() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 18] nc_can_rx_dedicated_buffer_process_new_msg() 제어 흐름도
5.2.5.9. [SWF-CAN-014] nc_can_tx_event_list_get_next_free_element()
Description	Get Next Free Element Pointer of Tx Event List
Prototype	static tx_event_element_struct *nc_can_tx_event_list_get_next_free_element(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
tx_event_element_struct*	Pointer
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 20] nc_can_tx_event_list_get_next_free_element() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 19] nc_can_tx_event_list_get_next_free_element() 제어 흐름도
5.2.5.10. [SWF-CAN-015] nc_can_tx_event_list_add_element_at_tail()
Description	Add Element to Tail of Tx Event List
Prototype	static void nc_can_tx_event_list_add_element_at_tail(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 21] nc_can_tx_event_list_add_element_at_tail() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 20] nc_can_tx_event_list_add_element_at_tail() 제어 흐름도
5.2.5.11. [SWF-CAN-016] nc_can_reg_set_and_check()
Description	Write and Read CAN offset register value and check register data.
Prototype	static Boolean nc_can_reg_set_and_check(const can_struct *can_ptr, uint16_t reg_addr_offset, uint32_t reg_value)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
reg_addr_offset	uint16_t	Offset
reg_value	Uint32_t	Write Value
[표 22] nc_can_reg_set_and_check() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 21] nc_can_reg_set_and_check() 제어 흐름도
5.2.5.12. [SWF-CAN-017] nc_can_reg_get_zero()
Description	Read the value of CAN address 0.
Prototype	static uint32_t nc_can_reg_get_zero(uint64_t base_addr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
uint32_t	register value of can offset 0x00
Parameter
Variable Name	Type	Spec. Designation
base_addr	uint32_t	Base Address
[표 23] nc_can_reg_get_zero() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 22] nc_can_reg_get_zero() 제어 흐름도
5.2.5.13. [SWF-CAN-018] nc_can_interrupt_init()
Description	Enable Interrupts and Interrupt-Line
Prototype	static void nc_can_interrupt_init(can_struct *can_ptr, uint32_t ir_line0_select, uint32_t ir_line1_select, uint32_t tx_buffer_transmission_ir_enable, uint32_t tx_buffer_cancel_finished_ir_enable)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
ir_line0_select	uint32_t	IR flags that should be signaled via interrupt line 0: m_can_int0, (use defines, e.g. IR_Rx_FIFO0_New_Message + IR_Rx_FIFO0_Full)
ir_line1_select	uint32_t	IR flags that should be signaled via interrupt line 1: m_can_int1, (use defines, e.g. IR_Rx_FIFO1_New_Message + IR_Rx_FIFO1_Full)
tx_buffer_transmission_ir_enable	uint32_t	content of TXBTIE register
tx_buffer_cancel_finished_ir_enable	uint32_t	content of TXBCIE register
[표 24] nc_can_interrupt_init() Description
5.2.5.13.1. Control Flow Diagram
 
[그림 23] nc_can_interrupt_init() 제어 흐름도
5.2.5.14. [SWF-CAN-019] nc_can_set_bit_timing_data()
Description	Configure Data Bit Timing (Data Phase)
Prototype	static Boolean nc_can_set_bit_timing_data(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
[표 25] nc_can_set_bit_timing_data() Description
5.2.5.14.1. Control Flow Diagram
 
[그림 24] nc_can_set_bit_timing_data() 제어 흐름도
5.2.5.15. [SWF-CAN-020] nc_can_enable_CAN_mode()
Description	Enable the CAN mode: Classical, FD, FD with Bit Rate Switch
Prototype	static void nc_can_enable_CAN_mode(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
[표 26] nc_can_enable_CAN_mode() Description
5.2.5.15.1. Control Flow Diagram
 
[그림 25] nc_can_enable_CAN_mode() 제어 흐름도
5.2.5.16. [SWF-CAN-021] nc_can_set_bit_timing_nominal()
Description	Set Nominal Bit Timing of CAN instance (Arbitration Phase)
Prototype	static Boolean nc_can_set_bit_timing_nominal(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
[표 27] nc_can_set_bit_timing_nominal() Description
5.2.5.16.1. Control Flow Diagram
 
[그림 26] nc_can_set_bit_timing_nominal() 제어 흐름도
5.2.5.17. [SWF-CAN-022] nc_can_set_bit_timing()
Description	Set Data Bit Timing of CAN instance (Data Phase)
Prototype	static void nc_can_set_bit_timing(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct *	Properties of an M_CAN node
[표 28] nc_can_set_bit_timing() Description
5.2.5.17.1. Control Flow Diagram
 
[그림 27] nc_can_set_bit_timing() 제어 흐름도
5.2.5.18. [SWF-CAN-023] nc_can_bit_timming_setting()
Description	setting CAN BitTiming.
Prototype	static void nc_can_bit_timming_setting(uint32_t core_clock, can_struct *can_ptr, eCAN_KBPS can_basic_speed, eCANFD_KBPS can_fd_speed)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
core_clock	uint32_t	CAN Input Clock
can_ptr	can_struct*	Properties of an M_CAN node
can_basic_speed	eCAN_KBPS	Basic Speed
can_fd_speed	eCANFD_KBPS	FD Speed
[표 29] nc_can_bit_timming_setting() Description
5.2.5.18.1. Control Flow Diagram
 
[그림 28] nc_can_bit_timming_setting() 제어 흐름도
5.2.5.19. [SWF-CAN-024] nc_can_set_config_change_enable()
Description	set configuration change enable for CAN instance
Prototype	static void nc_can_set_config_change_enable(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
[표 30] nc_can_set_config_change_enable() Description
5.2.5.19.1. Control Flow Diagram
 
[그림 29] nc_can_set_config_change_enable() 제어 흐름도
5.2.5.20. [SWF-CAN-025] nc_can_reset_config_change_enable_and_reset_init()
Description	reset configuration change enable AND reset init bit for CAN instance
Prototype	static void nc_can_reset_config_change_enable_and_reset_init(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 31] nc_can_reset_config_change_enable_and_reset_init() Description
5.2.5.20.1. Control Flow Diagram
 
[그림 30] nc_can_reset_config_change_enable_and_reset_init() 제어 흐름도
5.2.5.21. [SWF-CAN-026] nc_can_convert_element_size_to_data_length()
Description	Convert element_size (of an RX/TX Element in Message RAM) to payload/data_length in byte.
Prototype	static uint16_t nc_can_convert_element_size_to_data_length(data_field_size_enum data_field_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
uint16_t	Data length.
Parameter
Variable Name	Type	Spec. Designation
data_field_size	data_field_size_enum	Data Field Size
[표 32] nc_can_convert_element_size_to_data_length() Description
5.2.5.21.1. Control Flow Diagram
 
[그림 31] nc_can_convert_element_size_to_data_length() 제어 흐름도
5.2.5.22. [SWF-CAN-027] nc_can_rx_dedicated_buffers_init()
Description	Configure the dedicated Rx Buffers
Prototype	static void nc_can_rx_dedicated_buffers_init(can_struct *can_ptr, data_field_size_enum dedicated_rx_buffer_data_field_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
dedicated_rx_buffer_data_field_size	data_field_size_enum	maximum data field size that should be stored in a dedicated Rx Buffer
[표 33] nc_can_rx_dedicated_buffers_init() Description
5.2.5.22.1. Control Flow Diagram
 
[그림 32] nc_can_rx_dedicated_buffers_init() 제어 흐름도
5.2.5.23. [SWF-CAN-028] nc_can_rx_fifo_init()
Description	Copy all Messages from RX FIFO_i to the Software Message List
Prototype	static void nc_can_rx_fifo_init(can_struct *can_ptr, uint32_t rx_fifo_number, uint32_t fifo_size_elems, uint32_t fifo_watermark, data_field_size_enum fifo_data_field_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
rx_fifo_number	uint32_t	Rx FIFO Number
fifo_size_elems	uint32_t	Rx FIFO Size in number of RX Elements
fifo_watermark	uint32_t	Watermark in number of RX Elements
fifo_data_field_size	data_field_size_enum	maximum data field size that should be stored in this RX FIFO
[표 34] nc_can_rx_fifo_init() Description
5.2.5.23.1. Control Flow Diagram
 
[그림 33] nc_can_rx_fifo_init() 제어 흐름도
5.2.5.24. [SWF-CAN-029] nc_can_rx_fifo_copy_msg_to_msg_list()
Description	Copy all Messages from RX FIFO_i to the Software Message List
Prototype	static uint32_t nc_can_rx_fifo_copy_msg_to_msg_list(can_struct *can_ptr, uint32_t rx_fifo_number)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
uint32_t	Number of messages read from FIFO
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
rx_fifo_number	uint32_t	Rx FIFO Number
[표 35] nc_can_rx_fifo_copy_msg_to_msg_list() Description
5.2.5.24.1. Control Flow Diagram
 
[그림 34] nc_can_rx_fifo_copy_msg_to_msg_list() 제어 흐름도
5.2.5.25. [SWF-CAN-030] nc_can_tx_buffer_init()
Description	Copy Transmit Message to TX buffer - NO CHECK is performed if the buffer has already a pending tx request, NO Transmission is requested
Prototype	static void nc_can_tx_buffer_init(can_struct *can_ptr, Boolean FIFO_true_QUEUE_false, uint32_t fifo_queue_size, uint32_t ded_buffers_number, data_field_size_enum data_field_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
FIFO_true_QUEUE_false	Boolean	FIFO or Queue Select
fifo_queue_size	uint32_t	number of elements in tx FIFO/Queue
ded_buffers_number	uint32_t	number of dedicated Tx Buffers
data_field_size	data_field_size_enum	maximum data field size that should be stored in the Tx Buffer element
[표 36] nc_can_tx_buffer_init() Description
5.2.5.25.1. Control Flow Diagram
 
[그림 35] nc_can_tx_buffer_init() 제어 흐름도
5.2.5.26. [SWF-CAN-031] nc_can_global_filter_configuration()
Description	Configures the Global Filter Settings (GFC Register)
Prototype	static void nc_can_global_filter_configuration(const can_struct *can_ptr, GFC_accept_non_matching_frames_enum anfs, GFC_accept_non_matching_frames_enum anfe, Boolean rrfs, Boolean rrfe)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
anfs	GFC_accept_non_matching_frames_enum	accept/reject non-matching standard(11-bits) frames
anfe	GFC_accept_non_matching_frames_enum	accept/reject non-matching standard(29-bits) frames
rrfs	Boolean_t	reject remote frames standard. TRUE: reject remote standard frames, FALSE: filter remote standard frames
rrfe	Boolean	reject remote frames extended. TRUE: reject remote extended frames, FALSE: filter remote extended frames
[표 37] nc_can_global_filter_configuration() Description
5.2.5.26.1. Control Flow Diagram
 
[그림 36] nc_can_global_filter_configuration() 제어 흐름도
5.2.5.27. [SWF-CAN-032] nc_can_filter_init_standard_id()
Description	Configure standard ID filter usage (SIDFC)
Prototype	static void nc_can_filter_init_standard_id(const can_struct *can_ptr, uint32_t number_of_filters)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
number_of_filters	uint32_t	the number of extended message ID filter elements
[표 38] nc_can_filter_init_standard_id() Description
5.2.5.27.1. Control Flow Diagram
 
[그림 37] nc_can_filter_init_standard_id() 제어 흐름도
5.2.5.28. [SWF-CAN-033] nc_can_filter_init_extended_id()
Description	Configure extended ID filter usage (XIDFC)
Prototype	static void nc_can_filter_init_extended_id(const can_struct *can_ptr, uint32_t number_of_filters)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
number_of_filters	uint32_t	the number of extended message ID filter elements
[표 39] nc_can_filter_init_extended_id() Description
5.2.5.28.1. Control Flow Diagram
 
[그림 38] nc_can_filter_init_extended_id() 제어 흐름도
5.2.5.29. [SWF-CAN-034] nc_can_filter_write_standard_id()
Description	Write a Standard Identifier Filter in Message RAM
Prototype	static void nc_can_filter_write_standard_id(const can_struct *can_ptr, uint32_t filter_index, SFT_Standard_Filter_Type_enum sft, Filter_Configuration_enum sfec, uint32_t sfid1, uint32_t sfid2)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
filter_index	uint32_t	index at which the filter element should be written in the '11-bit Filter' section of Message RAM
sft	SFT_Standard_Filter_Type_enum	Standard Filter Type: Range Filter, Dual ID filter, Classic filter, Filter element disabled
sfec	Filter_Configuration_enum	Standard Filter element configuration
sfid1	uint32_t	Standard Filter ID 1
Sfid2	uint32_t	Standard Filter ID 2
[표 40] nc_can_filter_write_standard_id() Description
5.2.5.29.1. Control Flow Diagram
 
[그림 39] nc_can_filter_write_standard_id() 제어 흐름도
5.2.5.30. [SWF-CAN-035] nc_can_copy_tx_event_element_from_msg_ram()
Description	Copy a Tx Event FIFO Element from Message RAM to the Tx Event Element Data Structure given as Pointer
Prototype	static void nc_can_copy_tx_event_element_from_msg_ram(uint64_t msg_addr_in_msg_ram, tx_event_element_struct *tx_event_element_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
voidmsg_addr_in_msg_ram	uint64_t	address of the Tx Event element in the message RAM
tx_event_element_ptr	tx_event_element_struct*	Tx Element Information
[표 41] nc_can_copy_tx_event_element_from_msg_ram() Description
5.2.5.30.1. Control Flow Diagram
 
[그림 40] nc_can_copy_tx_event_element_from_msg_ram() 제어 흐름도
5.2.5.31. [SWF-CAN-036] nc_can_filter_write_extended_id()
Description	Write Extended ID Filter in Message RAM
Prototype	static void nc_can_filter_write_extended_id(const can_struct *can_ptr, uint32_t filter_index, EFT_Extended_Filter_Type_enum eft, Filter_Configuration_enum efec, uint32_t efid1, uint32_t efid2)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
filter_index	uint32_t	index at which the filter element should be written in the '29-bit Filter' section of Message RAM
eft	EFT_Extended_Filter_Type_enum	Extended Filter Type. 00: Range Filter, 01: Dual ID filter, 10: Classic filter, 11: Range Filter; XIDAM mask not applied
efec	Filter_Configuration_enum	Extended Filter element configuration
efid1	uint32_t	Extended Filter ID 1
efid2	uint32_t	Extended Filter ID 2
[표 42] nc_can_filter_write_extended_id() Description
5.2.5.31.1. Control Flow Diagram
 
[그림 41] nc_can_filter_write_extended_id() 제어 흐름도
5.2.5.32. [SWF-CAN-037] nc_can_copy_event_element_from_msg_ram_to_tx_event_list()
Description	Copy a Tx Event FIFO element from Message RAM to TX Event List
Prototype	static void nc_can_copy_event_element_from_msg_ram_to_tx_event_list(can_struct *can_ptr, uint64_t tx_event_element_addr_in_msg_ram)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
tx_event_element_addr_in_msg_ram	uint64_t	address of the Tx Event FIFO element in the message RAM
[표 43] nc_can_copy_event_element_from_msg_ram_to_tx_event_list() Description
5.2.5.32.1. Control Flow Diagram
 
[그림 42] nc_can_copy_event_element_from_msg_ram_to_tx_event_list() 제어 흐름도
5.2.5.33. [SWF-CAN-038] nc_can_tx_event_fifo_copy_element_to_tx_event_list()
Description	Copy all Event Elements from TX Event FIFO to the Software Event List
Prototype	static uint32_t nc_can_tx_event_fifo_copy_element_to_tx_event_list(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
uint32_t	Number of elements read from Tx Event FIFO
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 44] nc_can_tx_event_fifo_copy_element_to_tx_event_list() Description
5.2.5.33.1. Control Flow Diagram
 
[그림 43] nc_can_tx_event_fifo_copy_element_to_tx_event_list() 제어 흐름도
5.2.5.34. [SWF-CAN-039] nc_can_init_msg_ram_partitioning()
Description	Message RAM Partitioning for one CAN node
Prototype	static void nc_can_init_msg_ram_partitioning(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 45] nc_can_init_msg_ram_partitioning() Description
5.2.5.34.1. Control Flow Diagram
 
[그림 44] nc_can_init_msg_ram_partitioning() 제어 흐름도
5.2.5.35. [SWF-CAN-040] nc_can_hpm_ir_handling()
Description	HighPriorityMessage Interrupt
Prototype	static uint32_t nc_can_hpm_ir_handling(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
uint32_t	Number of messages read from RX FIFO
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 46] nc_can_hpm_ir_handling() Description
5.2.5.35.1. Control Flow Diagram
 
[그림 45] nc_can_hpm_ir_handling() 제어 흐름도
5.2.5.36. [SWF-CAN-041] nc_can_rx_msg_list_reset()
Description	CAN Rx Message List Reset
Prototype	static void nc_can_rx_msg_list_reset(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 47] nc_can_rx_msg_list_reset() Description
5.2.5.36.1. Control Flow Diagram
 
[그림 46] nc_can_rx_msg_list_reset() 제어 흐름도
5.2.5.37. [SWF-CAN-042] nc_can_update_msg_statistics_at_mram_access()
Description	Update Message Statistics
Prototype	void nc_can_update_msg_statistics_at_mram_access(can_struct *can_ptr, const can_msg_struct *msg_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
msg_ptr	const can_msg_struct*	CAN Message Parameter Information
[표 48] nc_can_update_msg_statistics_at_mram_access() Description
5.2.5.37.1. Control Flow Diagram
 
[그림 47] nc_can_update_msg_statistics_at_mram_access() 제어 흐름도
5.2.5.38. [SWF-CAN-043] nc_can_convert_DLC_to_data_length()
Description	Convert data into bytes according to DLC value.
Prototype	uint32_t nc_can_convert_DLC_to_data_length(uint16_t dlc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
uint32_t	Data Length
Parameter
Variable Name	Type	Spec. Designation
dlc	uint16_t	DLC Value
[표 49] nc_can_convert_DLC_to_data_length() Description
5.2.5.38.1. Control Flow Diagram
 
[그림 48] nc_can_convert_DLC_to_data_length() 제어 흐름도
5.2.5.39. [SWF-CAN-044] nc_can_process_IR()
Description	CAN Interrupt Processor
Prototype	void nc_can_process_IR(can_struct *can_ptr, uint32_t ir_value)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
ir_value	uint32_t	Interrupt Value
[표 50] nc_can_process_IR() Description
5.2.5.39.1. Control Flow Diagram
 
[그림 49] nc_can_process_IR() 제어 흐름도
5.2.5.40. [SWF-CAN-045] nc_can_initialize()
Description	CAN initialize
Prototype	Error nc_can_initialize(can_global_struct *canfd_struct, const nc_can_param *can_param, uint32_t core_clock)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
canfd_struct	can_global_struct*	CAN global Parameter Information
can_param	nc_can_param*	CAN config Parameter Information
core_clock	uint32_t	CAN Input Clock
[표 51] nc_can_initialize() Description
5.2.5.40.1. Control Flow Diagram
 
[그림 50] nc_can_initialize() 제어 흐름도
5.2.5.41. [SWF-CAN-046] nc_can_reg_set()
Description	Write value to CAN offset.
Prototype	void nc_can_reg_set(uint64_t base_addr, uint32_t offset, uint32_t can_reg_val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
base_addr	uint64_t	CAN Base Address
offset	uint32_t	CAN Offset
can_reg_val	uint32_t	Write Value
[표 52] nc_can_reg_set() Description
5.2.5.41.1. Control Flow Diagram
 
[그림 51] nc_can_reg_set() 제어 흐름도
5.2.5.42. [SWF-CAN-047] nc_can_reg_get()
Description	Get CAN Register Value.
Prototype	uint32_t nc_can_reg_get(uint64_t base_addr, uint32_t offset)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
uint32_t	Register Value
Parameter
Variable Name	Type	Spec. Designation
base_addr	uint64_t	CAN base address.
offset	uint32_t	CAN offset
[표 53] nc_can_reg_get() Description
5.2.5.42.1. Control Flow Diagram
 
[그림 52] nc_can_reg_get() 제어 흐름도
5.3. [SWU-CAN-003] nc_library_can_rx
nc_library_can_rx 유닛은 CAN의 Data Receive 동작과 Message List 설정이 정의되어 있다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 54] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 55] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface
N/A
5.3.5. Unit Function
5.3.5.1. [SWF-CAN-048] nc_can_msg_list_is_empty()
Description	CAN List empty check.
Prototype	static Boolean nc_can_msg_list_is_empty(const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	CAN Message Parameter Information
[표 56] nc_can_msg_list_is_empty() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 53] nc_can_msg_list_is_empty() 제어 흐름도
5.3.5.2. [SWF-CAN-049] nc_can_msg_list_get_head_msg()
Description	Bring head message of CAN Mesaage List.
Prototype	static can_msg_struct *nc_can_msg_list_get_head_msg(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
can_msg_struct*	CAN message structure information
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 57] nc_can_msg_list_get_head_msg() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 54] nc_can_msg_list_get_head_msg() 제어 흐름도
5.3.5.3. [SWF-CAN-050] nc_can_remove_head_msg()
Description	Remove head message from CAN Message.
Prototype	static void nc_can_remove_head_msg(can_global_struct *canfd_struct, const can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
canfd_struct	can_global_struct*	CAN global Parameter Information
can_ptr	can_struct*	Properties of an M_CAN node
[표 58] nc_can_remove_head_msg() Description
5.3.5.3.1. Control Flow Diagram
 
[그림 55] nc_can_remove_head_msg() 제어 흐름도
5.3.5.4. [SWF-CAN-051] nc_can_print_msg()
Description	CAN Message output
Prototype	static void nc_can_print_msg(const can_msg_struct *msg_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
msg_ptr	const can_msg_struct*	CAN Message Parameter Information
[표 59] nc_can_print_msg() Description
5.3.5.4.1. Control Flow Diagram
 
[그림 56] nc_can_print_msg() 제어 흐름도
5.3.5.5. [SWF-CAN-052] nc_can_msg_list_remove_head_msg()
Description	Remove head message from CAN Message List.
Prototype	static void nc_can_msg_list_remove_head_msg(can_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
[표 60] nc_can_msg_list_remove_head_msg() Description
5.3.5.5.1. Control Flow Diagram
 
[그림 57] nc_can_msg_list_remove_head_msg() 제어 흐름도
5.3.5.6. [SWF-CAN-053] nc_can_read()
Description	CAN Data receive
Prototype	Error nc_can_read(can_global_struct *canfd_struct, can_msg_struct *can_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
canfd_struct	can_global_struct*	CAN global Parameter Information
can_ptr	can_msg_struct*	CAN Message Parameter Information
[표 61] nc_can_read() Description
5.3.5.6.1. Control Flow Diagram
 
[그림 58] nc_can_read() 제어 흐름도
5.4. [SWU-CAN-004] nc_library_can_tx
nc_library_can_tx 유닛은 CAN의 Data Transmit 동작과 Message List 설정이 정의되어 있다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 62] 전역 변수
5.4.1. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 63] Defined Parameters
5.4.2. Constraint
N/A
5.4.3. Unit Interface
N/A
5.4.4. Unit Function
5.4.4.1. [SWF-CAN-054] nc_can_tx_fifo_queue_msg_transmit()
Description	Copy CAN Tx Message to FIFO/Queue and request transmission.
Prototype	static Error nc_can_tx_fifo_queue_msg_transmit(can_struct *can_ptr, const can_msg_struct *tx_msg_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
tx_msg_ptr	const can_msg_struct*	CAN Message Parameter Information
[표 64] nc_can_tx_fifo_queue_msg_transmit() Description
5.4.4.1.1. Control Flow Diagram
 
[그림 59] nc_can_tx_fifo_queue_msg_transmit() 제어 흐름도
5.4.4.2. [SWF-CAN-055] nc_can_tx_write_msg_to_txbuf_and_reqtx()
Description	Copy Transmit Message to TX buffer and request Transmission - NO CHECK is performed if the buffer has already a pending tx request
Prototype	static void nc_can_tx_write_msg_to_txbuf_and_reqtx(can_struct *can_ptr, const can_msg_struct *tx_msg_ptr, uint32_t tx_buff_index)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
tx_msg_ptr	const can_msg_struct*	CAN Message Parameter Information
tx_buff_index	uint32_t	Tx Buffer Index
[표 65] nc_can_tx_write_msg_to_txbuf_and_reqtx() Description
5.4.4.2.1. Control Flow Diagram
 
[그림 60] nc_can_tx_write_msg_to_txbuf_and_reqtx() 제어 흐름도
5.4.4.3. [SWF-CAN-056] nc_can_tx_write_msg_to_tx_buffer()
Description	Copy Transmit Message to TX buffer - NO CHECK is performed if the buffer has already a pending tx request, NO Transmission is requested
Prototype	static void nc_can_tx_write_msg_to_tx_buffer(can_struct *can_ptr, const can_msg_struct *tx_msg_ptr, uint32_t tx_buff_index)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
tx_msg_ptr	const can_msg_struct*	CAN Message Parameter Information
tx_buff_index	uint32_t	Tx Buffer Index
[표 66] nc_can_tx_write_msg_to_tx_buffer() Description
5.4.4.3.1. Control Flow Diagram
 
[그림 61] nc_can_tx_write_msg_to_tx_buffer() 제어 흐름도
5.4.4.4. [SWF-CAN-057] nc_can_tx_msg_request_tx()
Description	Request Transmission of TX Message in TX buffer - NO CHECK is performed if the buffer has already a pending tx request
Prototype	static void nc_can_tx_msg_request_tx(const can_struct *can_ptr, uint32_t tx_buff_index)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	const can_struct*	Properties of an M_CAN node
tx_buff_index	uint32_t	Tx Buffer Index
[표 67] nc_can_tx_msg_request_tx() Description
5.4.4.4.1. Control Flow Diagram
 
[그림 62] nc_can_tx_msg_request_tx() 제어 흐름도
5.4.4.5. [SWF-CAN-058] nc_can_write_msg_to_msg_ram()
Description	Copy TX-Message into Message RAM
Prototype	static void nc_can_write_msg_to_msg_ram(can_struct *can_ptr, uint64_t msg_addr_in_msg_ram, const can_msg_struct *msg_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
can_ptr	can_struct*	Properties of an M_CAN node
msg_addr_in_msg_ram	uint64_t	message address
msg_ptr	const can_msg_struct*	CAN Message Parameter Information
[표 68] nc_can_write_msg_to_msg_ram() Description
5.4.4.5.1. Control Flow Diagram
 
[그림 63] nc_can_write_msg_to_msg_ram() 제어 흐름도
5.4.4.6. [SWF-CAN-059] nc_can_reg_set_zero()
Description	Set the zero value.
Prototype	static void nc_can_reg_set_zero(uint64_t base_addr, uint32_t can_reg_val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
base_addr	uint64_t	Base Address
can_reg_val	uint32_t	Offset
[표 69] nc_can_reg_set_zero() Description
5.4.4.6.1. Control Flow Diagram
 
[그림 64] nc_can_reg_set_zero() 제어 흐름도
5.4.4.7. [SWF-CAN-060] nc_can_write()
Description	CAN Data transmission.
Prototype	Error nc_can_write(can_global_struct *canfd_struct, const can_msg_struct *tx_msg_ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
canfd_struct	can_global_struct*	CAN global Parameter Information
tx_msg_ptr	can_msg_struct*	CAN Message Parameter Information
[표 70] nc_can_write() Description
5.4.4.7.1. Control Flow Diagram
 
[그림 65] nc_can_write() 제어 흐름도
5.5. [SWU-CAN-005] can_driver
can_driver 유닛은 User가 CAN의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 CAN 초기화, Transmit/Receive Data, Set Paramter이다.
5.5.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 71] 전역 변수
5.5.2. Defined Parameters
Name	Description	Value
LEC_CRC_ERROR	CRC Error Code Index	6
CASE_CAN_CRC_ERROR	CAN CRC Error case number	1
[표 72] Defined Parameters
5.5.3. Constraint
N/A
5.5.4. Unit Interface 
5.5.4.1. [SUI-CAN-001] nc_can_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_can_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	driver-descriptor
[표 73] nc_can_probe() Description
5.5.4.1.1. Control Flow Diagram
 
[그림 66] nc_can_probe() 제어 흐름도
5.5.4.2. [SUI-CAN-002] nc_can_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_can_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success or Failure or IllegalLength or IllegalCounterValue
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 74] nc_can_ioctl() Description
5.5.4.2.1. Control Flow Diagram
 
[그림 67] nc_can_ioctl() 제어 흐름도
5.5.4.3. [SUI-CAN-003] nc_can_ioctl_start_up_with_set_param()
Description	Request CAN Initialize and start
Prototype	static Error nc_can_ioctl_start_up_with_set_param(nc_can_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_can_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 75] nc_can_ioctl_start_up_with_set_param() Description
5.5.4.3.1. Control Flow Diagram
 
[그림 68] nc_can_ioctl_start_up_with_set_param() 제어 흐름도
5.5.4.4. [SUI-CAN-004] nc_can_ioctl_shutdown()
Description	Request CAN Shutdown
Prototype	static Error nc_can_ioctl_shutdown(nc_can_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_can_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 76] nc_can_ioctl_shutdown() Description
5.5.4.4.1. Control Flow Diagram
 
[그림 69] nc_can_ioctl_shutdown() 제어 흐름도
5.5.4.5. [SUI-CAN-005] nc_can_ioctl_transmit_data()
Description	Request CAN transmit
Prototype	static Error nc_can_ioctl_transmit_data(nc_can_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_can_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 77] nc_can_ioctl_transmit_data() Description
5.5.4.5.1. Control Flow Diagram
 
[그림 70] nc_can_ioctl_transmit_data() 제어 흐름도
5.5.4.6. [SUI-CAN-006] nc_can_ioctl_receive_data()
Description	Request CAN read data
Prototype	static Error nc_can_ioctl_receive_data(nc_can_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002
Return
Type	Spec. Designation
Error	Succes or IllegalCounterValue or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_can_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 78] nc_can_ioctl_receive_data() Description
5.5.4.6.1. Control Flow Diagram
 
[그림 71] nc_can_ioctl_receive_data() 제어 흐름도
5.5.4.7. [SUI-CAN-007] nc_can_ioctl_get_iodevice()
Description	Return IODevice Handle
Prototype	static Error nc_can_ioctl_get_iodevice(nc_can_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
Error	Success or IllrgalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_can_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 79] nc_can_ioctl_get_iodevice() Description
5.5.4.7.1. Control Flow Diagram
 
[그림 72] nc_can_ioctl_get_iodevice() 제어 흐름도
5.5.5. Unit Function
5.5.5.1. [SWF-CAN-061] nc_can_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_can_driver_t *nc_can_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-001
Return
Type	Spec. Designation
nc_lin_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel-number
[표 80] nc_can_get_instance() Description
5.5.5.1.1. Control Flow Diagram
 
[그림 73] nc_can_get_instance() 제어 흐름도
5.5.5.2. [SWF-CAN-062] nc_can_get_safety_alarm_object()
Description	Return Safety Alarm Object.
Prototype	static inline Connection nc_can_get_safety_alarm_object(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002, SSR-SoC-CC-001
Return
Type	Spec. Designation
Connection	Safety alarm object
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 81] nc_can_get_safety_alarm_object() Description
5.5.5.2.1. Control Flow Diagram
 
[그림 74] nc_can_get_safety_alarm_object() 제어 흐름도
5.5.5.3. [SWF-CAN-063] nc_can_to_safety_mechanism()
Description	Send Alarm to Safety Mechanism.
Prototype	static void nc_can_to_safety_mechanism(Address alam_code)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CAN-002, SSR-SoC-CC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
alam_code	Address	alarm-code-value
[표 82] nc_can_to_safety_mechanism() Description
5.5.5.3.1. Control Flow Diagram
 
[그림 75] nc_can_to_safety_mechanism() 제어 흐름도

5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-CC-001] CC_sm
CC_sm 유닛은 LIN, CAN, MMC, GMAC의 Communication Controller CRC에서 Error가 발생 시 SE에 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
5.1.4.1. [SUI-CC-001] nc_set_communication_controller_fault()
Description	Write SW fault pre-defined as CC_SM.
Prototype	Error nc_set_communication_controller_fault(nc_interface_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CC-001
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
instance	nc_interface_sm_t*	Task Argument
[표 5] nc_set_communication_controller_fault() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] nc_set_communication_controller_fault() 제어 흐름도
5.1.5. Unit Function
N/A
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-CM-001] CM_sm
CM_sm 유닛은 Clock Monitoring에 Error가 발생 시 SE로 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
g_clock_monitor_config	CM Config	Fault, SE Block and IP Number	0	CM Configuration Value
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
CM_TASK_SLEEP	Sleep value	5000
MAX_OF_ATTRIBUTE	Max Attribute Value	10
ASYNC_TASK_LOOP_BREAK_KEY	Fault Block Mask	0x10C0
SE_CLK_MONITOR_MASK	clock monitoring offset	0x0200
SE_CLK_MONITOR_MIN_OFFSET	clock monitoring offset	0x0004
SE_CLK_MONITOR_MAX_OFFSET	clock monitoring offset	0x0008
SE_CLK_MONITOR_CNT_VAL	clock monitoring offset	0x000C
SE_CLK_MONITOR_CHECK_PER_TEN_MS	24Mhz clock speed value	240000
SE_CLK_MONITOR_CHECK_PER_ONE_MS	24Mhz clock speed value	24000
SE_CLK_MONITOR_CHECK_PER_POINTONE_MS	24Mhz clock speed value	2400
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-CM-001] clock_monitor_task()
Description	Run clock monitor task.
Prototype	Value clock_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 5] clock_monitor_task() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] clock_monitor_task() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-CM-001] nc_get_scu_clock()
Description	Get scu clock.
Prototype	static Error nc_get_scu_clock(nc_clock_monitor_sm_t *instance, Value clock_cmd, Value *clock_value)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_clock_monitor_sm_t*	Clock monitor instance
clock_cmd	Value	clock command
clock_value	Value*	clock value pointer
[표 6] nc_get_scu_clock() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_get_scu_clock() 제어 흐름도
5.1.5.2. [SWF-CM-002] nc_get_clock_monitoring_mode_status()
Description	Get CM mode status.
Prototype	static Error nc_get_clock_monitoring_mode_status(nc_clock_monitor_sm_t *instance, Address offset)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-002
Return
Type	Spec. Designation
Error	Success or TimeOutValue
Parameter
Variable Name	Type	Spec. Designation
instance	nc_clock_monitor_sm_t*	Clock Monitor Instance.
offset	Address	Offset value
[표 7] nc_get_clock_monitoring_mode_status() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_get_clock_monitoring_mode_status() 제어 흐름도
5.1.5.3. [SWF-CM-003] nc_set_clock_monitoring_offset()
Description	Set CM offset.
Prototype	static void nc_set_clock_monitoring_offset(nc_clock_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_clock_monitor_sm_t*	common_config - Safety Engine config handle
cm_config - CM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
unit_time - Clock Monitoring capture time
target_ip - Clock Monitoring component
attributes - Clock Monitoring attributes
max_num_of_attributes - Clock Monitoring max_number of attributes
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 8] nc_set_clock_monitoring_offset() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_set_clock_monitoring_offset() 제어 흐름도
5.1.5.4. [SWF-CM-004] nc_set_clock_monitoring_mask_value()
Description	Set CM mask value.
Prototype	static Error nc_set_clock_monitoring_mask_value(nc_safety_engine_offset_t *offset_instance, nc_safety_engine_ip_block target_ip)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
target_ip	nc_safety_engine_ip_block	target ip value.
[표 9] nc_set_clock_monitoring_mask_value() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_set_clock_monitoring_mask_value() 제어 흐름도
5.1.5.5. [SWF-CM-005] nc_set_clock_monitoring_config()
Description	Set CM config.
Prototype	static void nc_set_clock_monitoring_config(nc_clock_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_clock_monitor_sm_t*	common_config - Safety Engine config handle
cm_config - CM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
unit_time - Clock Monitoring capture time
target_ip - Clock Monitoring component
attributes - Clock Monitoring attributes
max_num_of_attributes - Clock Monitoring max_number of attributes
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 10] nc_set_clock_monitoring_config() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_set_clock_monitoring_config() 제어 흐름도
5.1.5.6. [SWF-CM-006] nc_enable_clock_monitoring()
Description	Enable fault and irq of CM.
Prototype	static void nc_enable_clock_monitoring(nc_clock_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance, Value mask_value)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_clock_monitor_sm_t*	common_config - Safety Engine config handle
cm_config - CM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
unit_time - Clock Monitoring capture time
target_ip - Clock Monitoring component
attributes - Clock Monitoring attributes
max_num_of_attributes - Clock Monitoring max_number of attributes
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
mask_value	Value	Maks Value
[표 11] nc_enable_clock_monitoring() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 11] nc_enable_clock_monitoring() 제어 흐름도
5.1.5.7. [SWF-CM-007] nc_start_clock_monitoring()
Description	Start CM.
Prototype	static void nc_start_clock_monitoring(nc_clock_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
	instance		nc_clock_monitor_sm_t*	common_config - Safety Engine config handle
cm_config - CM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
unit_time - Clock Monitoring capture time
target_ip - Clock Monitoring component
attributes - Clock Monitoring attributes
max_num_of_attributes - Clock Monitoring max_number of attributes
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 12] nc_start_clock_monitoring() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 12] nc_start_clock_monitoring() 제어 흐름도
5.1.5.8. [SWF-CM-008] nc_set_offset_enable_clock_monitoring()
Description	Set the CM Offset and enable it.
Prototype	static Error nc_set_offset_enable_clock_monitoring(nc_clock_monitor_sm_t *monitor_param, nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
	monitor_param	nc_clock_monitor_sm_t*	common_config - Safety Engine config handle
cm_config - CM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
unit_time - Clock Monitoring capture time
target_ip - Clock Monitoring component
attributes - Clock Monitoring attributes
max_num_of_attributes - Clock Monitoring max_number of attributes
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 13] nc_set_offset_enable_clock_monitoring() Description
5.1.5.8.1. Control Flow Diagram
 
[그림 13] nc_set_offset_enable_clock_monitoring() 제어 흐름도
5.1.5.9. [SWF-CM-009] nc_start_clock_monitoring_on_ready()
Description	Run Clock monitoring asynchronous component.
Prototype	static Error nc_start_clock_monitoring_on_ready(nc_clock_monitor_sm_t *instance, Address offset_param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CM-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
	instance	nc_clock_monitor_sm_t*	common_config - Safety Engine config handle
cm_config - CM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
unit_time - Clock Monitoring capture time
target_ip - Clock Monitoring component
attributes - Clock Monitoring attributes
max_num_of_attributes - Clock Monitoring max_number of attributes
offset_param	Address	safety engine offset instance base address
[표 14] nc_start_clock_monitoring_on_ready() Description
5.1.5.9.1. Control Flow Diagram
 
[그림 14] nc_start_clock_monitoring_on_ready() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-CNN-001] sm_aim_cnn_kernel_driver
sm_aim_cnn_kernel_driver 유닛은 커널 부팅 시 NPU의 HW 리소스를 초기화하고 Read/Write에 대한 IO 요청을 수행한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
SM_CNN_IODEV_NAME	Device Name	"SM_AIM_CNN_IODEV"
SIZE_OF_SM_CNN_IODEV_NAME	Device Name Size	16
SM_CNN_SYSCALL_WR_CMD_SET_RUN	SysCall Write Command	0
SM_CNN_SYSCALL_RD_CMD_GET_INTR_STATUS	SysCall Read Command	1
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface 
N/A
5.1.4. Unit Function
5.1.4.1. [SWF-CNN-001] sm_aim_cnn_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceStatus function from user-space.
Prototype	static Error sm_aim_cnn_kernel_read_command(IODeviceVector iod, Value command, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	void*	buffer address
len	Address	buffer length
[표 5] sm_aim_cnn_kernel_read_command() Description 
5.1.4.1.1. Control Flow Diagram
 
[그림 5] sm_aim_cnn_kernel_read_command() 제어 흐름도
5.1.4.2. [SWF-CNN-002] sm_aim_cnn_kernel_write_command()
Description	Performs an io request for irq-iodevice by calling the WriteIODeviceStatus function from user-space.
Prototype	static Error sm_aim_cnn_kernel_write_command(IODeviceVector iod, Value command, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	void*	buffer address
len	Address	buffer length
[표 6] sm_aim_cnn_kernel_write_command() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 6] sm_aim_cnn_kernel_write_command() 제어 흐름도
5.1.4.3. [SWF-CNN-003] sm_aim_cnn_kernel_probe()
Description	Performs hw resource initialization of npu at kernel-boot time.
Prototype	static Error sm_aim_cnn_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 7] sm_aim_cnn_kernel_probe() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 7] sm_aim_cnn_kernel_probe() 제어 흐름도
5.1.4.4. [SWF-CNN-004] nc_sm_aim_cnn_kernel_get_instance()
Description	Returns the instance handle of the sm aim cnn kernel driver.
Prototype	static inline sm_aim_cnn_kernel_driver_t *nc_sm_aim_cnn_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-001
Return
Type	Spec. Designation
sm_aim_cnn_kernel_driver_t*	cnn instance handler
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 8] nc_sm_aim_cnn_kernel_get_instance() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 8] nc_sm_aim_cnn_kernel_get_instance() 제어 흐름도
5.2. [SWU-CNN-002] aim_cnn_kernel_driver
aim_cnn_kernel_driver 유닛은 커널 부팅 시 NPU의 HW 리소스를 초기화한다.
Interrupt 처리, Read/Write Register, Reset, Create, Read Buffer를 수행한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 9] 전역 변수
5.2.1. Defined Parameters
Name	Description	Value
CNN_IODEV_NAME	IO Device Name	"AIM_CNN_IODEV"
CNN_IRQ_IODEV_NAME	IRQ Device Name	"AIM_CNN_IRQ_IODEV"
SIZE_OF_CNN_IODEV_NAME	Device Name Size	13
SIZE_OF_CNN_IRQ_IODEV_NAME	Device Name Size	17
SIZE_OF_CNN_DEVICE_NAME	Device Name Size	15
SIZE_OF_CNN_IRQ_NAME	IRQ Name Size	19
SIZE_OF_CNN_IRQ_TASK_NAME	IRQ Task Name Size	24
DEFAULT_CNN_IRQ_PRIORITY	CNN IRQ Priority	100
DEFAULT_TASK_PRIORITY	Task Priority	100
CNN_SYSCALL_RD_CMD_GET_DMA_PHYSICAL_ADDRESS	SysCall Read Command	0
CNN_SYSCALL_WR_CMD_SET_ENABLE_IRQ	SysCall Write Command	0
[표 10] Defined Parameters
5.2.2. Constraint
N/A
5.2.3. Unit Interface 
N/A
5.2.4. Unit Function
5.2.4.1. [SWF-CNN-005] nc_aim_cnn_kernel_get_instance()
Description	Returns the instance handle of the aim cnn kernel driver.
Prototype	static inline aim_cnn_kernel_driver_t *nc_aim_cnn_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-001
Return
Type	Spec. Designation
aim_cnn_kernel_driver_t*	Instance pointer
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 11] nc_aim_cnn_kernel_get_instance() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 9] nc_aim_cnn_kernel_get_instance() 제어 흐름도
5.2.4.2. [SWF-CNN-006] nc_aim_cnn_irq_kernel_get_instance()
Description	Returns the instance handle of the aim cnn irq kernel driver.
Prototype	static inline aim_cnn_irq_kernel_driver_t *nc_aim_cnn_irq_kernel_get_instance(uint32_t irq_id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-001
Return
Type	Spec. Designation
aim_cnn_irq_kernel_driver_t*	IRQ Instance Handle
Parameter
Variable Name	Type	Spec. Designation
irq_id	uint32_t	VDMA CNN IRQ ID
[표 12] nc_aim_cnn_irq_kernel_get_instance() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 10] nc_aim_cnn_irq_kernel_get_instance() 제어 흐름도
5.2.4.3. [SWF-CNN-007] aim_cnn_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT aim_cnn_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-001
Return
Type	Spec. Designation
EVENT	Event handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 13] aim_cnn_kernel_exception_handler() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 11] aim_cnn_kernel_exception_handler() 제어 흐름도
5.2.4.4. [SWF-CNN-008] aim_cnn_irq_kernel_read_command_for_sm()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Reads and returns the register value.
Prototype	static Error aim_cnn_irq_kernel_read_command_for_sm(IODeviceVector iod, Value reg_number, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	SUCCESS
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
reg_number	Value	Register number
buf	Value*	Buffer address of architecture value
[표 14] aim_cnn_irq_kernel_read_command_for_sm() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 12] aim_cnn_irq_kernel_read_command_for_sm() 제어 흐름도
5.2.4.5. [SWF-CNN-009] aim_cnn_kernel_read_register()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Reads and returns the register value.
Prototype	static Error aim_cnn_kernel_read_register(IODeviceVector iod, Value reg_number, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
reg_number	Value	Register number
buf	Value*	buffer address of architecture-value
[표 15] aim_cnn_kernel_read_register() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 13] aim_cnn_kernel_read_register() 제어 흐름도
5.2.4.6. [SWF-CNN-010] aim_cnn_kernel_write_register()
Description	Performs an io request for irq-iodevice by calling the WriteIODeviceRegister function from user-space.
Writes a value to a register.
Prototype	static Error aim_cnn_kernel_write_register(IODeviceVector iod, Value reg_number, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
reg_number	Value	Register number
val	Value	architecture-value
[표 16] aim_cnn_kernel_write_register() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 14] aim_cnn_kernel_write_register() 제어 흐름도
5.2.4.7. [SWF-CNN-011] aim_cnn_irq_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Reads and returns the register value.
Prototype	static Error aim_cnn_irq_kernel_read_command(IODeviceVector iod, Value reg_number, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
reg_number	Value	Register number
buf	Value*	buffer address of architecture-value
[표 17] aim_cnn_irq_kernel_read_command() Description
5.2.4.7.1. Control Flow Diagram
 
[그림 15] aim_cnn_irq_kernel_read_command() 제어 흐름도
5.2.4.8. [SWF-CNN-012] aim_cnn_kernel_read_buffer()
Description	Performs an io request for irq-iodevice by calling the ReadBuffersFromIODevice function from user-space.
Prototype	static Error aim_cnn_kernel_read_buffer(IODeviceVector iod, Value cmd, Value num, Buffer *ghs_buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
cmd	Value	command number
num	Value	sub-command number
ghs_buf	Buffer*	ghs linked buffer
[표 18] aim_cnn_kernel_read_buffer() Description
5.2.4.8.1. Control Flow Diagramc
 
[그림 16] aim_cnn_kernel_read_buffer() 제어 흐름도
5.2.4.9. [SWF-CNN-013] aim_cnn_kernel_probe()
Description	Performs hw resource initialization of npu at kernel-boot time.
Prototype	static Error aim_cnn_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 19] aim_cnn_kernel_probe() Description
5.2.4.9.1. Control Flow Diagramc
 
[그림 17] aim_cnn_kernel_probe() 제어 흐름도

5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-DMA-001] dma330_kernel_driver
dma330_kernel_driver 유닛은 커널 부팅 시 DMA의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
DMA_ELEM_SRC	SRC Element Value	0
DMA_ELEM_DST	DST Element Value	1
DMA_ELEM_INST	INST Element Value	2
MAX_OF_DMA_ELEM	MAX Element Value	3
DMA_ABORT_IRQ	IRQ Abort	0
DMA_CH0_IRQ	IRQ Channel 0	1
DMA_CH1_IRQ	IRQ Channel 1	2
DMA_CH2_IRQ	IRQ Channel 2	3
DMA_CH3_IRQ	IRQ Channel 3	4
DMA_CH4_IRQ	IRQ Channel 4	5
DMA_CH5_IRQ	IRQ Channel 5	6
DMA_CH6_IRQ	IRQ Channel 6	7
DMA_CH7_IRQ	IRQ Channel 7	8
MAX_OF_DMA_IRQ_TYPE	MAX IRQ Number	9
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-DMA-001] nc_dma330_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline dma330_kernel_driver_t *nc_dma330_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
dma330_kernel_driver_t*	DMA instance
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 5] nc_dma330_kernel_get_instance() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_dma330_kernel_get_instance() 제어 흐름도
5.1.5.2. [SWF-DMA-002] nc_dma330_kernel_get_irq_instance()
Description	Returns the irq-instance handle of the driver.
Prototype	static inline irq_dma330_kernel_driver_t *nc_dma330_kernel_get_irq_instance(uint32_t irq_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
irq_dma330_kernel_driver_t*	DMA IRQ pointer
Parameter
Variable Name	Type	Spec. Designation
irq_num	uint32_t	IRQ number
[표 6] nc_dma330_kernel_get_irq_instance() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_dma330_kernel_get_irq_instance() 제어 흐름도
5.1.5.3. [SWF-DMA-003] nc_dma330_get_phy_and_kernel_addr_by_name()
Description	Get the address matching the peripheral name or memory name.
Prototype	static Error nc_dma330_get_phy_and_kernel_addr_by_name(dma_peri_data_register_t *peri_dat_reg, const char *name, Address *kernel_addr, uint32_t *phy_addr, uint64_t *len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
peri_dat_reg	dma_peri_data_register_t*	name - Periphelar name data.
phy_addr - Physical address.
name	const char*	Name data.
kernel_addr	Address*	Kernel address.
phy_addr	uint32_t*	Physical address.
len	uint64_t*	Length
[표 7] nc_dma330_get_phy_and_kernel_addr_by_name() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_dma330_get_phy_and_kernel_addr_by_name() 제어 흐름도
5.1.5.4. [SWF-DMA-004] nc_dma330_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_dma330_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
EVENT	Event handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME *	extended exception frame
id	Address	callback parameter
[표 8] nc_dma330_kernel_exception_handler() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_dma330_kernel_exception_handler() 제어 흐름도
5.1.5.5. [SWF-DMA-005] nc_dma330_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadBuffersFromIODevice function from user-space.
Prototype	static Error nc_dma330_kernel_read_command(IODeviceVector iod, Value command, Value sub_command, Buffer *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or IllegalLength or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
sub_command	Value	sub-command number
buf	Buffer*	ghs linked buffer
[표 9] nc_dma330_kernel_read_command() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_dma330_kernel_read_command() 제어 흐름도
5.1.5.6. [SWF-DMA-006] nc_dma330_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteBuffersToIODevice function from user-space.
Prototype	static Error nc_dma330_kernel_write_command(IODeviceVector iod, Value command, Value sub_command, Buffer *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure or IllegalLength or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
sub_command	Value	sub-command number
buf	Buffer*	ghs linked buffer
[표 10] nc_dma330_kernel_write_command() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 11] nc_dma330_kernel_write_command() 제어 흐름도
5.1.5.7. [SWF-DMA-007] nc_dma330_kernel_probe()
Description	Performs hw resource initialization of DMA at kernel-boot time.
Prototype	static Error nc_dma330_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 11] nc_dma330_kernel_probe() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 12] nc_dma330_kernel_probe() 제어 흐름도
5.2. [SWU-DMA-002] nc_library_dma330_instruction
nc_library_dma330_instruction 유닛은 DMA의 Flush, Kill, Load, Wait Instruction이 정의되어 있다.

5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 12] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
STRONG_ORDERED	Strong order enable	1
[표 13] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-DMA-008] nc_dma_instruction_end()
Description	End signals to the DMAC that the DMA sequence is complete
Prototype	uint32_t nc_dma_instruction_end(dma_enc_param_t *enc_param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMAEND size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
[표 14] nc_dma_instruction_end() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 13] nc_dma_instruction_end() 제어 흐름도
5.2.5.2. [SWF-DMA-009] nc_dma_instruction_flushp()
Description	Flush Peripheral clears the sate in the DMAC that describes the contents of the peripheral and sends a message to the peripheral to re-send its level status.
Prototype	uint32_t nc_dma_instruction_flushp(dma_enc_param_t *enc_param, uint32_t peri)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMAFLUSHP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
peri	uint32_t	peripheral number
(5-bit immediate, value 0-31)
[표 15] nc_dma_instruction_flushp() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 14] nc_dma_instruction_flushp() 제어 흐름도
5.2.5.3. [SWF-DMA-010] nc_dma_instruction_kill()
Description	Kill instructs the DMAC to immediately terminate execution of a thread.
Prototype	uint32_t nc_dma_instruction_kill(dma_enc_param_t *enc_param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMAKILL size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
[표 16] nc_dma_instruction_kill() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 15] nc_dma_instruction_kill() 제어 흐름도
5.2.5.4. [SWF-DMA-011] nc_dma_instruction_ld()
Description	Load instructs the DMAC to perform a DMA load, using AXI transactions that the SAR and CCR(Channel Control Register) registers specify.
Prototype	uint32_t nc_dma_instruction_ld(dma_enc_param_t *enc_param, uint32_t operand_bs)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMALD size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
operand_bs	uint32_t	single or burst
[표 17] nc_dma_instruction_ld() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 16] nc_dma_instruction_ld() 제어 흐름도
5.2.5.5. [SWF-DMA-012] nc_dma_instruction_ldp()
Description	Load and notify Peripheral instructs the DMAC to perform a DMA load, using AXI transactions the SAR and CCR(Channel Control Register) registers specify.
Prototype	uint32_t nc_dma_instruction_ldp(dma_enc_param_t *enc_param, uint32_t operand_bs, uint32_t peri)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMALDP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
operand_bs	uint32_t	single or burst
peri	uint32_t	peripheral number
(5-bit immediate, value 0-31)
[표 18] nc_dma_instruction_ldp() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 17] nc_dma_instruction_ldp() 제어 흐름도
5.2.5.6. [SWF-DMA-013] nc_dma_instruction_lp()
Description	Loop instructs the DMAC to load an 8-bit value into the Loop Counter Register
Prototype	uint32_t nc_dma_instruction_lp(dma_enc_param_t *enc_param, uint32_t loop_counter, uint32_t loop_iteration)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMALP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
loop_counter	uint32_t	LC0 register(set nLoopCounter to 0)/LC1 register(set nLoopCounter to 1)
loop_iteration	uint32_t	the number of loops to perform, range 1-256
[표 19] nc_dma_instruction_lp() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 18] nc_dma_instruction_lp() 제어 흐름도
5.2.5.7. [SWF-DMA-014] nc_dma_instruction_lpend()
Description	Loop End indicates the last instruction in the program loop
Prototype	uint32_t nc_dma_instruction_lpend(dma_enc_param_t *enc_param, dma_enc_arg_lpend_t *arg)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMALPEND size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
arg	dma_enc_arg_lpend_t*	- operand_bs : single or burst
- loop_counter :  determine Loop Counter Resiters 0 or 1 [0: Counter0,  1: Counter1]
- forever : Forever flag [0: if DMALPFE started,  1: if DMALP started]
- back_jump : back jump offset
[표 20] nc_dma_instruction_lpend() Description
5.2.5.7.1. Control Flow Diagram
	 	
[그림 19] nc_dma_instruction_lpend() 제어 흐름도
5.2.5.8. [SWF-DMA-015] nc_dma_instruction_mov()
Description	Move instructs the DMAC to move a 32-bit immediate value(SAR, DAR, CCR(Channel Control Register))
Prototype	uint32_t nc_dma_instruction_mov(dma_enc_param_t *enc_param, uint32_t rd, uint32_t val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMALP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
rd	uint32_t	SAR(set rd to 0), CCR(Channel Control Register)(set rd to 1), DAR(set rd to 2)
val	uint32_t	32-bit immediate value
[표 21] nc_dma_instruction_mov() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 20] nc_dma_instruction_mov() 제어 흐름도
5.2.5.9. [SWF-DMA-016] nc_dma_instruction_sev()
Description	Send Event instructs the DMAC to modify an event-interrupt resource.
Prototype	uint32_t nc_dma_instruction_sev(dma_enc_param_t *enc_param, uint32_t event)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMALP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
event	uint32_t	event number(5-bit immediate, value 0-31)
[표 22] nc_dma_instruction_sev() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 21] nc_dma_instruction_sev() 제어 흐름도
5.2.5.10. [SWF-DMA-017] nc_dma_instruction_st()
Description	Store instructs the DMAC to transfer data from the FIFO to the location DAR, using AXI transactions that the DAR and CCR(Channel Control Register) registers specify.
Prototype	uint32_t nc_dma_instruction_st(dma_enc_param_t *enc_param, uint32_t operand_bs)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMAST size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
operand_bs	uint32_t	single or burst
[표 23] nc_dma_instruction_st() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 22] nc_dma_instruction_st() 제어 흐름도
5.2.5.11. [SWF-DMA-018] nc_dma_instruction_stp()
Description	Store and notify Peripheral instructs the DMAC to transfer data from the FIFO to the location that the DAR specifies, using AXI transactions the SAR and CCR(Channel Control Register) registers specify
Prototype	uint32_t nc_dma_instruction_stp(dma_enc_param_t *enc_param, uint32_t operand_bs, uint32_t peri)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMASTP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
operand_bs	uint32_t	single or burst
peri	uint32_t	peripheral number
(5-bit immediate, value 0-31)
[표 24] nc_dma_instruction_stp() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 23] nc_dma_instruction_stp() 제어 흐름도
5.2.5.12. [SWF-DMA-019] nc_dma_instruction_wfp()
Description	Wait For Peripheral instructs the DMAC to halt execution of the thread until the specified peripheral signals a DMA request for that DMA channel
Prototype	uint32_t nc_dma_instruction_wfp(dma_enc_param_t *enc_param, uint32_t operand_bsp, uint32_t peri)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMAWFP size
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	- buf : Data Buffer
- pos : Data Position
operand_bsp	uint32_t	single(set bs to 0 and p to 0), 
burst(set bs to q and p to 0), 
periph(set bs to 0 and p to 1)
peri	uint32_t	peripheral number
(5-bit immediate, value 0-31)
[표 25] nc_dma_instruction_wfp() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 24] nc_dma_instruction_wfp() 제어 흐름도

5.3. [SWU-DMA-003] nc_library_dma330
nc_library_dma330 유닛은 DMA 수행에 필요한 Library가 정의되어 있다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 26] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
CC_NCAH_NBUF	Noncacheable and nonbufferable	0  
CC_BUF	Bufferable only	1  
CC_CAH_NALC	Cacheable, but do not allocate	2  
CC_CAH_BUF_NALC	Cacheable and bufferable, but do not allocate	3  
CC_INVALID1	Reserved	4  
CC_INVALID2	Reserved	5  
CC_CAH_WTHR_ALC	Cacheable write-through, allocate on reads only	6  
CC_CAH_WBAK_ALC	Cacheable write-back, allocate on reads only	7  
IT_PERIPH	Unused	0
IT_PCELL	Unused	1
ERA_SAR	Source Address Register	0  
ERA_DAR	Destination Address Register	1  
EO_SINGLE	EO Single mor	0
EO_BURST	EO Burst mode	1
EO_ALWAYS	EOP Alaways mode	2  
EOP_SINGLE	EOP Single mor	0
EOP_BURST	EOP Burst mode	1
EOP_PERI	EOP Peri mode	2
ERD_SAR	Source Address Register	0  
ERD_CCR 	Channel Control Register	1  
ERD_DAR	Destination Address Register	2  
OERR_NONE	The all xfers in the request were success	0  
OERR_ABORT	If req aborted due to global error	1  
OERR_FAIL	If req failed due to problem with Channel	2  
DO_START	Do Start	0
DO_ABORT 	Do Abort	1
DMA_INST_SIZE 	DMA Instruction Size	128
DMA_WAIT_TIMEOUT	DMA Timeout Value	1000
[표 27] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface 
N/A
5.3.5. Unit Function
5.3.5.1. [SWF-DMA-020] nc_dma_prepare_ccr()
Description	CCR(Channel Control Register) argument description prepare function.
Set union dma_ccr_union using tDMA_REG_CONF.
Prototype	static union dma_ccr_union nc_dma_prepare_ccr(dma_req_conf_t *req_conf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
dma_ccr_union	src_inc - enable flag bit of increase source address
src_burst_size - source burst size
src_burst_len - source burst length
src_prot_ctrl - source protection control
src_cache_ctrl - source cache control
dst_inc - enable flag bit of increase destination address
dst_burst_size - destination burst size
dst_burst_len - destination burst length
dst_prot_ctrl - destination protection control
dst_cache_ctrl - destination cache control
endian_swap_size - endian swap size
reserved
Parameter
Variable Name	Type	Spec. Designation
req_conf	dma_req_conf_t*	src_inc - enable flag of increase source address
dst_inc - enable flag of increase destination address
privileged - Protection encoding, 1: privileged access,  0: normal access
non_secure - Protection encoding, 1: nonsecure access,  0: secure access
instruction - Protection encoding, 1: instruction access,  0: data access
src_burst_size - the number of bytes per beat
src_burst_len - the number of data transfer beat. 1~16
dst_burst_size - the number of bytes per beat
dst_burst_len - the number of data transfer beat. 1~16
src_transaction_size - Data transfer size of 1 configured burst transfer of src
dst_transaction_size - Data transfer size of 1 configured burst transfer of dst
src_cache_ctrl - cache control flag of source buffer
dst_cache_ctrl - cache control flag of destination buffer
swap_size
[표 28] nc_dma_prepare_ccr() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 25] nc_dma_prepare_ccr() 제어 흐름도
5.3.5.2. [SWF-DMA-021] nc_dma_is_valid_ccr()
Description	CCR(Channel Control Register) valid check function.
Verify whether union dma_ccr_union setting is valid or not.
Prototype	static Boolean nc_dma_is_valid_ccr(union dma_ccr_union ccr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
ccr	dma_ccr_union	src_inc - enable flag bit of increase source address
src_burst_size - source burst size
src_burst_len - source burst length
src_prot_ctrl - source protection control
src_cache_ctrl - source cache control
dst_inc - enable flag bit of increase destination address
dst_burst_size - destination burst size
dst_burst_len - destination burst length
dst_prot_ctrl - destination protection control
dst_cache_ctrl - destination cache control
endian_swap_size - endian swap size
reserved
[표 29] nc_dma_is_valid_ccr() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 26] nc_dma_is_valid_ccr() 제어 흐름도
5.3.5.3. [SWF-DMA-022] nc_dma_get_burst_code_size()
Description	DMA burst code size setting function.
Prototype	static uint32_t nc_dma_get_burst_code_size(dma_req_t *req)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	code size
Parameter
Variable Name	Type	Spec. Designation
req	dma_req_t*	req_type - transfer request type: P2P, M2P, P2M
peri_num - peripheral number
req_conf - transfer request config
xfer - transfer information
[표 30] nc_dma_get_burst_code_size() Description
5.3.5.3.1. Control Flow Diagram
 
[그림 27] nc_dma_get_burst_code_size() 제어 흐름도
5.3.5.4. [SWF-DMA-023] nc_dma_load_store_mem_to_mem()
Description	Memory to memory data transfer function
Prototype	static uint32_t nc_dma_load_store_mem_to_mem(dma_enc_param_t *enc_param, dma_req_t *req, uint32_t cyc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
req	dma_req_t*	req_type - transfer request type: P2P, M2P, P2M
peri_num - peripheral number
req_conf - transfer request config
xfer - transfer information
cyc	uint32_t	M2M cycle number
[표 31] nc_dma_load_store_mem_to_mem() Description
5.3.5.4.1. Control Flow Diagram
 
[그림 28] nc_dma_load_store_mem_to_mem() 제어 흐름도
5.3.5.5. [SWF-DMA-024] nc_dma_load_store_mem_to_dev()
Description	Memory to device data transfer function
Prototype	static uint32_t nc_dma_load_store_mem_to_dev(dma_enc_param_t *enc_param, dma_req_t *req, uint32_t cyc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
req	dma_req_t*	req_type - transfer request type: P2P, M2P, P2M
peri_num - peripheral number
req_conf - transfer request config
xfer - transfer information
cyc	uint32_t	M2D cycle number
[표 32] nc_dma_load_store_mem_to_dev() Description
5.3.5.5.1. Control Flow Diagram
 
[그림 29] nc_dma_load_store_mem_to_dev() 제어 흐름도
5.3.5.6. [SWF-DMA-025] nc_dma_load_store_dev_to_mem()
Description	Device to memory data transfer function
Prototype	static uint32_t nc_dma_load_store_dev_to_mem(dma_enc_param_t *enc_param, dma_req_t *req, uint32_t cyc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
req	dma_req_t*	req_type - transfer request type: P2P, M2P, P2M
peri_num - peripheral number
req_conf - transfer request config
xfer - transfer information
cyc	uint32_t	D2M cycle number
[표 33] nc_dma_load_store_dev_to_mem() Description
5.3.5.6.1. Control Flow Diagram
 
[그림 30] nc_dma_load_store_dev_to_mem() 제어 흐름도
5.3.5.7. [SWF-DMA-026] nc_dma_bursts()
Description	DMA burst transaction function
Prototype	static uint32_t nc_dma_bursts(dma_enc_param_t *enc_param, dma_req_t *req, uint32_t cyc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
req	dma_req_t*	req_type - transfer request type: P2P, M2P, P2M
peri_num - peripheral number
req_conf - transfer request config
xfer - transfer information
cyc	uint32_t	M2M cycle number
[표 34] nc_dma_bursts() Description
5.3.5.7.1. Control Flow Diagram
 
[그림 31] nc_dma_bursts() 제어 흐름도
5.3.5.8. [SWF-DMA-027] nc_dma_loop()
Description	DMA loop operation function
Prototype	static uint32_t nc_dma_loop(dma_enc_param_t *enc_param, uint32_t *bursts, dma_req_t *req)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	Offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
bursts	uint32_t*	Burst size
req	dma_req_t*	req_type - transfer request type: P2P, M2P, P2M
peri_num - peripheral number
req_conf - transfer request config
xfer - transfer information
[표 35] nc_dma_loop() Description
5.3.5.8.1. Control Flow Diagram
 
[그림 32] nc_dma_loop() 제어 흐름도
5.3.5.9. [SWF-DMA-028] nc_dma_setup_loops()
Description	DMA loop setting function
Call nc_dma_Loop() repeatedly
Prototype	static uint32_t nc_dma_setup_loops(dma_enc_param_t *enc_param, dma_req_info_t *req_info)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	Offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
req_info	dma_req_info_t*	micro_code_virt_addr - Kernel Virtual Memory address for storing DMA instruction binary code
micro_code_phy_addr - Physical Memory address for storing DMA instruction binary code
micro_code_buf - Pointer pointing microCodeBufAddr
dma_ccr_union ccr - CCR = Channel Control Register
dma_req_structure req - dma request information
[표 36] nc_dma_setup_loops() Description
5.3.5.9.1. Control Flow Diagram
 
[그림 33] nc_dma_setup_loops() 제어 흐름도
5.3.5.10. [SWF-DMA-029] nc_dma_setup_xfer()
Description	DMA transaction setting function.
Write instruction binary for sending data transfer information(srdAddr, dstAddr, reqType, ...) in memory.
Prototype	static uint32_t nc_dma_setup_xfer(dma_enc_param_t *enc_param, dma_req_info_t *reqInfo)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	Offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
reqInfo	dma_req_info_t*	micro_code_virt_addr - Kernel Virtual Memory address for storing DMA instruction binary code
micro_code_phy_addr - Physical Memory address for storing DMA instruction binary code
micro_code_buf - Pointer pointing microCodeBufAddr
dma_ccr_union ccr - CCR = Channel Control Register
dma_req_structure req - dma request information
[표 37] nc_dma_setup_xfer() Description
5.3.5.10.1. Control Flow Diagram
 
[그림 34] nc_dma_setup_xfer() 제어 흐름도
5.3.5.11. [SWF-DMA-030] nc_dma_setup_req()
Description	DMA request setting function
Write instruction binary set in memory
Prototype	static uint32_t nc_dma_setup_req(dma_enc_param_t *enc_param, dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	Offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 38] nc_dma_setup_req() Description
5.3.5.11.1. Control Flow Diagram
 
[그림 35] nc_dma_setup_req() 제어 흐름도
5.3.5.12. [SWF-DMA-031] nc_dma_submit_req()
Description	CCR(Channel Control Register) register and DMA request setup function
Call nc_dma_PrepareCCR() and save return value in tDMA_THREAD. And then Send tDMA_THREAD to nc_dma_SetupReq()
Prototype	static uint32_t nc_dma_submit_req(dma_enc_param_t *enc_param, dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	Offset
Parameter
Variable Name	Type	Spec. Designation
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 39] nc_dma_submit_req() Description
5.3.5.12.1. Control Flow Diagram
 
[그림 36] nc_dma_submit_req() 제어 흐름도
5.3.5.13. [SWF-DMA-032] nc_dma_is_manager()
Description	DMA access type check function
Prototype	static uint32_t nc_dma_is_manager(dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 40] nc_dma_is_manager() Description
5.3.5.13.1. Control Flow Diagram
 
[그림 37] nc_dma_is_manager() 제어 흐름도
5.3.5.14. [SWF-DMA-033] nc_dma_get_state()
Description	The operating states for the DMA manager thread and DMA channel threads check function
Return one channel's status register value
Prototype	static uint32_t nc_dma_get_state(dma330_sfr_t *sfr, dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	DMA state
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA register
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 41] nc_dma_get_state() Description
5.3.5.14.1. Control Flow Diagram
 
[그림 38] nc_dma_get_state() 제어 흐름도
5.3.5.15. [SWF-DMA-034] nc_dma_wait_dbg_idle()
Description	Debug idle state waiting function
Prototype	static Boolean nc_dma_wait_dbg_idle(dma330_sfr_t *sfr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA register
[표 42] nc_dma_wait_dbg_idle() Description
5.3.5.15.1. Control Flow Diagram
 
[그림 39] nc_dma_wait_dbg_idle() 제어 흐름도
5.3.5.16. [SWF-DMA-035] nc_dma_wait_dma_state()
Description	Desired DMA state waiting function
Prototype	static void nc_dma_wait_dma_state(dma330_sfr_t *sfr, dma_thread_t *thrd, uint32_t state)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA register
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
state	uint32_t	DMA state
[표 43] nc_dma_wait_dma_state() Description
5.3.5.16.1. Control Flow Diagram
 
[그림 40] nc_dma_wait_dma_state() 제어 흐름도
5.3.5.17. [SWF-DMA-036] nc_dma_execute_dbg_ins()
Description	Debug instruction executing function
Prototype	static void nc_dma_execute_dbg_ins(dma330_sfr_t *sfr, dma_thread_t *thrd, Boolean as_manager, dma_enc_arg_go_t *arg)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA register.
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
as_manager	Boolean	DBGINST0 settings Enable/Disable.
arg	dma_enc_arg_go_t*	non_secure - Non-secure
ch_num - DMA channel number. 0~7
phy_addr - which provides the value of the program counter for the DMA channel thread.
[표 44] nc_dma_execute_dbg_ins() Description
5.3.5.17.1. Control Flow Diagram
 
[그림 41] nc_dma_execute_dbg_ins() 제어 흐름도
5.3.5.18. [SWF-DMA-037] nc_dma_trigger()
Description	DMA trigger function
Prototype	static Error nc_dma_trigger(dma330_sfr_t *sfr, dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA register.
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 45] nc_dma_trigger() Description
5.3.5.18.1. Control Flow Diagram
 
[그림 42] nc_dma_trigger() 제어 흐름도
5.3.5.19. [SWF-DMA-038] nc_dma_req()
Description	DMA request type setting function
Split tDMA_INFO data to other structures and then *Call DMA_SubmitReq()*
Prototype	static uint32_t nc_dma_req(dma_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
uint32_t	Offset
Parameter
Variable Name	Type	Spec. Designation
param	dma_param_t*	ch - channel number
event_number - event number
int_en - enable flag of interrupt
src_burst_len - source burst length
src_burst_size - source burst size
dst_burst_len - destination burst length
dst_burst_size - destination burst size
req_type - request type
peri_num - peripheral id
swap_flag - swap flag
src_phy_addr - source buffer physical address
dst_phy_addr - destination buffer physical address
xfer_bytes - transfer length
enc_param - dma encode parameter
thrd - dma thread parameter
instruction_buf_phy_addr - physical address of dma interuction buffer
[표 46] nc_dma_req() Description
5.3.5.19.1. Control Flow Diagram
 
[그림 43] nc_dma_req() 제어 흐름도
5.3.5.20. [SWF-DMA-039] nc_dma_clear_reg()
Description	Clear DMA Register
Prototype	void nc_dma_clear_reg(dma330_sfr_t *sfr, uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA Register
ch	uint32_t	DMA Channel
[표 47] nc_dma_clear_reg() Description
5.3.5.20.1. Control Flow Diagram
 
[그림 44] nc_dma_clear_reg() 제어 흐름도
5.3.5.21. [SWF-DMA-040] nc_dma_start_thread()
Description	DMA Start function
Prototype	Error nc_dma_start_thread(dma330_sfr_t *sfr, dma_enc_param_t *enc_param, dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA Register
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 48] nc_dma_start_thread() Description
5.3.5.21.1. Control Flow Diagram
 
[그림 45] nc_dma_start_thread() 제어 흐름도
5.3.5.22. [SWF-DMA-041] nc_dma_stop_thread()
Description	DMA Stop function
Prototype	void nc_dma_stop_thread(dma330_sfr_t *sfr, dma_enc_param_t *enc_param, dma_thread_t *thrd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA Register
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
[표 49] nc_dma_stop_thread() Description
5.3.5.22.1. Control Flow Diagram
 
[그림 46] nc_dma_stop_thread() 제어 흐름도
5.3.5.23. [SWF-DMA-042] nc_dma_ctrl_thread()
Description	DMA operation start or abort control function
Prototype	Error nc_dma_ctrl_thread(dma330_sfr_t *sfr, dma_enc_param_t *enc_param, dma_thread_t *thrd, uint32_t operation, uint32_t dma_ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
sfr	dma330_sfr_t*	DMA register.
enc_param	dma_enc_param_t*	buf - Data Buffer
pos - Buffer Position
thrd	dma_thread_t*	id - DMA channel number
event - DAM interrupt number
int_en - enable flag of interrupt
req_info - dma request information
operation	uint32_t	DMA operation state.
dma_ch	uint32_t	DMA Channel.
[표 50] nc_dma_ctrl_thread() Description
5.3.5.23.1. Control Flow Diagram
 
[그림 47] nc_dma_ctrl_thread() 제어 흐름도
5.3.5.24. [SWF-DMA-043] nc_dma_write_inst_code()
Description	Write DMA instruction code.
Prototype	Error nc_dma_write_inst_code(dma_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
param	dma_param_t*	ch - channel number
event_number - event number
int_en - enable flag of interrupt
src_burst_len - source burst length
src_burst_size - source burst size
dst_burst_len - destination burst length
dst_burst_size - destination burst size
req_type - request type
peri_num - peripheral id
swap_flag - swap flag
src_phy_addr - source buffer physical address
dst_phy_addr - destination buffer physical address
xfer_bytes - transfer length
enc_param - dma encode parameter
thrd - dma thread parameter
instruction_buf_phy_addr - physical address of dma interuction buffer
[표 51] nc_dma_write_inst_code() Description
5.3.5.24.1. Control Flow Diagram
 
[그림 48] nc_dma_write_inst_code() 제어 흐름도
5.4. [SWU-DMA-004] dma_driver
dma_driver 유닛은 User가 DMA의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 DMA 초기화, Set Parameter, DMA Start, Get DMA Status, Get DMA IRQ, DMA Reset이다.
5.4.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 52] 전역 변수
5.4.2. Defined Parameters
Name	Description	Value
NUM_OF_DMA_BUS	DMA Bus Number	8
SIZE_OF_DMA_DEVICE_NAME	DMA Device Name Size	13
SIZE_OF_DMA_IRQ_NAME	DMA IRQ Name Size	22
DEFAULT_DMA_IRQ_PRIORITY	IRQ Priority	125
DEFAULT_TASK_PRIORITY	Task Priority	125
DMA_SYSCALL_RD_CMD_GET_STATUS	SysCall Read Command	1
DMA_SYSCALL_WR_CMD_PREPARE_TRANSMISSION	SysCall Write Command	1
DMA_SYSCALL_WR_CMD_START_TRANSMISSION	SysCall Write Command	2
DMA_SYSCALL_WR_CMD_RESET	SysCall Write Command	3
MAX_OF_NAME_BUFFER	Name Buffer Number	32
DMA0_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_0"
DMA1_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_1"
DMA2_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_2"
DMA3_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_3"
DMA4_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_4"
DMA5_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_5"
DMA6_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_6"
DMA7_INSTRUCTION_BUFFER_NAME	Instruction Buffer Name	"nc_inst_buf_7"
SIZE_OF_DMA_INSTRUCTION_BUFFER	Instruction Buffer Size	13
NC_DMA_IOCTL_PREPARE_TRANSMISSION	DMA Ioctl Number	0
NC_DMA_IOCTL_START_TRANSMISSION	DMA Ioctl Number	1
NC_DMA_IOCTL_RESET	DMA Ioctl Number	2
NC_DMA_IOCTL_GET_STATUS	DMA Ioctl Number	3
NC_DMA_IOCTL_GET_IRQ_RECEIVER	DMA Ioctl Number	4
NC_MAX_OF_DMA_IOCTL	DMA Ioctl Number	5
[표 53] Defined Parameters
5.4.3. Constraint
N/A
5.4.4. Unit Interface 
5.4.4.1. [SUI-DMA-001] nc_dma_probe()
Description	This function is called when the driver module starts up.
It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_dma_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 54] nc_dma_probe() Description
5.4.4.1.1. Control Flow Diagram
 
[그림 49] nc_dma_probe() 제어 흐름도
5.4.4.2. [SUI-DMA-002] nc_dma_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_dma_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 55] nc_dma_ioctl() Description
5.4.4.2.1. Control Flow Diagram
 
[그림 50] nc_dma_ioctl() 제어 흐름도
5.4.4.3. [SUI-DMA-003] nc_dma_prepare_transmission()
Description	DMA prepare transmission.
Prototype	static Error nc_dma_prepare_transmission(nc_dma_driver_t *instance, nc_dma_user_param_t *user_param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_dma_driver_t*	inst_buf_name - Name of instruction cma buffer registered in Resource Manager
iod - IODevice Handle
irq_iod - IRQ-IODevice Handle
channel - channel number
user_param	nc_dma_user_param_t*	src_burst_len - source burst length
src_burst_size - source burst size
dst_burst_len - destination burst length
dst_burst_size - destination burst size
req_type - request type
peri_num - peripheral id
swap_flag - swap flag
src_buf_name - Name of source cma buffer registered in Resource Manager
dst_buf_name - Name of destination cma buffer registered in Resource Manager
xfer_bytes - transfer length
[표 56] nc_dma_prepare_transmission() Description
5.4.4.3.1. Control Flow Diagram
 
[그림 51] nc_dma_prepare_transmission() 제어 흐름도
5.4.5. Unit Function
5.4.5.1. [SWF-DMA-044] nc_dma_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static nc_dma_driver_t *nc_dma_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-DMA-001
Return
Type	Spec. Designation
nc_dma_driver_t*	DMA Instance handle
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel-number
[표 57] nc_dma_get_instance() Description
5.4.5.1.1. Control Flow Diagram
 
[그림 52] nc_dma_get_instance() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-FM-001] FM_sm
Fault Monitoring을 위한 설정과 Monitoring Task가 정의되어 있다.
그리고 Fault Monitoring 중 Error가 발생하면 SE에 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
fault_offset_mask	Fault Mask Buffer	4Byte	0	Safety engine fault offset
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
NC_ISP_SM_IOCTL_GET_CONFIG_DONE	ISP config done check value	4U
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-FM-001] ip_fault_monitor_task()
Description	Run fault monitor task.
Prototype	Value ip_fault_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-FM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 5] ip_fault_monitor_task() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] ip_fault_monitor_task() 제어 흐름도
5.1.4.2. [SUI-FM-002] ip_fault_receive_from_user_task()
Description	Receives a failure from the user task.
Prototype	Value ip_fault_receive_from_user_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-FM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 6] ip_fault_receive_from_user_task() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 7] ip_fault_receive_from_user_task() 제어 흐름도
5.1.5. Unit Function 
5.1.5.1. [SWF-FM-001] nc_set_fault_monitoring_offset()
Description	Set FM offset.
Prototype	static void nc_set_fault_monitoring_offset(nc_fault_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-FM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_fault_monitor_sm_t*	common_config - Safety Engine config handle
fm_config - FM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
target_ip - FM component list
enable_check - Check FM polling chekc is enable
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 7] nc_set_fault_monitoring_offset() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 8] nc_set_fault_monitoring_offset() 제어 흐름도
5.1.5.2. [SWF-FM-002] nc_get_ip_fault_mask_value()
Description	Get fault mask value.
Prototype	static void nc_get_ip_fault_mask_value(nc_fault_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-FM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_fault_monitor_sm_t*	common_config - Safety Engine config handle
fm_config - FM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
target_ip - FM component list
enable_check - Check FM polling chekc is enable
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 8] nc_get_ip_fault_mask_value() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 9] nc_get_ip_fault_mask_value() 제어 흐름도
5.1.5.3. [SWF-FM-003] nc_start_ip_fault_monitoring()
Description	Start FM.
Prototype	static void nc_start_ip_fault_monitoring(nc_fault_monitor_sm_t *instance, nc_safety_engine_offset_t *offset_instance, nc_safety_engine_mask_t *mask_value)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-FM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_fault_monitor_sm_t*	common_config - Safety Engine config handle
fm_config - FM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
target_ip - FM component list
enable_check - Check FM polling chekc is enable
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_stat_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
mask_value	nc_safety_engine_mask_t*	fault_mask_value - mask value
ecc_enable_mask_value - mask value
[표 9] nc_start_ip_fault_monitoring() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 10] nc_start_ip_fault_monitoring() 제어 흐름도
5.1.5.4. [SWF-FM-004] nc_monitor_ip_fault()
Description	IP fault monitoring.
Prototype	static Error nc_monitor_ip_fault(nc_fault_monitor_sm_t *fault_param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-FM-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
fault_param	nc_fault_monitor_sm_t*	common_config - Safety Engine config handle
fm_config - FM initial config
iod - Device IODevice Vector Handle
ioaddr - Device virtual base address
target_ip - FM component list
enable_check - Check FM polling chekc is enable
[표 10] nc_monitor_ip_fault() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 11] nc_monitor_ip_fault() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-GRAPHICS-001] nc_graphics_parallel
nc_graphics_parallel 유닛은 Graphic Engine Instance를 생성하고, 병렬 처리 알고리즘을 사용하여 Resize Image와 Overlay Mix를 수행한다.
그리고 Image의 Interpolation Parameter와 Resize Lookup Table를 반환한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
PARALLEl_IMG_FMT_RGB24	Image Format RGB24	0
PARALLEl_IMG_FMT_ARGB32	Image Format ARGB32	1
PARALLEl_IMG_FMT_YUV444	Image Format YUV444	2
PARALLEl_IMG_FMT_YUYV422	Image Format YUV422	3
MAX_OF_PARALLEl_IMG_FMT	Image Format Max Value	4
PARALLEl_INTERPOLATION_NEAREST_NEIGHBOR	Lockup Table Number	0
PARALLEl_INTERPOLATION_BILINEAR	Lockup Table Number	1
MAX_OF_PARALLEl_INTERPOLATION	Lockup Table Number	2
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-GRAPHICS-001] nc_graphics_parallel_constructor()
Description	Creates and returns an instance of the nextchip graphic engine for parallel processing.
Prototype	nc_graphics_parallel_t *nc_graphics_parallel_constructor(const char *name, ssize_t num_parallel)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
nc_graphics_parallel_t*	Parallel Instance
Parameter
Variable Name	Type	Spec. Designation
name	const char*	instance name
num_parallel	ssize_t	Number of Thread Pool
[표 5] nc_graphics_parallel_constructor() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] nc_graphics_parallel_constructor() 제어 흐름도
5.1.4.2. [SUI-GRAPHICS-002] nc_graphics_parallel_deconstructor()
Description	Destroy instance of the nextchip graphic engine for parallel processing.
Prototype	void nc_graphics_parallel_deconstructor(nc_graphics_parallel_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_graphics_parallel_t*	thread_pool - thread-pool instance handle
lock - lock object of critical section
lookup_table_lists - lookup-table lists of resize-interpolation
[표 6] nc_graphics_parallel_deconstructor() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 7] nc_graphics_parallel_deconstructor() 제어 흐름도
5.1.4.3. [SUI-GRAPHICS-003] nc_graphics_parallel_resize_image()
Description	Resize the image using a parallel processing algorithm.
Prototype	Error nc_graphics_parallel_resize_image(nc_graphics_parallel_t *instance, nc_graphics_parallel_img_fmt_t img_fmt, nc_graphics_parallel_interpolation_t method, uint8_t *src, int32_t src_width, int32_t src_height, uint8_t *dst, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL or IllegalLength or IllegalObjectNumber
Parameter
Variable Name	Type	Spec. Designation
instance	nc_graphics_parallel_t*	thread_pool - thread-pool instance handle
lock - lock object of critical section
lookup_table_lists - lookup-table lists of resize-interpolation
img_fmt	nc_graphics_parallel_img_fmt_t	image format
method	nc_graphics_parallel_interpolation_t	method of interpolation
src	uint8_t*	source buffer address
src_width	int32_t	width of source image
src_height	int32_t	height of source image
dst	uint8_t*	destination buffer address
dst_width	int32_t	width of destination image
dst_height	int32_t	height of destination image
[표 7] nc_graphics_parallel_resize_image() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 8] nc_graphics_parallel_resize_image() 제어 흐름도
5.1.4.4. [SUI-GRAPHICS-004] nc_graphics_parallel_overlay_mix_image()
Description	Overlay-mix the images using a parallel processing algorithm.
Prototype	Error nc_graphics_parallel_overlay_mix_image(nc_graphics_parallel_t *instance, nc_graphics_parallel_mix_fmt_t mix_fmt, uint8_t *src_rgb, uint8_t *dst_yuv, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL or IllegalLength or IllegalObjectNumber
Parameter
Variable Name	Type	Spec. Designation
processing	nc_graphics_parallel_t*	thread_pool - thread-pool instance handle
lock - lock object of critical section
lookup_table_lists - lookup-table lists of resize-interpolation
Instance	nc_graphics_parallel_mix_fmt_t	overlay-mix format
mix_fmt	uint8_t*	source buffer address
src_rgb	uint8_t*	destination buffer address
dst_yuv	int32_t	image-width
width	int32_t	image-height
[표 8] nc_graphics_parallel_overlay_mix_image() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 9] nc_graphics_parallel_overlay_mix_image() 제어 흐름도
5.1.5. Unit Function 
5.1.5.1. [SWF-GRAPHICS-001] nc_graphics_parallel_serialize_interpolation_information()
Description	Returns the image's interpolation parameter information serialized into a single key value.
Prototype	static uint64_t nc_graphics_parallel_serialize_interpolation_information(nc_graphics_parallel_interpolation_t method, int32_t src_width, int32_t src_height, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
uint64_t	Key value
Parameter
Variable Name	Type	Spec. Designation
method	nc_graphics_parallel_interpolation_t	method of interpolation
src_width	int32_t	width of source image
src_height	int32_t	height of source image
dst_width	int32_t	width of destination image
dst_height	int32_t	height of destination image
[표 9] nc_graphics_parallel_serialize_interpolation_information() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 10] nc_graphics_parallel_serialize_interpolation_information() 제어 흐름도
5.1.5.2. [SWF-GRAPHICS-002] nc_graphics_parallel_get_resize_lookup_table()
Description	Looks up the resize lookup table for the input parameter and returns if the table exists, otherwise creates, registers, and returns.
Prototype	static uintptr_t nc_graphics_parallel_get_resize_lookup_table(nc_graphics_parallel_t *instance, nc_graphics_parallel_interpolation_t method, int32_t src_width, int32_t src_height, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
uintptr_t	lookup-table
Parameter
Variable Name	Type	Spec. Designation
Instance	nc_graphics_parallel_t*	thread_pool - thread-pool instance handle
lock - lock object of critical section
lookup_table_lists - lookup-table lists of resize-interpolation
method	nc_graphics_parallel_interpolation_t	method of interpolation
src_width	int32_t	width of source image
src_height	int32_t	height of source image
dst_width	int32_t	width of destination image
dst_height	int32_t	height of destination image
[표 10] nc_graphics_parallel_get_resize_lookup_table() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 11] nc_graphics_parallel_get_resize_lookup_table() 제어 흐름도
5.2. [SWU-GRAPHICS-002] nc_graphics_thread_pool
nc_graphics_thread_pool 유닛은 Thread Pool Instance를 생성, Register Job, Create/Destroy Thread Pool을 수행한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 11] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
TASK_NAME_LEN	Task Name Length	(32U)
MAX_OF_THREAD_POOL	Max Thread Pool Count	(16)
DEFUALT_TASK_PRIORITY	Default Task Priority Value	(125U)
DEFUALT_TASK_STACK_SIZE	Default Task Stack Size	(0x4000U)
[표 12] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
N/A
5.2.5. Unit Function 
5.2.5.1. [SWF-GRAPHICS-003] nc_graphics_thread_pool_assign_job()
Description	Returns job handles and progress that can be performed in the job-list table.
Prototype	static nc_graphics_thread_pool_job_t *nc_graphics_thread_pool_assign_job(nc_graphics_thread_pool_t *instance, ssize_t *pstage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
nc_graphics_thread_pool_job_t*	instance - thread-pool instance handle
handler - job-handler
cookie - job-parameter
requested_job_count - requested job count
remain_job_count - remain job count
performed_job_count - performed job count
is_done - flag of job-done
lock - lock object of critical section
cv - signal object
elem - current position of job lists
Parameter
Variable Name	Type	Spec. Designation
instance	nc_graphics_thread_pool_t*	task_id - thread handle lists
task_name - thread name lists
lock - lock object of critical section
cv - signal object
is_runnable - operation flag of thread-pool
num_tasks - num of thread-pool
jobs - job lists
pstage	ssize_t*	current-stage of job
[표 13] nc_graphics_thread_pool_assign_job() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 12] nc_graphics_thread_pool_assign_job() 제어 흐름도
5.2.5.2. [SWF-GRAPHICS-004] nc_graphics_thread_pool_task()
Description	Returns job handles and progress that can be performed in the job-list table.
Prototype	static nc_thread_return_t nc_graphics_thread_pool_task(nc_thread_param_t param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
nc_thread_return_t	0
Parameter
Variable Name	Type	Spec. Designation
param	nc_thread_param_t	thread-parameter pointer
[표 14] nc_graphics_thread_pool_task () Description
5.2.5.2.1. Control Flow Diagram
 
[그림 13] nc_graphics_thread_pool_task() 제어 흐름도
5.2.5.3. [SWF-GRAPHICS-005] nc_graphics_thread_pool_constructor()
Description	Creates and returns an instance of the thread-pool.
Prototype	nc_graphics_thread_pool_t *nc_graphics_thread_pool_constructor(const char *pool_name, ssize_t num_tasks)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
nc_graphics_thread_pool_t*	task_id - thread handle lists
task_name - thread name lists
lock - lock object of critical section
cv - signal object
is_runnable - operation flag of thread-pool
num_tasks - num of thread-pool
jobs - job lists
Parameter
Variable Name	Type	Spec. Designation
pool_name	const char*	instance name
num_tasks	ssize_t	Number of Thread Pool
[표 15] nc_graphics_thread_pool_constructor() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 14] nc_graphics_thread_pool_constructor() 제어 흐름도
5.2.5.4. [SWF-GRAPHICS-006] nc_graphics_thread_pool_register_job()
Description	Assign a new job to the thread pool.
Prototype	nc_graphics_thread_pool_job_t *nc_graphics_thread_pool_register_job(nc_graphics_thread_pool_t *instance, nc_graphics_thread_pool_handler handler, uintptr_t cookie, ssize_t loopcnt)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
nc_graphics_thread_pool_job_t*	instance - thread-pool instance handle
handler - job-handler
cookie - job-parameter
requested_job_count - requested job count
remain_job_count - remain job count
performed_job_count - performed job count
is_done - flag of job-done
lock - lock object of critical section
cv - signal object
elem - current position of job lists
Parameter
Variable Name	Type	Spec. Designation
instance	nc_graphics_thread_pool_t*	task_id - thread handle lists
task_name - thread name lists
lock - lock object of critical section
cv - signal object
is_runnable - operation flag of thread-pool
num_tasks - num of thread-pool
jobs - job lists
handler	nc_graphics_thread_pool_handler	job-handler
cookie	uintptr_t	job-parameter
loopcnt	ssize_t	job-count
[표 16] nc_graphics_thread_pool_register_job() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 15] nc_graphics_thread_pool_register_job() 제어 흐름도
5.2.5.5. [SWF-GRAPHICS-007] nc_graphics_thread_pool_wait_for_done()
Description	Wait for the completion of the job assigned to the thread pool.
Prototype	Error nc_graphics_thread_pool_wait_for_done(nc_graphics_thread_pool_job_t *job)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
Error	Success or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
job	nc_graphics_thread_pool_job_t*	instance - thread-pool instance handle
handler - job-handler
cookie - job-parameter
requested_job_count - requested job count
remain_job_count - remain job count
performed_job_count - performed job count
is_done - flag of job-done
lock - lock object of critical section
cv - signal object
elem - current position of job lists
[표 17] nc_graphics_thread_pool_wait_for_done() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 16] nc_graphics_thread_pool_wait_for_done() 제어 흐름도
5.2.5.6. [SWF-GRAPHICS-008] nc_graphics_thread_pool_deconstructor()
Description	Destroys the thread-pool.
Prototype	void nc_graphics_thread_pool_deconstructor(nc_graphics_thread_pool_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002, SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_graphics_thread_pool_t*	task_id - thread handle lists
task_name - thread name lists
lock - lock object of critical section
cv - signal object
is_runnable - operation flag of thread-pool
num_tasks - num of thread-pool
jobs - job lists
[표 18] nc_graphics_thread_pool_deconstructor() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 17] nc_graphics_thread_pool_deconstructor() 제어 흐름도
5.3. [SWU-GRAPHICS-003] nc_graphics
nc_graphics 유닛은 Image의 Format Convert, Overlay Mix, Resize, Rotate 기능이 정의되어 있다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 19] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
RGBTILESIZE	RGB Tile size	(64)
AS_DEF__CY	BT 601 CY	(1220542)
AS_DEF__CUB	BT 601 CUB	(2116026)
AS_DEF__CUG	BT 601CUG	(-409993)
AS_DEF__CVG	BT 601 CVG	(-852492)
AS_DEF__CVR	BT 601 CVR	(1673527)
AS_DEF__BASE	BT 601 BASE	(524288)
AS_DEF__SHIFT	BT 601 SHIFT	(20)
AS_DEF_RSVD1	RSVD1 Value	(0)
PIX_G1	Pixel Green	(1)
PIX_B1	Pixel Blue	(2)
PIX_R2	Pixel Red	(3)
PIX_G2	Pixel Green	(4)
PIX_B2	Pixel Blue	(5)
PIX_U	Pixel U	(1)
PIX_Y2	Pixel Y	(2)
PIX_V	Pixel V	(3)
[표 20] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface 
5.3.4.1. [SUI-GRAPHICS-005] nc_Mix_Argb2Yuyv()
Description	This function mix argb src and yuv422 dst image.
src and dst have same width and height pixel.
src is mixed with dst as yuv422, and the result is stored in dst.
Prototype	int32_t nc_Mix_Argb2Yuyv(uint8_t *src, uint8_t *dst, int32_t w, int32_t h)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	argb image data.
dst	uint8_t*	yuv422 image data
w	int32_t	image pixel width
h	int32_t	image pixel height
[표 21] nc_Mix_Argb2Yuyv() Description
5.3.4.1.1. Control Flow Diagram
 
[그림 18] nc_Mix_Argb2Yuyv() 제어 흐름도
5.3.4.2. [SUI-GRAPHICS-006] nc_Mix_Abgr2Yuyv()
Description	This function mix abgr src and yuv422 dst image.
src and dst have same width and height pixel.
src is mixed with dst as yuv422, and the result is stored in dst.
Prototype	int32_t nc_Mix_Abgr2Yuyv(uint8_t *src, uint8_t *dst, int32_t w, int32_t h)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	abgr image data.
dst	uint8_t*	yuv422 image data
w	int32_t	image pixel width
h	int32_t	image pixel height
[표 22] nc_Mix_Abgr2Yuyv() Description
5.3.4.2.1. Control Flow Diagram
 
[그림 19] nc_Mix_Abgr2Yuyv() 제어 흐름도
5.3.4.3. [SUI-GRAPHICS-007] nc_Mix_Rgba2Yuyv()
Description	This function mix rgba src and yuv422 dst image.
src and dst have same width and height pixel.
src is mixed with dst as yuv422, and the result is stored in dst.
Prototype	int32_t nc_Mix_Rgba2Yuyv(uint8_t *src, uint8_t *dst, int32_t w, int32_t h)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	rgba image data.
dst	uint8_t*	yuv422 image data
w	int32_t	image pixel width
h	int32_t	image pixel height
[표 23] nc_Mix_Rgba2Yuyv() Description
5.3.4.3.1. Control Flow Diagram
 
[그림 20] nc_Mix_Rgba2Yuyv() 제어 흐름도
5.3.4.4. [SUI-GRAPHICS-008] nc_Mix_Bgra2Yuyv()
Description	This function mix bgra src and yuv422 dst image.
src and dst have same width and height pixel.
src is mixed with dst as yuv422, and the result is stored in dst.
Prototype	int32_t nc_Mix_Bgra2Yuyv(uint8_t *src, uint8_t *dst, int32_t w, int32_t h)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	bgra image data.
dst	uint8_t*	yuv422 image data
w	int32_t	image pixel width
h	int32_t	image pixel height
[표 24] nc_Mix_Bgra2Yuyv() Description
5.3.4.4.1. Control Flow Diagram
 
[그림 21] nc_Mix_Bgra2Yuyv() 제어 흐름도
5.3.4.5. [SUI-GRAPHICS-009] nc_MixPaste_Argb2Yuyv()
Description	This function mix argb src and yuv422 dst image.
dst is bigger than src, so mixed result area in which is in dst is configure by dst offset and src size.
mixed size is configured by src width and height, and mix dst starting coordinate is configured by offset.
src is mixed with dst as yuv422, this means that the result image data format is yuv422.
Prototype	int32_t nc_MixPaste_Argb2Yuyv(uint8_t *rgb32_src_ptr, int32_t src_width, int32_t src_height, int32_t dst_offset_x, int32_t dst_offset_y, uint8_t *yuv422_dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
rgb32_src_ptr	uint8_t*	argb image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
dst_offset_x	int32_t	dst image pixel x offset
dst_offset_y	int32_t	dst image pixel y offset
yuv422_dst_ptr	uint8_t*	yuv422 image data
dst_width	int32_t	dst image pixel width
dst_height	int32_t	dst image pixel height
[표 25] nc_MixPaste_Argb2Yuyv() Description
5.3.4.5.1. Control Flow Diagram
 
[그림 22] nc_MixPaste_Argb2Yuyv() 제어 흐름도
5.3.4.6. [SUI-GRAPHICS-010] nc_MixPaste_Abgr2Yuyv()
Description	This function mix abgr src and yuv422 dst image.
dst is bigger than src, so mixed result area in which is in dst is configure by dst offset and src size.
mixed size is configured by src width and height, and mix dst starting coordinate is configured by offset.
src is mixed with dst as yuv422, this means that the result image data format is yuv422.
Prototype	int32_t nc_MixPaste_Abgr2Yuyv(uint8_t *rgb32_src_ptr, int32_t src_width, int32_t src_height, int32_t dst_offset_x, int32_t dst_offset_y, uint8_t *yuv422_dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
rgb32_src_ptr	uint8_t*	abgr image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
dst_offset_x	int32_t	dst image pixel x offset
dst_offset_y	int32_t	dst image pixel y offset
yuv422_dst_ptr	uint8_t*	yuv422 image data
dst_width	int32_t	dst image pixel width
dst_height	int32_t	dst image pixel height
[표 26] nc_MixPaste_Abgr2Yuyv() Description
5.3.4.6.1. Control Flow Diagram
 
[그림 23] nc_MixPaste_Abgr2Yuyv() 제어 흐름도
5.3.4.7. [SUI-GRAPHICS-011] nc_MixPaste_Rgba2Yuyv()
Description	This function mix rgba src and yuv422 dst image.
dst is bigger than src, so mixed result area in which is in dst is configure by dst offset and src size.
mixed size is configured by src width and height, and mix dst starting coordinate is configured by offset.
src is mixed with dst as yuv422, this means that the result image data format is yuv422.
Prototype	int32_t nc_MixPaste_Rgba2Yuyv(uint8_t *rgb32_src_ptr, int32_t src_width, int32_t src_height, int32_t dst_offset_x, int32_t dst_offset_y, uint8_t *yuv422_dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
rgb32_src_ptr	uint8_t*	rgba image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
dst_offset_x	int32_t	dst image pixel x offset
dst_offset_y	int32_t	dst image pixel y offset
yuv422_dst_ptr	uint8_t*	yuv422 image data
dst_width	int32_t	dst image pixel width
dst_height	int32_t	dst image pixel height
[표 27] nc_MixPaste_Rgba2Yuyv() Description
5.3.4.7.1. Control Flow Diagram
 
[그림 24] nc_MixPaste_Rgba2Yuyv() 제어 흐름도
5.3.4.8. [SUI-GRAPHICS-012] nc_MixPaste_Bgra2Yuyv()
Description	This function mix bgra src and yuv422 dst image.
dst is bigger than src, so mixed result area in which is in dst is configure by dst offset and src size.
mixed size is configured by src width and height, and mix dst starting coordinate is configured by offset.
src is mixed with dst as yuv422, this means that the result image data format is yuv422.
Prototype	int32_t nc_MixPaste_Bgra2Yuyv(uint8_t *rgb32_src_ptr, int32_t src_width, int32_t src_height, int32_t dst_offset_x, int32_t dst_offset_y, uint8_t *yuv422_dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
rgb32_src_ptr	uint8_t*	bgra image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
dst_offset_x	int32_t	dst image pixel x offset
dst_offset_y	int32_t	dst image pixel y offset
yuv422_dst_ptr	uint8_t*	yuv422 image data
dst_width	int32_t	dst image pixel width
dst_height	int32_t	dst image pixel height
[표 28] nc_MixPaste_Bgra2Yuyv() Description
5.3.4.8.1. Control Flow Diagram
 
[그림 25] nc_MixPaste_Bgra2Yuyv() 제어 흐름도
5.3.4.9. [SUI-GRAPHICS-013] nc_Img_resize_bilinear_yuvPlanar()
Description	This function performs a resize on a yuv-planar image.
Prototype	int32_t nc_Img_resize_bilinear_yuvPlanar(uint8_t *src, uint32_t src_stride, uint32_t src_width, uint32_t src_height, uint8_t *dst, uint32_t dst_stride, uint32_t dst_width, uint32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	yuv422 src image data.
dst	uint8_t*	yuv422 dst image data.
src_stride	uint32_t	src image pixel stride
src_width	uint32_t	src image pixel width
src_height	uint32_t	src image pixel height
dst_stride	uint32_t	dst image pixel stride
dst_width 	uint32_t	dst image pixel width
dst_height	uint32_t	dst image pixel height
[표 29] nc_Img_resize_bilinear_yuvPlanar() Description
5.3.4.9.1. Control Flow Diagram
 
[그림 26] nc_Img_resize_bilinear_yuvPlanar() 제어 흐름도
5.3.4.10. [SUI-GRAPHICS-014] nc_Resize_Yuv422_hafwid_verti_scaledn()
Description	This function resizes height and makes width as half, and stores the result in the dst memory.
Prototype	int32_t nc_Resize_Yuv422_hafwid_verti_scaledn(uint8_t *yuv_src, uint8_t *yuv_dst, int32_t src_width, int32_t src_height, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_src	uint8_t*	yuv422 src image data.
yuv_dst	uint8_t*	yuv422 dst image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
dst_height	int32_t	dst image pixel height
[표 30] nc_Resize_Yuv422_hafwid_verti_scaledn() Description
5.3.4.10.1. Control Flow Diagram
 
[그림 27] nc_Resize_Yuv422_hafwid_verti_scaledn() 제어 흐름도c
5.3.4.11. [SUI-GRAPHICS-015] nc_Resize_Yuv422_vertical_scaledn()
Description	This function only resizes height, and stores the result in the dst memory.
Prototype	int32_t nc_Resize_Yuv422_vertical_scaledn(uint8_t *yuv_src, uint8_t *yuv_dst, int32_t src_width, int32_t src_height, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_src	uint8_t*	yuv422 src image data.
yuv_dst	uint8_t*	yuv422 dst image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
dst_height	int32_t	dst image pixel height
[표 31] nc_Resize_Yuv422_vertical_scaledn() Description
5.3.4.11.1. Control Flow Diagram
 
[그림 28] nc_Resize_Yuv422_vertical_scaledn() 제어 흐름도
5.3.4.12. [SUI-GRAPHICS-016] nc_Resize_Yuv422_halfwidth()
Description	This function only resizes src width as half, and stores the result in the dst memory.
Prototype	int32_t nc_Resize_Yuv422_halfwidth(uint8_t *yuv_src, uint8_t *yuv_dst, int32_t src_width, int32_t src_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_src	uint8_t*	yuv422 src image data.
yuv_dst	uint8_t*	yuv422 dst image data.
src_width	int32_t	src image pixel width
src_height	int32_t	src image pixel height
[표 32] nc_Resize_Yuv422_halfwidth() Description
5.3.4.12.1. Control Flow Diagram
 
[그림 29] nc_Resize_Yuv422_halfwidth() 제어 흐름도
5.3.4.13. [SUI-GRAPHICS-017] nc_Img_Yuv_packed_to_planar()
Description	This function reform the yuv packed image to yuv planar image.
Prototype	int32_t nc_Img_Yuv_packed_to_planar(uint8_t *yuv_Packed, uint8_t *yuv_Plannar, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_Packed	uint8_t*	Packed pointer
yuv_Plannar	uint8_t*	Planar pointer
width	int32_t	image pixel width
height	int32_t	image pixel height
[표 33] nc_Img_Yuv_packed_to_planar() Description
5.3.4.13.1. Control Flow Diagram
 
[그림 30] nc_Img_Yuv_packed_to_planar() 제어 흐름도
5.3.4.14. [SUI-GRAPHICS-018] nc_Img_Yuv_planar_to_packed()
Description	This function reform the yuv planar image to yuv packed image.
Prototype	int32_t nc_Img_Yuv_planar_to_packed(uint8_t *yuv_Plannar, uint8_t *yuv_Packed, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_Plannar	uint8_t*	Planar pointer
yuv_Packed	uint8_t*	Packed pointer 
width	int32_t	image pixel width
height	int32_t	image pixel height
[표 34] nc_Img_Yuv_planar_to_packed() Description
5.3.4.14.1. Control Flow Diagram
 
[그림 31] nc_Img_Yuv_planar_to_packed() 제어 흐름도
5.3.4.15. [SUI-GRAPHICS-019] nc_Img_Yuv_nv12_to_yuv422()
Description	Convert from nv12 to yuv422.
Prototype	int32_t nc_Img_Yuv_nv12_to_yuv422(uint8_t *nv_ptr, uint8_t *yuv_ptr, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
nv_ptr	uint8_t*	nv12 image data.
yuv_ptr	uint8_t*	yuv422 image data.
width	int32_t	image pixel width
height	int32_t	image pixel height
[표 35] nc_Img_Yuv_nv12_to_yuv422() Description
5.3.4.15.1. Control Flow Diagram
 
[그림 32] nc_Img_Yuv_nv12_to_yuv422() 제어 흐름도
5.3.4.16. [SUI-GRAPHICS-020] nc_Img_Rgb24_packed_to_tiled_planar()
Description	Converts rgb24 packed image to 8x8 tiled planar format.
8x8 tiled planar divides each rgb plane,
For each plane, the 8x8 2d array of the source is rearranged into 1d.
Place each 8x8 2d array as a unit, making a set of 8x8 sizes in a row.
Prototype	int32_t nc_Img_Rgb24_packed_to_tiled_planar(uint8_t *rgb_Packed, uint8_t *rgb_Tiled, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
rgb_Packed	uint8_t*	rgb24 packed image data.
rgb_Tiled	uint8_t*	rgb24 tiled image data.
width	int32_t	image pixel width
height	int32_t	image pixel height
[표 36] nc_Img_Rgb24_packed_to_tiled_planar() Description
5.3.4.16.1. Control Flow Diagram
 
[그림 33] nc_Img_Rgb24_packed_to_tiled_planar() 제어 흐름도
5.3.4.17. [SUI-GRAPHICS-021] nc_Cvt_Yuv422_to_Rgb()
Description	Convert yuv422 to rgb24 by neon.
Prototype	int32_t nc_Cvt_Yuv422_to_Rgb(uint8_t *yuv_Packed, uint8_t *rgb_Packed, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_Packed	uint8_t*	yuv422 image data.
rgb_Packed	uint8_t*	rgbst image data.
width	int32_t	image pixel width
height	int32_t	image pixel height
[표 37] nc_Cvt_Yuv422_to_Rgb() Description
5.3.4.17.1. Control Flow Diagram
 
[그림 34] nc_Cvt_Yuv422_to_Rgb() 제어 흐름도
5.3.4.18. [SUI-GRAPHICS-022] nc_Cvt_Yuv422_to_Rgb__c()
Description	Convert yuv422 to rgb24 by std c.
Prototype	int32_t nc_Cvt_Yuv422_to_Rgb__c(uint8_t *yuv_Packed, uint8_t *rgb_Packed, int32_t width, int32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_Packed	uint8_t*	yuv422 image data.
rgb_Packed	uint8_t*	rgbst image data.
width	int32_t	image pixel width
height	int32_t	image pixel height
[표 38] nc_Cvt_Yuv422_to_Rgb__c() Description
5.3.4.18.1. Control Flow Diagram
 
[그림 35] nc_Cvt_Yuv422_to_Rgb__c() 제어 흐름도
5.3.4.19. [SUI-GRAPHICS-023] nc_Crop_Yuv422__c()
Description	In the 2d yuv source image,
With src_offset_x, src_offset_y as the starting point,
Copy the crop size to the crop destination.
However, the stride of the destination is considered equal to the crop size.
Prototype	int32_t nc_Crop_Yuv422__c(uint8_t *src_ptr, int32_t src_width, int32_t src_height, int32_t src_offset_x, int32_t src_offset_y, uint8_t *dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src_ptr	uint8_t*	source image data
src_width	int32_t	source width size
src_height	int32_t	source height size
src_offset_x	int32_t	source x offset
src_offset_y	int32_t	source y offset
dst_ptr	uint8_t*	destination image data
dst_width	int32_t	crop width size
dst_height	int32_t	crop height size
[표 39] nc_Crop_Yuv422__c() Description
5.3.4.19.1. Control Flow Diagram
 
[그림 36] nc_Crop_Yuv422__c() 제어 흐름도
5.3.4.20. [SUI-GRAPHICS-024] nc_Paste_Yuv422__c()
Description	In 2D yuv destination image,
With dst_offset_x, dst_offset_y as the starting point,
Paste the source size into the destination.
Prototype	int32_t nc_Paste_Yuv422__c(uint8_t *src_ptr, int32_t src_width, int32_t src_height, int32_t dst_offset_x, int32_t dst_offset_y, uint8_t *dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src_ptr	uint8_t*	source image data
src_width	int32_t	source width size
src_height	int32_t	source height size
dst_offset_x	int32_t	destination x offset
dst_offset_y	int32_t	destination y offset
dst_ptr	uint8_t*	destination image data
dst_width	int32_t	destination width size
dst_height	int32_t	destination height size
[표 40] nc_Paste_Yuv422__c() Description
5.3.4.20.1. Control Flow Diagram
 
[그림 37] nc_Paste_Yuv422__c() 제어 흐름도
5.3.4.21. [SUI-GRAPHICS-025] nc_Crop_Rgb32__c()
Description	In 2D rgb32 source image,
With src_offset_x, src_offset_y as the starting point,
Copy the crop size to the crop destination.
However, the stride of the destination is considered equal to the crop size.
Prototype	int32_t nc_Crop_Rgb32__c(uint8_t *src_ptr, int32_t src_width, int32_t src_height, int32_t src_offset_x, int32_t src_offset_y, uint8_t *dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src_ptr	uint8_t*	source image data
src_width	int32_t	source width size
src_height	int32_t	source height size
src_offset_x	int32_t	source x offset
src_offset_y	int32_t	source y offset
dst_ptr	uint8_t*	destination image data
dst_width	int32_t	crop width size
dst_height	int32_t	crop height size
[표 41] nc_Crop_Rgb32__c() Description
5.3.4.21.1. Control Flow Diagram
 
[그림 38] nc_Crop_Rgb32__c() 제어 흐름도
5.3.4.22. [SUI-GRAPHICS-026] nc_Paste_Rgb32__c()
Description	In 2D rgb32 destination image,
With dst_offset_x, dst_offset_y as the starting point,
Paste the source size into the destination.
Prototype	int32_t nc_Paste_Rgb32__c(uint8_t *src_ptr, int32_t src_width, int32_t src_height, int32_t dst_offset_x, int32_t dst_offset_y, uint8_t *dst_ptr, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src_ptr	uint8_t*	source image data
src_width	int32_t	source width size
src_height	int32_t	source height size
dst_offset_x	int32_t	destination x offset
dst_offset_y	int32_t	destination y offset
dst_ptr	uint8_t*	destination image data
dst_width	int32_t	destination width size
dst_height	int32_t	destination height size
[표 42] nc_Paste_Rgb32__c() Description
5.3.4.22.1. Control Flow Diagram
 
[그림 39] nc_Paste_Rgb32__c() 제어 흐름도
5.3.4.23. [SUI-GRAPHICS-027] nc_Rotate_YUV422Planar_Yp_Degree90CW__c()
Description	In the YUV422 Planar format image, the Y plane value is rotated 90 degrees clockwise.
The input values are the starting address of the Y plane, the address where the result will be stored, and the width and height based on the pixel value of the image.
Prototype	int32_t nc_Rotate_YUV422Planar_Yp_Degree90CW__c(uint8_t *YUV422src, uint8_t *YUV422dst, uint32_t width, uint32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-003
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
YUV422src	uint8_t*	source image data
YUV422dst	uint8_t*	rotated destination image data
width	uint32_t	image pixel width
height	uint32_t	image pixel height
[표 43] nc_Rotate_YUV422Planar_Yp_Degree90CW__c() Description
5.3.4.23.1. Control Flow Diagram
 
[그림 40] nc_Rotate_YUV422Planar_Yp_Degree90CW__c() 제어 흐름도
5.3.4.24. [SUI-GRAPHICS-028] nc_Rotate_YUV422Planar_UVp_Degree90CW__c()
Description	In the YUV422 Planar format image, the UV plane value is rotated 90 degrees clockwise.
This means that it is a function dedicated to the UV plane format in contrast to the Y plane, rather than rotating the UV value together.
The input values are the starting address of the U or V plane, the address where the result will be stored, and the width and height based on the pixel value of the image.
Prototype	int32_t nc_Rotate_YUV422Planar_UVp_Degree90CW__c(uint8_t *YUV422src, uint8_t *YUV422dst, uint32_t width, uint32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-003
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
YUV422src	uint8_t*	source image data
YUV422dst	uint8_t*	rotated destination image data
width	uint32_t	image pixel width
height	uint32_t	image pixel height
[표 44] nc_Rotate_YUV422Planar_UVp_Degree90CW__c() Description
5.3.4.24.1. Control Flow Diagram
 
[그림 41] nc_Rotate_YUV422Planar_UVp_Degree90CW__c() 제어 흐름도
5.3.4.25. [SUI-GRAPHICS-029] nc_Rotate_YUV422Planar_Yp_Degree90CCW__c()
Description	In the YUV422 Planar format image, the Y plane value is rotated 90 degrees counterclockwise.
The input values are the starting address of the Y plane, the address where the result will be stored, and the width and height based on the pixel value of the image.
Prototype	int32_t nc_Rotate_YUV422Planar_Yp_Degree90CCW__c(uint8_t *YUV422src, uint8_t *YUV422dst, uint32_t width, uint32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-003
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
YUV422src	uint8_t*	source image data
YUV422dst	uint8_t*	rotated destination image data
width	uint32_t	image pixel width
height	uint32_t	image pixel height
[표 45] nc_Rotate_YUV422Planar_Yp_Degree90CCW__c() Description
5.3.4.25.1. Control Flow Diagram
 
[그림 42] nc_Rotate_YUV422Planar_Yp_Degree90CCW__c() 제어 흐름도
5.3.4.26. [SUI-GRAPHICS-030] nc_Rotate_YUV422Planar_UVp_Degree90CCW__c()
Description	In the YUV422 Planar format image, the UV plane value is rotated 90 degrees counterclockwise.
This means that it is a function dedicated to the UV plane format in contrast to the Y plane, rather than rotating the UV value together.
The input values are the starting address of the U or V plane, the address where the result will be stored, and the width and height based on the pixel value of the image.
Prototype	int32_t nc_Rotate_YUV422Planar_UVp_Degree90CCW__c(uint8_t *YUV422src, uint8_t *YUV422dst, uint32_t width, uint32_t height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-003
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
YUV422src	uint8_t*	source image data
YUV422dst	uint8_t*	rotated destination image data
width	uint32_t	image pixel width
height 	uint32_t	image pixel height
[표 46] nc_Rotate_YUV422Planar_UVp_Degree90CCW__c() Description
5.3.4.26.1. Control Flow Diagram
 
[그림 43] nc_Rotate_YUV422Planar_UVp_Degree90CCW__c () 제어 흐름도
5.3.5. Unit Function 
5.3.5.1. [SWF-GRAPHICS-009] Clippiing()
Description	Restricts the range of int32_t data from 0 to 255 and returns it as data of type uint8_t.
Prototype	static uint8_t Clippiing(int32_t data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
uint8_t	Data value
Parameter
Variable Name	Type	Spec. Designation
data	int32_t	Value
[표 47] Clippiing() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 44] Clippiing() 제어 흐름도
5.3.5.2. [SWF-GRAPHICS-010] yuv422_to_rgb_stripe__c()
Description	Convert YUV422 line to RGB24 line.
Prototype	static int32_t yuv422_to_rgb_stripe__c(uint8_t *yuv_Packed, uint8_t *rgb_Packed, int32_t width)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
yuv_Packed	uint8_t*	yuv422 image data.
rgb_Packed	uint8_t*	rgbst image data.
width	int32_t	image pixel width
[표 48] yuv422_to_rgb_stripe__c() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 45] yuv422_to_rgb_stripe__c() 제어 흐름도
5.4. [SWU-GRAPHICS-004] nc_neon_intc
nc_neon_intc 유닛은 NEON의 Mix RGB with yuyv422, Resize Instruction이 정의되어 있다.
5.4.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 49] 전역 변수
5.4.2. Defined Parameters
Name	Description	Value
INTER_RESIZE_COEF_BITS	Resize BITS	(11)
VRESIZE_LINEAR_MASK_TABLE_SIZE	Mask Table Size	(7)
BITS	BITS	(22)
DELTA	DELTA	0x200000
[표 50] Defined Parameters
5.4.3. Constraint
N/A
5.4.4. Unit Interface
N/A
5.4.5. Unit Function 
5.4.5.1. [SWF-GRAPHICS-011] neon_Mix_Rgbx2Yuyv_stripe()
Description	Mix rgba image with yuyv422 image using neon.
Prototype	void neon_Mix_Rgbx2Yuyv_stripe(uint8_t *src, uint8_t *dst, int32_t w, int32_t pxlfmt)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	source image address
dst	uint8_t*	destination image address
w	int32_t	image width
pxlfmt	int32_t	overlay-mix format
[표 51] neon_Mix_Rgbx2Yuyv_stripe() Description
5.4.5.1.1. Control Flow Diagram
 
[그림 46] neon_Mix_Rgbx2Yuyv_stripe() 제어 흐름도
5.4.5.2. [SWF-GRAPHICS-012] img_vresize_linear_neon()
Description	Performs a resize by bilinear interpolation using NEON acceleration on one line of the image.
Prototype	void img_vresize_linear_neon(int32_t **src, uint8_t *dst, const int16_t *beta, int32_t width)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
src	int32_t**	source image address
dst	uint8_t*	destination image address
beta	const int16_t*	beta ratio
width	int32_t	image width
[표 52] img_vresize_linear_neon() Description
5.4.5.2.1. Control Flow Diagram
 
[그림 47] img_vresize_linear_neon() 제어 흐름도
5.5.  [SWU-GRAPHICS-005] nc_neon_resize
nc_neon_resize 유닛은 NEON을 이용한 Image의 Resize에 관한 Function이 정의되어 있다.
5.5.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 53] 전역 변수
5.5.2. Defined Parameters
Name	Description	Value
INTER_RESIZE_COEF_BITS	Shift Bit Value	(11)
INTER_RESIZE_COEF_SCALE	Scale Value	0x800
MAX_ESIZE	Max Buffer size	(16)
[표 54] Defined Parameters
5.5.3. Constraint
N/A
5.5.4. Unit Interface
N/A
5.5.5. Unit Function 
5.5.5.1. [SWF-GRAPHICS-013] neon_align_size()
Description	Computes and returns n byte align values for the input size sz.
Prototype	static inline uint32_t neon_align_size(int32_t sz, int32_t n)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
uint32_t	Align size
Parameter
Variable Name	Type	Spec. Designation
sz	int32_t	input size
n	int32_t	align size
[표 55] neon_align_size() Description
5.5.5.1.1. Control Flow Diagram
 
[그림 48] neon_align_size() 제어 흐름도
5.5.5.2. [SWF-GRAPHICS-014] neon_floor()
Description	This function make floating as integer.
Prototype	static inline int32_t neon_floor(float a)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Integer value
Parameter
Variable Name	Type	Spec. Designation
a	float	argb image data.
[표 56] neon_floor() Description
5.5.5.2.1. Control Flow Diagram
 
[그림 49] neon_floor() 제어 흐름도
5.5.5.3. [SWF-GRAPHICS-015] neon_clip()
Description	Restricts the range of int32_t x from a to b and returns it as data of type int32_t.
Prototype	static inline int32_t neon_clip(int32_t x, int32_t a, int32_t b)
Call Condition	단발적(On demand)
Related Req. ID
SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Integer value
Parameter
Variable Name	Type	Spec. Designation
x	int32_t	input value.
a	int32_t	min value.
b	int32_t	max value.
[표 57] neon_clip() Description
5.5.5.3.1. Control Flow Diagram
 
[그림 50] neon_clip() 제어 흐름도
5.5.5.4. [SWF-GRAPHICS-016] img_hresize_linear_c()
Description	Performs pre-processing on the image to be resized.
Prototype	static void img_hresize_linear_c(const uint8_t **src, int32_t **dst, int32_t count, const int32_t *xofs, const int16_t *alpha, int32_t swidth, int32_t dwidth, int32_t xmin, int32_t xmax)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
src	const uint8_t**	source image address
dst	int32_t**	destination image address
count	int32_t	pixel per byte
xofs	const int32_t*	x offset table
alpha	const int16_t*	alpha table
swidth	int32_t	source width
dwidth	int32_t	destination width
xmin	int32_t	min x pos
xmax	int32_t	max x pos
[표 58] img_hresize_linear_c() Description
5.5.5.4.1. Control Flow Diagram
 
[그림 51] img_hresize_linear_c() 제어 흐름도
5.5.5.5. [SWF-GRAPHICS-017] img_resize_generic_linear_neon()
Description	Performs an image resize using NEON acceleration.
Prototype	int32_t img_resize_generic_linear_neon(uint8_t *src, uint8_t *dst, const int32_t *xofs, const int16_t *_alpha, const int32_t *yofs, const int16_t *_beta, int32_t xmin, int32_t xmax, int32_t ksize, int32_t srcw, int32_t srch, int32_t srcstep, int32_t dstw, int32_t dsth, int32_t dststep)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
src	uint8_t*	source image address
dst	uint8_t*	destination image address
xofs	const int32_t*	x offset table
_alpha	const int16_t*	alpha table
yofs	const int32_t*	y offset table
_beta	const int16_t*	beta ratio table
xmin	int32_t	min value of x pos
xmax	int32_t	max value of x pos
ksize	int32_t	pixel per byte
srcw	int32_t	source image width
srch	int32_t	source image height
srcstep	int32_t	source stride
dstw	int32_t	destination image width
dsth	int32_t	destination image height
dststep	int32_t	destination stride
[표 59] img_resize_generic_linear_neon() Description
5.5.5.5.1. Control Flow Diagram
 
[그림 52] img_resize_generic_linear_neon() 제어 흐름도
5.5.5.6. [SWF-GRAPHICS-018] img_resize_cal_offset_linear()
Description	Performs an offset calculation of the x, y coordinates to use for the image resize.
Prototype	void img_resize_cal_offset_linear(int32_t *xofs, int16_t *ialpha, int32_t *yofs, int16_t *ibeta, int32_t *xmin, int32_t *xmax, int32_t ksize, int32_t ksize2, int32_t srcw, int32_t srch, int32_t dstw, int32_t dsth)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
xofs	int32_t*	x offset table
ialpha	int16_t*	alpha table
yofs	int32_t*	y offset table
ibeta	int16_t*	beta ratio table
xmin	int32_t*	min x pos
xmax	int32_t*	max x pos
ksize	int32_t	pixel per byte
ksize2	int32_t	pixel per byte2
srcw	int32_t	source word
srch	int32_t	source h size
dstw	int32_t	destination word
dsth	int32_t	destination h size
[표 60] img_resize_cal_offset_linear() Description
5.5.5.6.1. Control Flow Diagram
 
[그림 53] img_resize_cal_offset_linear() 제어 흐름도
5.5.5.7. [SWF-GRAPHICS-019] img_resize_cal_offset_linear_stripe()
Description	This function calculate each pixel's interpolation value.
Prototype	void img_resize_cal_offset_linear_stripe(int32_t *yofs, uint16_t *ibeta, int32_t src_size, int32_t dst_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
yofs	int32_t*	selected pixel order.
ibeta	uint16_t*		ratio of selected pixel to interpolate.
src_size	int32_t	source size.
dst_size	int32_t	dst size.
[표 61] img_resize_cal_offset_linear_stripe() Description
5.5.5.7.1. Control Flow Diagram
 
[그림 54] img_resize_cal_offset_linear_stripe() 제어 흐름도
5.6. [SWU-GRAPHICS-006] nc_graphics_parallel_mixer
nc_graphics_parallel_mixer 유닛은 NEON의 Overlay Mix에 관한 Function이 정의되어 있다.
5.6.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 62] 전역 변수
5.6.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 63] Defined Parameters
5.6.3. Constraint
N/A
5.6.4. Unit Interface
N/A
5.6.5. Unit Function 
5.6.5.1. [SWF-GRAPHICS-020] nc_graphics_parallel_ovelay_mix_neon()
Description	Performs an image resize using NEON acceleration.
Prototype	void nc_graphics_parallel_ovelay_mix_neon(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-004
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-overlay-mix
stage	ssize_t	current line-number(row)
[표 64] nc_graphics_parallel_ovelay_mix_neon() Description
5.6.5.1.1. Control Flow Diagram
 
[그림 55] nc_graphics_parallel_ovelay_mix_neon() 제어 흐름도
5.7. [SWU-GRAPHICS-007] nc_graphics_parallel_resize_bilinear
nc_graphics_parallel_resize_bilinear 유닛은 Create/Release Bilinear Lookup Table, Image Resize이 정의되어 있다.
5.7.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 65] 전역 변수
5.7.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 66] Defined Parameters
5.7.3. Constraint
N/A
5.7.4. Unit Interface
N/A
5.7.5. Unit Function 
5.7.5.1. [SWF-GRAPHICS-021] nc_parallel_resize_generic_by_bilinear()
Description	Performs an yuyv422 image resize with bilinear interpolation on the current line.
Prototype	static void nc_parallel_resize_generic_by_bilinear(uintptr_t cookie, ssize_t stage, int32_t channel)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
channel	int32_t	num-of-channel in image
[표 67] nc_parallel_resize_generic_by_bilinear() Description
5.7.5.1.1. Control Flow Diagram
 
[그림 56] nc_parallel_resize_generic_by_bilinear() 제어 흐름도
5.7.5.2. [SWF-GRAPHICS-022] nc_graphics_parallel_create_and_return_bilinear_lookup_table()
Description	Creates and returns a lookup table for bilinear.
Prototype	uintptr_t nc_graphics_parallel_create_and_return_bilinear_lookup_table(uint64_t key, int32_t src_width, int32_t src_height, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
uintptr_t	Lookup table
Parameter
Variable Name	Type	Spec. Designation
key	uint64_t	serialized value of resize-information
src_widthe	int32_t	width of source image
src_height	int32_t	height of source image
dst_width	int32_t	width of destination image
dst_height	int32_t	height of destination image
[표 68] nc_graphics_parallel_create_and_return_bilinear_lookup_table() Description
5.7.5.2.1. Control Flow Diagram
 
[그림 57] nc_graphics_parallel_create_and_return_bilinear_lookup_table() 제어 흐름도
5.7.5.3. [SWF-GRAPHICS-023] nc_graphics_parallel_destroy_bilinear_lookup_table()
Description	Release internal memory of lookup_table.
Prototype	void nc_graphics_parallel_destroy_bilinear_lookup_table(uintptr_t lookup_table)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
lookup_table	uintptr_t	lookup-table
[표 69] nc_graphics_parallel_destroy_bilinear_lookup_table() Description
5.7.5.3.1. Control Flow Diagram
 
[그림 58] nc_graphics_parallel_destroy_bilinear_lookup_table() 제어 흐름도
5.7.5.4. [SWF-GRAPHICS-024] nc_graphics_parallel_resize_rgb24_by_bilinear()
Description	Performs an rgb24 image resize with bilinear interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_rgb24_by_bilinear(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 70] nc_graphics_parallel_resize_rgb24_by_bilinear() Description
5.7.5.4.1. Control Flow Diagram
 
[그림 59] nc_graphics_parallel_resize_rgb24_by_bilinear() 제어 흐름도
5.7.5.5. [SWF-GRAPHICS-025] nc_graphics_parallel_resize_argb32_by_bilinear()
Description	Performs an argb32 image resize with bilinear interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_argb32_by_bilinear(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 71] nc_graphics_parallel_resize_argb32_by_bilinear() Description
5.7.5.5.1. Control Flow Diagram
 
[그림 60] nc_graphics_parallel_resize_argb32_by_bilinear() 제어 흐름도
5.7.5.6. [SWF-GRAPHICS-026] nc_graphics_parallel_resize_yuv444_by_bilinear()
Description	Performs an yuv444 image resize with bilinear interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_yuv444_by_bilinear(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 72] nc_graphics_parallel_resize_yuv444_by_bilinear() Description
5.7.5.6.1. Control Flow Diagram
 
[그림 61] nc_graphics_parallel_resize_yuv444_by_bilinearr() 제어 흐름도
5.7.5.7. [SWF-GRAPHICS-027] nc_graphics_parallel_resize_yuyv422_by_bilinear()
Description	Performs an yuyv422 image resize with bilinear interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_yuyv422_by_bilinear(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 73] nc_graphics_parallel_resize_yuyv422_by_bilinear() Description
5.7.5.7.1. Control Flow Diagram
 
[그림 62] nc_graphics_parallel_resize_yuyv422_by_bilinear() 제어 흐름도

5.8. [SWU-GRAPHICS-008] nc_graphics_parallel_resize_nearest_neighbor
nc_graphics_parallel_resize_nearest_neighbor 유닛은 현재 Line에서 가장 가까운 Line
에 대한 Create/Release Lookup Table, Resize가 정의되어 있다.
5.8.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 74] 전역 변수
5.8.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 75] Defined Parameters
5.8.3. Constraint
N/A
5.8.4. Unit Interface
N/A
5.8.5. Unit Function 
5.8.5.1. [SWF-GRAPHICS-028] nc_graphics_parallel_resize_generic_by_nearest_neighbor()
Description	Performs an image resize with nearest neighbor interpolation on the current line.
Prototype	static void nc_graphics_parallel_resize_generic_by_nearest_neighbor(uintptr_t cookie, ssize_t stage, int32_t channel)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
channel	int32_t	num-of-channel in image
[표 76] nc_graphics_parallel_resize_generic_by_nearest_neighbor() Description
5.8.5.1.1. Control Flow Diagram
 
[그림 63] nc_graphics_parallel_resize_generic_by_nearest_neighbor() 제어 흐름도
5.8.5.2. [SWF-GRAPHICS-029] nc_graphics_parallel_create_and_return_nearest_neighbor_lookup_table()
Description	Creates and returns a lookup table for nearest neighbors.
Prototype	uintptr_t nc_graphics_parallel_create_and_return_nearest_neighbor_lookup_table(uint64_t key, int32_t src_width, int32_t src_height, int32_t dst_width, int32_t dst_height)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
uintptr_t	Lookup table
Parameter
Variable Name	Type	Spec. Designation
key	uint64_t	serialized value of resize-information
src_widthe	int32_t	width of source image
src_height	int32_t	height of source image
dst_width	int32_t	width of destination image
dst_height	int32_t	height of destination image
[표 77] nc_graphics_parallel_create_and_return_nearest_neighbor_lookup_table() Description
5.8.5.2.1. Control Flow Diagram
 
[그림 64] nc_graphics_parallel_create_and_return_nearest_neighbor_lookup_table() 제어 흐름도
5.8.5.3. [SWF-GRAPHICS-030] nc_graphics_parallel_destroy_nearest_neighbor_lookup_table()
Description	Release internal memory of lookup_table.
Prototype	void nc_graphics_parallel_destroy_nearest_neighbor_lookup_table(uintptr_t lookup_table)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
lookup_table	uintptr_t	lock up Table
[표 78] nc_graphics_parallel_destroy_nearest_neighbor_lookup_table() Description
5.8.5.3.1. Control Flow Diagram
 
[그림 65] nc_graphics_parallel_destroy_nearest_neighbor_lookup_table() 제어 흐름도
5.8.5.4. [SWF-GRAPHICS-031] nc_graphics_parallel_resize_rgb24_by_nearest_neighbor()
Description	Performs an rgb24 image resize with nearest neighbor interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_rgb24_by_nearest_neighbor(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 79] nc_graphics_parallel_resize_rgb24_by_nearest_neighbor() Description
5.8.5.4.1. Control Flow Diagram
 
[그림 66] nc_graphics_parallel_resize_rgb24_by_nearest_neighbor() 제어 흐름도
5.8.5.5. [SWF-GRAPHICS-032] nc_graphics_parallel_resize_argb32_by_nearest_neighbor()
Description	Performs an argb32 image resize with nearest neighbor interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_argb32_by_nearest_neighbor(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 80] nc_graphics_parallel_resize_argb32_by_nearest_neighbor() Description
5.8.5.5.1. Control Flow Diagram
 
[그림 67] nc_graphics_parallel_resize_argb32_by_nearest_neighbor() 제어 흐름도
5.8.5.6. [SWF-GRAPHICS-033] nc_graphics_parallel_resize_yuv444_by_nearest_neighbor()
Description	Performs an yuv444 image resize with nearest neighbor interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_yuv444_by_nearest_neighbor(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 81] nc_graphics_parallel_resize_yuv444_by_nearest_neighbor () Description
5.8.5.6.1. Control Flow Diagram
 
[그림 68] nc_graphics_parallel_resize_yuv444_by_nearest_neighbor() 제어 흐름도
5.8.5.7. [SWF-GRAPHICS-034] nc_graphics_parallel_resize_yuyv422_by_nearest_neighbor()
Description	Performs an yuyv422 image resize with nearest neighbor interpolation on the current line.
Prototype	void nc_graphics_parallel_resize_yuyv422_by_nearest_neighbor(uintptr_t cookie, ssize_t stage)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-GRAPHICS-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cookie	uintptr_t	instance handle of parallel-resize
stage	ssize_t	current line-number(row)
[표 82] nc_graphics_parallel_resize_yuyv422_by_nearest_neighbor() Description
5.8.5.7.1. Control Flow Diagram
 
[그림 69] nc_graphics_parallel_resize_yuyv422_by_nearest_neighbor() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-H264ENC-001] h264enc_kernel_driver
h264enc_kernel_driver 유닛은 커널 부팅 시 H264 Encoder의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
H264ENC_DEFAULT_IMAGE_HSIZE	Image horizontal	(1280U)
H264ENC_DEFAULT_IMAGE_VSIZE	Image vertical	(720U)
H264ENC_DEFAULT_IMAGE_FORMAT	Image format	1
H264ENC_DEFAULT_IMAGE_INSIZE	Image size	(1280 * 720)
H264ENC_DEFAULT_IMAGE_OUTSIZE	Image size	1382400
H264ENC_DEFAULT_ENC_GOP	Encoder GOP	(30U)
H264ENC_DEFAULT_ENC_BITRATE_CTRL	Encoder bitrate mode	0U
H264ENC_DEFAULT_ENC_QP	Encoder QP	(28U)
H264ENC_DEFAULT_ENC_MIN_QP	Encoder QP min	(24U)
H264ENC_DEFAULT_ENC_MAX_QP	Encoder QP max	(41U)
H264ENC_DEFAULT_ENC_BITRATE	Encoder bitrate value	(307200U)
H264ENC_DEFAULT_ENC_FRAME_RATE	Encoder frame	(30U)
H264ENC_DEFAULT_ENC_USER_GAMMA	Default Gamma value	(uint32_t)(0.75f * 32768.0f)
H264ENC_DEFAULT_ENC_ENTROPY_CODING	Entropy Encoder 	1
H264ENC_DEFAULT_ENC_PROFILE	Encoder profile	2
H264ENC_DEFAULT_ENC_DEBLOCKING	Encoder DeBlocking	1
H264ENC_DEFAULT_ENC_LOW_DELAY_ENCODING	Low delay encoding	0
H264ENC_NUM_OF_RST	Reset Number	5
DEV_TREE_PROP_SEL_IRAM_LINEBUF_POS	Position Value	0
NC_H264ENC_SINGLE_FRAME	single input buffer	0
NC_H264ENC_MULTI_FRAME	multi-input buffer	1
NC_H264ENC_AUTO_CTRL	use callback function	2
NC_H264ENC_BASELINE_PROFILE	Encoding profile	0
NC_H264ENC_MAIN_PROFILE	Encoding profile	1
NC_H264ENC_HIGH_PROFILE	Encoding profile	2
NC_H264ENC_VBR	Bitrate control	0
NC_H264ENC_CBR	Bitrate control	1
NC_H264ENC_CABAC	Encoding Entropy	1
NC_H264ENC_CAVAL	Encoding Entropy	0
NC_IMG_YUV420P	Image Format - one planes (YCbCr  4:2:0)	0
NC_IMG_NV12P	Image Format  - two planes(Y/CbCr 4:2:0)	1
NC_IMG_NV21P	Image Format  - two planes(Y/CrCb 4:2:0)	2
NC_IMG_FORMAT_MAX	Image Format Max Value	3
MAX_FRAMEBUFFER_COUNT	MAX Frame count	31
FRAMEBUFFER_POOL_COUNT	Framebuffer pool count	2
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function 
5.1.5.1. [SWF-H264ENC-001] nc_h264enc_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline h264enc_kernel_driver_t *nc_h264enc_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 5] nc_h264enc_kernel_get_instance() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_h264enc_kernel_get_instance() 제어 흐름도
5.1.5.2. [SWF-H264ENC-002] nc_h264enc_reset_ip()
Description	Release reset of h264enc bus.
Prototype	void nc_h264enc_reset_ip(h264enc_kernel_driver_t *handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
[표 6] nc_h264enc_reset_ip() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_h264enc_reset_ip() 제어 흐름도
5.1.5.3. [SWF-H264ENC-003] nc_h264enc_select_iram_line_buf()
Description	Select iram line.
Prototype	void nc_h264enc_select_iram_line_buf(h264enc_kernel_driver_t *handle, uint32_t sel)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
sel	uint32_t	Select line value.
[표 7] nc_h264enc_select_iram_line_buf() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_h264enc_select_iram_line_buf() 제어 흐름도
5.1.5.4. [SWF-H264ENC-004] nc_h264enc_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_h264enc_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
EVENT	Exception handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	Extended exception frame
id	Address	Callback parameter
[표 8] nc_h264enc_kernel_exception_handler() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_h264enc_kernel_exception_handler() 제어 흐름도
5.1.5.5. [SWF-H264ENC-005] nc_h264enc_kernel_read_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceStatus function from user-space.
Prototype	static Error nc_h264enc_kernel_read_command(IODeviceVector iod, Value command, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	void*	buffer address
len	Address	buffer size
[표 9] nc_h264enc_kernel_read_command() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_h264enc_kernel_read_command() 제어 흐름도
5.1.5.6. [SWF-H264ENC-006] nc_h264enc_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceStatus function from user-space.
Prototype	static Error nc_h264enc_kernel_write_command(IODeviceVector iod, Value command, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or NotSupported or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	void*	buffer address
len	Address	buffer size
[표 10] nc_h264enc_kernel_write_command() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 11] nc_h264enc_kernel_write_command() 제어 흐름도
5.1.5.7. [SWF-H264ENC-007] nc_h264enc_kernel_probe()
Description	Performs hw resource initialization of h264enc at kernel-boot time.
Prototype	static Error nc_h264enc_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 11] nc_h264enc_kernel_probe() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 12] nc_h264enc_kernel_probe() 제어 흐름도
5.2. [SWU-H264ENC-002] nc_library_h264enc
nc_library_h264enc 유닛은 H264 Encoding 수행을 위한 Function이 정의되어 있다. 
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 12] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
MAX_LEVEL_IDX	Max Level Index	16U
VPU_WAIT_TIME_OUT	VPU Timeout value	5000U
DEFAULT_TIMEOUT_US	Default Timeout value	500000U
[표 13] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
N/A
5.2.5. Unit Function 
5.2.5.1. [SWF-H264ENC-008] byte_swap()
Description	byte swap function.
Prototype	static void byte_swap(uint8_t *data, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
data	uint8_t*	Data buffer
len	uint32_t	Data length
[표 14] byte_swap() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 13] byte_swap() 제어 흐름도
5.2.5.2. [SWF-H264ENC-009] word_swap()
Description	word swap function.
Prototype	static void word_swap(uint8_t *data, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
data	uint8_t*	Data buffer
len	uint32_t	Data length
[표 15] word_swap() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 14] word_swap() 제어 흐름도
5.2.5.3. [SWF-H264ENC-010] dword_swap()
Description	dword swap function.
Prototype	static void dword_swap(uint8_t* data, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
data	uint8_t*	Data buffer
len	uint32_t	Data length
[표 16] dword_swap() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 15] dword_swap() 제어 흐름도
5.2.5.4. [SWF-H264ENC-011] swap_endian()
Description	endian swap function.
Prototype	static void swap_endian(uint8_t *data, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
data	uint8_t*	Data buffer
len	uint32_t	Data length
[표 17] swap_endian() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 16] swap_endian() 제어 흐름도
5.2.5.5. [SWF-H264ENC-012] nc_vpu_is_busy()
Description	Check the busy state.
Prototype	static Error nc_vpu_is_busy(h264enc_kernel_driver_t *handle, uint32_t addr_bit_busy_flag)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
addr_bit_busy_flag	uint32_t	Bit flag
[표 18] nc_vpu_is_busy() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 17] nc_vpu_is_busy() 제어 흐름도
5.2.5.6. [SWF-H264ENC-013] nc_vpu_is_bus_busy()
Description	Check the bus busy state.
Prototype	static Error nc_vpu_is_bus_busy(h264enc_kernel_driver_t *handle, uint32_t gdi_busy_flag)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
gdi_busy_flag	uint32_t	Bit flag
[표 19] nc_vpu_is_bus_busy() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 18] nc_vpu_is_bus_busy() 제어 흐름도
5.2.5.7. [SWF-H264ENC-014] nc_vpu_clear_register()
Description	Clear register.
Prototype	static void nc_vpu_clear_register(h264enc_kernel_driver_t *handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
[표 20] nc_vpu_clear_register() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 19] nc_vpu_clear_register() 제어 흐름도
5.2.5.8. [SWF-H264ENC-015] nc_vpu_wait_interrupt()
Description	Wait for intrrupt.
Prototype	static uint32_t nc_vpu_wait_interrupt(h264enc_kernel_driver_t *handle, uint32_t timeout)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
uint32_t	Interrupt reason
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
timeout	uint32_t	Timeout value
[표 21] nc_vpu_wait_interrupt() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 20] nc_vpu_wait_interrupt() 제어 흐름도
5.2.5.9. [SWF-H264ENC-016] nc_vpu_issue_command()
Description	Executes VPU operation instructions.
Prototype	static Error nc_vpu_issue_command(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param, uint32_t cmd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
cmd	uint32_t	Command value
[표 22] nc_vpu_issue_command() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 21] nc_vpu_issue_command() 제어 흐름도
5.2.5.10. [SWF-H264ENC-017] nc_vpu_reset()
Description	Performs VPU reset function.
Prototype	static Error nc_vpu_reset(h264enc_kernel_driver_t *handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
[표 23] nc_vpu_reset() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 22] nc_vpu_reset() 제어 흐름도
5.2.5.11. [SWF-H264ENC-018] bit_load_firmware()
Description	Download BIT Microcode to Program Memory.
Prototype	static void bit_load_firmware(h264enc_kernel_driver_t *handle, uint8_t *code_base, const uint16_t *bit_code, uint32_t bit_code_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
Handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
code_base	uint8_t*	Code address
bit_code	const uint16_t*	Bit code
bit_code_size	uint32_t	Code size
[표 24] bit_load_firmware() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 23] bit_load_firmware() 제어 흐름도
5.2.5.12. [SWF-H264ENC-019] nc_vpu_load_firmware()
Description	VPU Firmware load function.
Prototype	static Error nc_vpu_load_firmware(h264enc_kernel_driver_t *handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
[표 25] nc_vpu_load_firmware() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 24] nc_vpu_load_firmware() 제어 흐름도
5.2.5.13. [SWF-H264ENC-020] nc_vpu_set_bitrate_ctrl()
Description	Set the bitrate of the VPU.
Prototype	static void nc_vpu_set_bitrate_ctrl(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 26] nc_vpu_set_bitrate_ctrl() Description
5.2.5.13.1. Control Flow Diagram
 
[그림 25] nc_vpu_set_bitrate_ctrl() 제어 흐름도
5.2.5.14. [SWF-H264ENC-021] nc_vpu_set_qp_ctrl()
Description	Set the qp control of the VPU.
Prototype	static void nc_vpu_set_qp_ctrl(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 27] nc_vpu_set_qp_ctrl() Description
5.2.5.14.1. Control Flow Diagram
 
[그림 26] nc_vpu_set_qp_ctrl() 제어 흐름도
5.2.5.15. [SWF-H264ENC-022] nc_vpu_set_frame_mem_info()
Description	Set the frame memory information.
Prototype	static void nc_vpu_set_frame_mem_info(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 28] nc_vpu_set_frame_mem_info() Description
5.2.5.15.1. Control Flow Diagram
 
[그림 27] nc_vpu_set_frame_mem_info() 제어 흐름도
5.2.5.16. [SWF-H264ENC-023] nc_vpu_set_bit_stream_info()
Description	Set bit stream information.
Prototype	static void nc_vpu_set_bit_stream_info(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 29] nc_vpu_set_bit_stream_info () Description
5.2.5.16.1. Control Flow Diagram
 
[그림 28] nc_vpu_set_bit_stream_info() 제어 흐름도
5.2.5.17. [SWF-H264ENC-024] nc_vpu_init_param()
Description	VPU initialize.
Prototype	static Error nc_vpu_init_param(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 30] nc_vpu_init_param() Description
5.2.5.17.1. Control Flow Diagram
 
[그림 29] nc_vpu_init_param() 제어 흐름도
5.2.5.18. [SWF-H264ENC-025] nc_vpu_set_cache_config()
Description	Set vpu cache config.
Prototype	static void nc_vpu_set_cache_config(nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 31] nc_vpu_set_cache_config() Description
5.2.5.18.1. Control Flow Diagram
 
[그림 30] nc_vpu_set_cache_config() 제어 흐름도
5.2.5.19. [SWF-H264ENC-026] nc_vpu_allocate_buffer()
Description	Alloc Buffer.
Prototype	static void nc_vpu_allocate_buffer(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 32] nc_vpu_allocate_buffer() Description
5.2.5.19.1. Control Flow Diagram
 
[그림 31] nc_vpu_allocate_buffer() 제어 흐름도
5.2.5.20. [SWF-H264ENC-027] nc_vpu_set_frame_buffer()
Description	Set vpu frame buffer.
Prototype	static Error nc_vpu_set_frame_buffer(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 33] nc_vpu_set_frame_buffer() Description
5.2.5.20.1. Control Flow Diagram
 
[그림 32] nc_vpu_set_frame_buffer() 제어 흐름도
5.2.5.21. [SWF-H264ENC-028] nc_vpu_build_header()
Description	Create an encodig header.
Prototype	static Error nc_vpu_build_header(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param, uint32_t headerType)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
headerType	uint32_t	Header type
[표 34] nc_vpu_build_header() Description
5.2.5.21.1. Control Flow Diagram
 
[그림 33] nc_vpu_build_header() 제어 흐름도
5.2.5.22. [SWF-H264ENC-029] nc_vpu_get_version()
Description	Get version information.
Prototype	static Error nc_vpu_get_version(h264enc_kernel_driver_t *handle, uint32_t *version, uint32_t *revision, uint32_t *product_id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
version	uint32_t*	Version data buffer
eevision			uint32_t*	Revision data buffer
product_id	uint32_t*	Product id buffer
[표 35] nc_vpu_get_version() Description
5.2.5.22.1. Control Flow Diagram
 
[그림 34] nc_vpu_get_version() 제어 흐름도
5.2.5.23. [SWF-H264ENC-030] nc_vpu_get_level()
Description	Get the level value.
Prototype	static uint32_t nc_vpu_get_level(nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
uint32_t	Level value
Parameter
Variable Name	Type	Spec. Designation
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 36] nc_vpu_get_level() Description
5.2.5.23.1. Control Flow Diagram
 
[그림 35] nc_vpu_get_level() 제어 흐름도
5.2.5.24. [SWF-H264ENC-031] nc_library_h264enc_init()
Description	H264 initialize.
Prototype	Error nc_library_h264enc_init(h264enc_kernel_driver_t *handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
[표 37] nc_library_h264enc_init() Description
5.2.5.24.1. Control Flow Diagram
 
[그림 36] nc_library_h264enc_init() 제어 흐름도
5.2.5.25. [SWF-H264ENC-032] nc_library_h264enc_open()
Description	H264 library open.
Prototype	Error nc_library_h264enc_open(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 38] nc_library_h264enc_open() Description
5.2.5.25.1. Control Flow Diagram
 
[그림 37] nc_library_h264enc_open() 제어 흐름도
5.2.5.26. [SWF-H264ENC-033] nc_library_h264enc_start_enc()
Description	Start H264 encodig.
Prototype	Error nc_library_h264enc_start_enc(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param, uint32_t force_i_picture)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Succrss or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
force_i_picture	uint32_t	PIC option value
[표 39] nc_library_h264enc_start_enc() Description
5.2.5.26.1. Control Flow Diagram
 
[그림 38] nc_library_h264enc_start_enc() 제어 흐름도
5.2.5.27. [SWF-H264ENC-034] nc_library_h264enc_start_post_process()
Description	Start H264 post process.
Prototype	Error nc_library_h264enc_start_post_process(h264enc_kernel_driver_t *handle, nc_library_h264enc_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
param	nc_library_h264enc_param_t*	struct input_image - resolution, format, buffer information of input image
struct output_stream - format, buffer information of output stream
struct enc_param - h264 encoding parameter
struct vpu_param - config, buffer information of vpu
[표 40] nc_library_h264enc_start_post_process() Description
5.2.5.27.1. Control Flow Diagram
 
[그림 39] nc_library_h264enc_start_post_process() 제어 흐름도
5.2.5.28. [SWF-H264ENC-035] nc_library_h264enc_get_intr_status()
Description	Get Interrupt status.
Prototype	void nc_library_h264enc_get_intr_status(h264enc_kernel_driver_t *handle, uint32_t *store, uint32_t *reason)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
store	uint32_t*	Interrupt status is stored
reson	uint32_t*	Interrupt status is reason
[표 41] nc_library_h264enc_get_intr_status() Description
5.2.5.28.1. Control Flow Diagram
 
[그림 40] nc_library_h264enc_get_intr_status() 제어 흐름도
5.2.5.29. [SWF-H264ENC-036] nc_library_h264enc_clear_pending()
Description	Clear interrupt pending.
Prototype	void nc_library_h264enc_clear_pending(h264enc_kernel_driver_t *handle, uint32_t pending)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
handle	h264enc_kernel_driver_t*	iod - iodevice vector
ioaddr - kernel virtual address of special function register
khwclock_reset - reset handle of khwclock
clkmux_sel_iram_line_buf_id - line-buffer clock selector
irq_num - IRQ number
h264enc_buffer_handle - buffer of MemoryReservation for continuous memory
h264enc_buffer_kernel_address - kernel address of continuous memory buffer
h264enc_buffer_physical_address - physical address of continuous memory buffer
h264enc_param - h264 encoding parameter
result_info - h264 encoding result information
enc_index - h264 encoding frame index
intr_status - interrupt status
intr_reason - interrupt reason
dev_name - device name for iodevice
irq_name - irq-name for debug
pending	uint32_t*	Pending data
[표 42] nc_library_h264enc_clear_pending() Description
5.2.5.29.1. Control Flow Diagram
 
[그림 41] nc_library_h264enc_clear_pending() 제어 흐름도
5.3. [SWU-H264ENC-003] h264enc_driver
h264enc_driver 유닛은 User가 H264 Encoding의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 H264 Encoding 초기화, Start, Copy Buffer, Get/Set Parameter이다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 43] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
CASE_CODEC_SM_START_BIT_ERROR	Bit Error	7
CASE_CODEC_SM_COMPARE_ERROR	Compare Error	8
CODEC_SM_DEBUG_ON	Debug On	0
[표 44] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface 
5.3.4.1. [SUI-H264ENC-001] nc_h264enc_probe()
Description	This function is called when the driver module starts up.
It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_h264enc_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 45] nc_h264enc_probe() Description
5.3.4.1.1. Control Flow Diagram
 
[그림 42] nc_h264enc_probe() 제어 흐름도
5.3.4.2. [SUI-H264ENC-002] nc_h264enc_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_h264enc_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle 	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 46] nc_h264enc_ioctl() Description
5.3.4.2.1. Control Flow Diagram
 
[그림 43] nc_h264enc_ioctl() 제어 흐름도
5.3.4.3. [SUI-H264ENC-003] nc_h264enc_ioctl_get_input_image_parameter()
Description	Gets the parameters of the input image.
Prototype	static Error nc_h264enc_ioctl_get_input_image_parameter(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	Buffer-length
[표 47] nc_h264enc_ioctl_get_input_image_parameter() Description
5.3.4.3.1. Control Flow Diagram
 
[그림 44] nc_h264enc_ioctl_get_input_image_parameter() 제어 흐름도
5.3.4.4. [SUI-H264ENC-004] nc_h264enc_ioctl_get_encoder_parameter()
Description	Gets the parameters of the encoder.
Prototype	static Error nc_h264enc_ioctl_get_encoder_parameter(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	Buffer-length
[표 48] nc_h264enc_ioctl_get_encoder_parameter() Description
5.3.4.4.1. Control Flow Diagram
 
[그림 45] nc_h264enc_ioctl_get_encoder_parameter() 제어 흐름도
5.3.4.5. [SUI-H264ENC-005] nc_h264enc_ioctl_set_input_image_parameter()
Description	Sets the parameters of the input image.
Prototype	static Error nc_h264enc_ioctl_set_input_image_parameter(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 49] nc_h264enc_ioctl_set_input_image_parameter() Description
5.3.4.5.1. Control Flow Diagram
 
[그림 46] nc_h264enc_ioctl_set_input_image_parameter() 제어 흐름도
5.3.4.6. [SUI-H264ENC-006] nc_h264enc_ioctl_set_encoder_parameter()
Description	Sets the parameters of the encoder.
Prototype	static Error nc_h264enc_ioctl_set_encoder_parameter(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 50] nc_h264enc_ioctl_set_encoder_parameter() Description
5.3.4.6.1. Control Flow Diagram
 
[그림 47] nc_h264enc_ioctl_set_encoder_parameter() 제어 흐름도
5.3.4.7. [SUI-H264ENC-007] nc_h264enc_ioctl_initialize()
Description	Initialize H264.
Prototype	static Error nc_h264enc_ioctl_initialize(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 51] nc_h264enc_ioctl_initialize() Description
5.3.4.7.1. Control Flow Diagram
 
[그림 48] nc_h264enc_ioctl_initialize() 제어 흐름도
5.3.4.8. [SUI-H264ENC-008] nc_h264enc_ioctl_start_encoder()
Description	Start encoding.
Prototype	static Error nc_h264enc_ioctl_start_encoder(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 52] nc_h264enc_ioctl_start_encoder() Description
5.3.4.8.1. Control Flow Diagram
 
[그림 49] nc_h264enc_ioctl_start_encoder() 제어 흐름도
5.3.4.9. [SUI-H264ENC-009] nc_h264enc_ioctl_post_process()
Description	Sends a post process command.
Prototype	static Error nc_h264enc_ioctl_post_process(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 53] nc_h264enc_ioctl_post_process() Description
5.3.4.9.1. Control Flow Diagram
 
[그림 50] nc_h264enc_ioctl_post_process() 제어 흐름도
5.3.4.10. [SUI-H264ENC-010] nc_h264enc_ioctl_copy_to_input_buffer()
Description	Copy the parameter value to the input buffer.
Prototype	static Error nc_h264enc_ioctl_copy_to_input_buffer(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 54] nc_h264enc_ioctl_copy_to_input_buffer() Description
5.3.4.10.1. Control Flow Diagram
 
[그림 51] nc_h264enc_ioctl_copy_to_input_buffer() 제어 흐름도
5.3.4.11. [SUI-H264ENC-011] nc_h264enc_ioctl_copy_from_input_buffer()
Description	Copy the input buffer value to the parameter.
Prototype	static Error nc_h264enc_ioctl_copy_from_input_buffer(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*	iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 55] nc_h264enc_ioctl_copy_from_input_buffer() Description
5.3.4.11.1. Control Flow Diagram
 
[그림 52] nc_h264enc_ioctl_copy_from_input_buffer() 제어 흐름도
5.3.4.12. [SUI-H264ENC-012] nc_h264enc_ioctl_get_iodevice()
Description	Get IO device.
Prototype	static Error nc_h264enc_ioctl_get_iodevice(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*		iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 56] nc_h264enc_ioctl_get_iodevice() Description
5.3.4.12.1. Control Flow Diagram
 
[그림 53] nc_h264enc_ioctl_get_iodevice() 제어 흐름도
5.3.4.13. [SUI-H264ENC-013] nc_h264enc_SM_checkEncBuffer()
Description	Check Encoding Buffer.
Prototype	static Error nc_h264enc_SM_checkEncBuffer(nc_h264enc_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_h264enc_driver_t*		iod - IODevice Handle
input_pmr - Physical Memory Region Handle for mmap os input buffer
input_vmr - Virtual Memory Region Handle for mmap os input buffer
input_buffer - virtual address of input buffer
input_buffer_size - input buffer size
output_pmr - Physical Memory Region Handle for mmap os output buffer
output_vmr - Virtual Memory Region Handle for mmap os output buffer
output_buffer - virtual address of output buffer
output_buffer_size - output buffer size
input_image_param - input image information
enc_param - encoding parameter
result_info - encoding result information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 57] nc_h264enc_SM_checkEncBuffer() Description
5.3.4.13.1. Control Flow Diagram
 
[그림 54] nc_h264enc_SM_checkEncBuffer() 제어 흐름도
5.3.5. Unit Function 
5.3.5.1. [SWF-H264ENC-037] nc_h264enc_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static nc_h264enc_driver_t *nc_h264enc_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-001
Return
Type	Spec. Designation
nc_h264enc_driver_t*	H264 enc instance Habdle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 58] nc_h264enc_get_instance() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 55] nc_h264enc_get_instance() 제어 흐름도
5.3.5.2. [SWF-H264ENC-038] nc_codec_get_safety_alarm_object()
Description	Return Safety Alarm Object.
Prototype	static inline Connection nc_codec_get_safety_alarm_object(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002, SSR-SoC-H264SM-001
Return
Type	Spec. Designation
Connection	Alarm Object
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 59] nc_codec_get_safety_alarm_object() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 56] nc_codec_get_safety_alarm_object() 제어 흐름도
5.3.5.3. [SWF-H264ENC-039] nc_codec_alarm_to_safety_mechanism()
Description	Send Alarm to Safety Mechanism.
Prototype	static void nc_codec_alarm_to_safety_mechanism(Address alam_code)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-H264ENC-002, SSR-SoC-H264SM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
Address	alam_code	Alam code value
[표 60] nc_codec_alarm_to_safety_mechanism() Description
5.3.5.3.1. Control Flow Diagram
 
[그림 57] nc_codec_alarm_to_safety_mechanism() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-H264SM-001] H264_sm
H264_sm 유닛은 H264 Encoding을 수행하면서 Error가 발생하면 SE에 Fault를 전달한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
CASE_CODEC_SM_START_BIT_ERROR	Fault State	7
CASE_CODEC_SM_COMPARE_ERROR	Fault State	8
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface 
5.1.3.1. [SUI-H264SM-001] h264_monitor_task()
Description	Run H264 Safety monitoring task.
Prototype	Value h264_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-H264SM-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 5] h264_monitor_task() Description
5.1.3.1.1. Control Flow Diagram
 
[그림 5] h264_monitor_task() 제어 흐름도
5.1.4. Unit Function
N/A
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-I2C-001] i2c_kernel_driver
i2c_kernel_driver 유닛은 커널 부팅 시 I2C의 HW 리소스의 초기화를 수행하고, IO Function 호출에 대한 처리를 한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface
N/A
5.1.4. Unit Function
5.1.4.1. [SWF-I2C-001] nc_i2c_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline i2c_kernel_driver_t *nc_i2c_kernel_get_instance(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
i2c_kernel_driver_t*	I2C Instance Handle
Parameter
Variable Name	Type	Spec. Designation
dev_num	uint32_t	channel-number
[표 5] nc_i2c_kernel_get_instance() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] nc_i2c_kernel_get_instance() 제어 흐름도
5.1.4.2. [SWF-I2C-002] nc_i2c_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_i2c_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 6] nc_i2c_kernel_read_command() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 7] nc_i2c_kernel_read_command() 제어 흐름도
5.1.4.3. [SWF-I2C-003] nc_i2c_kernel_probe()
Description	Performs hw resource initialization of i2c at kernel-boot time.
Prototype	static Error nc_i2c_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
match_name	const char*	compatible-name of device-tree node
[표 7] nc_i2c_kernel_probe() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 8] nc_i2c_kernel_probe() 제어 흐름도
5.2.  [SWU-I2C-002] i2c_driver
i2c_driver 유닛은 User가 I2C의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 I2C 초기화, Read/Write, Set Clock, Safety Check Read Back이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 8] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
I2C_NANO_SEC	Divide value of nano second	1000000000
I2C_DEFAULT_BUS_SPEED	I2c bus speed clock	800000
I2C_SCL_SPIKE_LEN	I2c spike length	2
I2C_CAP_LOADING	Delay time depending on the capacitance of the capacitor	100
I2C_SCL_RISE_TIME	I2c rising nano second time	200
I2C_SCL_FALL_TIME	I2c falling nano second time	13
CASE_I2C_RD_BACK_ERROR	I2C Read Back Error value	3
CASE_I2C_TIMEOUT_ERROR	I2C Timeout Error Value	5
[표 9] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-I2C-001] nc_i2c_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_i2c_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
driver	nc_node_driver_t*	driver-descriptor
[표 10] nc_i2c_probe() Description 
5.2.4.1.1. Control Flow Diagram
 
[그림 9] nc_i2c_probe() 제어 흐름도
5.2.4.2. [SUI-I2C-002] nc_i2c_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_i2c_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 11] nc_i2c_ioctl() Description
5.2.4.2.1. Control Flow Diagram
 
	[그림 10] nc_i2c_ioctl() 제어 흐름도	
5.2.4.3. [SUI-I2C-003] nc_i2c_ioctl_read()
Description	Read data from the slave device of the i2c bus.
Prototype	static Error nc_i2c_ioctl_read(nc_i2c_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t *	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 12] nc_i2c_ioctl_read() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 11] nc_i2c_ioctl_read() 제어 흐름도
5.2.4.4. [SUI-I2C-004] nc_i2c_ioctl_write()
Description	Writes data to the slave device of the i2c bus.
Prototype	static Error nc_i2c_ioctl_write(nc_i2c_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t *	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 13] nc_i2c_ioctl_write() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 12] nc_i2c_ioctl_write() 제어 흐름도
5.2.4.5. [SUI-I2C-005] nc_i2c_ioctl_set_scl()
Description	Reconfigure i2c timing parameters with the entered speed.
Prototype	static Error nc_i2c_ioctl_set_scl(nc_i2c_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t *	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 14] nc_i2c_ioctl_set_scl() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 13] nc_i2c_ioctl_set_scl() 제어 흐름도
5.2.4.6. [SUI-I2C-006] nc_i2c_ioctl_safe_write()
Description	Use the safety engine to write data to the slave device on the i2c bus.
Prototype	static Error nc_i2c_ioctl_safe_write(nc_i2c_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-IFRB-001, SSR-SoC-IFTO-001, SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 15] nc_i2c_ioctl_safe_write() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 14] nc_i2c_ioctl_safe_write() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-I2C-004] nc_i2c_enable()
Description	Enable the i2c controller.
Prototype	static Error nc_i2c_enable(nc_i2c_driver_t *instance, uint32_t enable)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success or OperationTimeOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t *	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
enable	uint32_t	enable-flag
[표 16] nc_i2c_enable() Description
5.2.5.1.1. Control Flow Diagram
  
[그림 15] nc_i2c_enable() 제어 흐름도
5.2.5.2. [SWF-I2C-005] nc_i2c_set_bus_speed()
Description	Set timing parameters according to i2c speed mode.
Prototype	static void nc_i2c_set_bus_speed(nc_i2c_driver_t *instance, struct i2c_speed_config *config)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
config	i2c_speed_config*	scl_lcnt - Low count value for SCL
scl_hcnt - High count value for SCL
sda_hold - Data hold count
speed_mode - Speed mode being used
[표 17] nc_i2c_set_bus_speed() Description
5.2.5.2.1. Control Flow Diagram
  
[그림 16] nc_i2c_set_bus_speed() 제어 흐름도
5.2.5.3. [SWF-I2C-006] nc_i2c_get_core_clock()
Description	Get core clock according to i2c.
Prototype	static Error nc_i2c_get_core_clock(nc_i2c_driver_t *instance, uint32_t *core_clock)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
core_clock	uint32_t*	controller-input-clock
[표 18] nc_i2c_get_core_clock() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 17] nc_i2c_get_core_clock() 제어 흐름도
5.2.5.4. [SWF-I2C-007] nc_i2c_get_speed_mode()
Description	Get speed mode according to i2c.
Prototype	static Error nc_i2c_get_speed_mode(uint32_t bus_speed, i2c_speed_mode_t *speed_mode)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success or Failure or NotSupported
Parameter
Variable Name	Type	Spec. Designation
bus_speed	uint32_t	scl-value
speed_mode	i2c_speed_mode_t*	return-address-of-speed-mode
[표 19] nc_i2c_get_speed_mode() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 18] nc_i2c_get_speed_mode() 제어 흐름도
5.2.5.5. [SWF-I2C-008] nc_i2c_calc_hcnt()
Description	Calculates and returns hcnt, the i2c speed parameter.
Prototype	static int32_t nc_i2c_calc_hcnt(int32_t ic_period_ns, int32_t htime)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
int32_t	hcnt
Parameter
Variable Name	Type	Spec. Designation
ic_period_ns	int32_t	target period in ns
htime	int32_t	high-time in ns
[표 20] nc_i2c_calc_hcnt() Description
5.2.5.5.1. ontrol Flow Diagram
 
[그림 19] nc_i2c_calc_hcnt() 제어 흐름도
5.2.5.6. [SWF-I2C-009] nc_i2c_calc_lcnt()
Description	Calculates and returns lcnt, the i2c speed parameter.
Prototype	static int32_t nc_i2c_calc_lcnt(int32_t ic_period_ns, int32_t ltime)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
int32_t	Low Count Value
Parameter
Variable Name	Type	Spec. Designation
ic_period_ns	int32_t	target period in ns
ltime	int32_t	low-time in ns
[표 21] nc_i2c_calc_lcnt() Description 
5.2.5.6.1. Control Flow Diagram
 
[그림 20] nc_i2c_calc_lcnt() 제어 흐름도
5.2.5.7. [SWF-I2C-010] nc_i2c_calc_bus_speed()
Description	Performs calculation of i2c speed parameters and returns the result.
Prototype	static Error nc_i2c_calc_bus_speed(nc_i2c_driver_t *instance, uint32_t core_clock, uint32_t bus_speed, struct i2c_speed_config *config)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
Error	Success or Failure or NotSupported or ArgumentrError
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
core_clock	uint32_t	controller-input-clock
bus_speed	uint32_t	requested-speed-value
config	struct i2c_speed_config*	scl_lcnt - Low count value for SCL
scl_hcnt - High count value for SCL
sda_hold - Data hold count
speed_mode - Speed mode being used
[표 22] nc_i2c_calc_bus_speed() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 21] nc_i2c_calc_bus_speed() 제어 흐름도
5.2.5.8. [SWF-I2C-011] nc_i2c_flush_rxfifo()
Description	Perform flush of hw fifo.
Prototype	static void nc_i2c_flush_rxfifo(nc_i2c_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
[표 23] nc_i2c_flush_rxfifo() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 22] nc_i2c_flush_rxfifo() 제어 흐름도
5.2.5.9. [SWF-I2C-012] nc_i2c_wait_for_bus_busy()
Description	Check the i2c bus status and wait until it becomes idle.
Prototype	static Error nc_i2c_wait_for_bus_busy(nc_i2c_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
[표 24] nc_i2c_wait_for_bus_busy() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 23] nc_i2c_wait_for_bus_busy() 제어 흐름도
5.2.5.10. [SWF-I2C-013] nc_i2c_xfer_init()
Description	Initialize the i2c bus and perform hand-shaking with the slave device.
Prototype	static Error nc_i2c_xfer_init(nc_i2c_driver_t *instance, uint8_t chip, uint32_t addr, size_t alen)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t *	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
chip	uint8_t	slave-device-address
addr	uint32_t	register-offset-in-slave-device
alen	size_t	address-length-of-register-offset
[표 25] nc_i2c_xfer_init() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 24] nc_i2c_xfer_init() 제어 흐름도
5.2.5.11. [SWF-I2C-014] nc_i2c_xfer_finish()
Description	Wait for communication to end and empty the receiving buffer.
Prototype	static Error nc_i2c_xfer_finish(nc_i2c_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
[표 26] nc_i2c_xfer_finish() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 25] nc_i2c_xfer_finish() 제어 흐름도
5.2.5.12. [SWF-I2C-015] nc_i2c_ioctl_read_data()
Description	Read data from the slave device of the i2c bus.
Prototype	static Error nc_i2c_ioctl_read_data(nc_i2c_driver_t *instance, nc_i2c_transfer_t *io)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
io	nc_i2c_transfer_t*	chip - slave device address
addr - register offset of slave device
alen - register offset length
buf - data buffer
safety_buf - read-back buffer for safety function
len - transfer data size
[표 27] nc_i2c_ioctl_read_data() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 26] nc_i2c_ioctl_read_data() 제어 흐름도
5.2.5.13. [SWF-I2C-016] nc_i2c_ioctl_write_data()
Description	Writes data to the slave device of the i2c bus.
Prototype	static Error nc_i2c_ioctl_write_data(nc_i2c_driver_t *instance, nc_i2c_transfer_t *io)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_i2c_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of I2C hw register
config - speed config
default_master_ic_con - default config at master mode
io	nc_i2c_transfer_t*	chip - slave device address
addr - register offset of slave device
alen - register offset length
buf - data buffer
safety_buf - read-back buffer for safety function
len - transfer data size
[표 28] nc_i2c_ioctl_write_data() Description
5.2.5.13.1. Control Flow Diagram
 
[그림 27] nc_i2c_ioctl_write_data() 제어 흐름도
5.2.5.14. [SWF-I2C-017] nc_i2c_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_i2c_driver_t *nc_i2c_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-I2C-001
Return
Type	Spec. Designation
nc_i2c_driver_t*	Instance handle of the driver
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	Channel value
[표 29] nc_i2c_get_instance() Description
5.2.5.14.1. Control Flow Diagram
 
[그림 28] nc_i2c_get_instance() 제어 흐름도
5.2.5.15. [SWF-I2C-018] nc_i2c_alarm_to_safety_mechanism()
Description	Send Alarm to Safety Mechanism.
Prototype	static void nc_i2c_alarm_to_safety_mechanism(Address alarm_code)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-IFRB-001, SSR-SoC-IFTO-001, SR-SoC-I2C-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
alarm_code	Address	alarm-code value
[표 30] nc_i2c_alarm_to_safety_mechanism() Description
5.2.5.15.1. Control Flow Diagram
 
[그림 29] nc_i2c_alarm_to_safety_mechanism() 제어 흐름도
5.2.5.16. [SWF-I2C-019] nc_i2c_get_safety_alarm_object()
Description	Return Safety Alarm Object.
Prototype	static inline Connection nc_i2c_get_safety_alarm_object(void)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-IFRB-001, SSR-SoC-IFTO-001, SR-SoC-I2C-002
Return
Type	Spec. Designation
Connection	Safety alarm object
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 31] nc_i2c_get_safety_alarm_object() Description
5.2.5.16.1. Control Flow Diagram
 
[그림 30] nc_i2c_get_safety_alarm_object() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-IFRB-001] IFRB_sm
IFRB_sm 유닛은 I2C와 SPI의 Read Back Error가 발생 시 SE로 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
MAX_CASE_OF_IFRB_SM	Case Number of Read Back	2
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-IFRB-001] nc_set_interface_readback_status()
Description	Write SW fault pre-defined as IFRB_SM.
Prototype	Error nc_set_interface_readback_status(nc_interface_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-IFRB-001
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
instance	nc_interface_sm_t*	common_config - Safety Engine config handle)
cc_config - CC sm initial config)
ifto_config - IFTO sm initial config)
ifrb_config - IFRB sm initial config)
fault_case - CC, IFTO, IFRB SM fault case)
cmd - User cmd to set fault or set safe mode)
interface_done - CC, IFTO, IFRB SM ipc connection)
[표 5] nc_set_interface_readback_status() Description
 
5.1.4.1.1. Control Flow Diagram
 
[그림 5] nc_set_interface_readback_status() 제어 흐름도
5.1.5. Unit Function
N/A
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-IFTO-001] IFTO_sm
IFTO_sm 유닛은 I2C, SPI, MMC에서 Time Out Error가 발생 시 SE로 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
MAX_CASE_IFTO_SM	Case Number of Time Out	2
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-IFTO-001] nc_set_interface_timeout_status()
Description	Write SW fault pre-defined as IFTO_SM.
Prototype	Error nc_set_interface_timeout_status(nc_interface_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-IFTO-001
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
instance	nc_interface_sm_t*	common_config - Safety Engine config handle
cc_config - CC sm initial config
ifto_config - IFTO sm initial config
ifrb_config - IFRB sm initial config
fault_case - CC, IFTO, IFRB SM fault case
cmd - User cmd to set fault or set safe mode
interface_done - CC, IFTO, IFRB SM ipc connection
[표 5] nc_set_interface_timeout_status() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] nc_set_interface_timeout_status() 제어 흐름도
5.1.5. Unit Function 
N/A
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-INI-001] ini
ini 유닛은 문자열을 Parsing 하는 기능들이 정의되어 있다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
MAX_SECTION	Max section count.	50
MAX_NAME	Max name count.	50
INI_START_COMMENT_PREFIXES	Start Prefixes	";#"
INI_INLINE_COMMENT_PREFIXES	Inline Prefixes	";"
INI_MAX_LINE	Max Line Value	200
INI_INITIAL_ALLOC	Alloc Value	200
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
5.1.4.1. [SUI-INI-001] ini_parse()
Description	Parse given INI-style file.
Prototype	int ini_parse(const char* filename, ini_handler handler, void* user)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
int	Success or Failure or Error Line Number
Parameter
Variable Name	Type	Spec. Designation
filename	const char*	File name
handler	ini_handler	Handler function
user	void*	User pointer
[표 5] ini_parse() Description

5.1.4.1.1. Control Flow Diagram
 
[그림 6] ini_parse() 제어 흐름도
5.1.4.2. [SUI-INI-002] ini_parse_string()
Description	Same as ini_parse(), but takes a zero-terminated string with the INI data instead of a file. Useful for parsing INI data from a network socket or already in memory.
Prototype	int ini_parse_string(const char* string, ini_handler handler, void* user)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
int	Line Number
Parameter
Variable Name	Type	Spec. Designation
string	const char*	String pointer
handler	ini_handler	Handler function
user	void*	User pointer
[표 6] ini_parse_string() Description

5.1.4.2.1. Control Flow Diagram
 
[그림 7] ini_parse_string() 제어 흐름도
5.1.4.3. [SUI-INI-003] ini_parse_file()
Description	Same as ini_parse(), but takes a FILE* instead of filename.
After completion, fileclose must be done by the caller.
Prototype	int ini_parse_file(FILE* file, ini_handler handler, void* user)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
int	Line Number
Parameter
Variable Name	Type	Spec. Designation
file	FILE*	File pointer
handler	ini_handler	Handler function
user	void*	User pointer
[표 7] ini_parse_file() Description

5.1.4.3.1. Control Flow Diagram
 
[그림 8] ini_parse_file() 제어 흐름도
5.1.4.4. [SUI-INI-004] ini_parse_stream()
Description	Same as ini_parse(), but takes an ini_reader function pointer instead of filename. Used for implementing custom or string-based I/O.
Prototype	int ini_parse_stream(ini_reader reader, void* stream, ini_handler handler, void* user)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
int	Line Number
Parameter
Variable Name	Type	Spec. Designation
reader	ini_reader	fgets-style reader function.
stream	void*	Stream pointer
handler	Ini_handler	Handler function
user	void*	User pointer
[표 8] ini_parse_stream() Description

5.1.4.4.1. Control Flow Diagram
 
[그림 9] ini_parse_stream() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-INI-001] rstrip()
Description	Strip whitespace chars off end of given string, in place.
Prototype	static char* rstrip(char* s)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
char*	String pointer
Parameter
Variable Name	Type	Spec. Designation
s	char*	String pointer
[표 9] rstrip() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 10] rstrip() 제어 흐름도
5.1.5.2. [SWF-INI-002] lskip()
Description	Return pointer to first non-whitespace char in given string.
Prototype	static char* lskip(char* s)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
char*	String pointer
Parameter
Variable Name	Type	Spec. Designation
s	char*	String pointer
[표 10] lskip() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 11] lskip() 제어 흐름도
5.1.5.3. [SWF-INI-003] find_chars_or_comment()
Description	Return pointer to first char (of chars) or inline comment in given string, or pointer to NUL at end of string if neither found. Inline comment must be prefixed by a whitespace character to register as a comment.
Prototype	static char* find_chars_or_comment(char* s, const char* chars)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
char*	Pointer to First Char
Parameter
Variable Name	Type	Spec. Designation
s	char*	String pointer
chars	const char*	Char pointer
[표 11] find_chars_or_comment() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 12] find_chars_or_comment() 제어 흐름도
5.1.5.4. [SWF-INI-004] strncpy0()
Description	Similar to strncpy, but ensures dest (size bytes) is NUL-terminated, and doesn't pad with NULs.
Prototype	static char* strncpy0(char* dest, const char* src, size_t size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
char*	Destination pointer
Parameter
Variable Name	Type	Spec. Designation
dest	char*	Destination buffer
src	const char*	Source buffer
size	size_t	Data size
[표 12] strncpy0() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 13] strncpy0() 제어 흐름도
5.1.5.5. [SWF-INI-005] ini_fgets()
Description	fgets function.
Prototype	static char *ini_fgets(char *str, int num, void *stream)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
char*	String Pointer
Parameter
Variable Name	Type	Spec. Designation
str	char*	Buffer pointer
num	int	Data size
stream	void*	File pointer
[표 13] ini_fgets() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 14] ini_fgets() 제어 흐름도
5.1.5.6. [SWF-INI-006] ini_reader_string()
Description	An ini_reader function to read the next line from a string buffer. This is the fgets() equivalent used by ini_parse_string().
Prototype	static char* ini_reader_string(char* str, int num, void* stream)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-INI-001
Return
Type	Spec. Designation
char*	Null or String Pointer
Parameter
Variable Name	Type	Spec. Designation
str	char*	String pointer
num	int	Data count
stream	void*	String context pointer
[표 14] ini_reader_string() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 15] ini_reader_string() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-LIN-001] lin_kernel_driver
lin_kernel_driver 유닛은 커널 부팅 시 LIN의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
SIZE_OF_EXPORTED_LIN_IOADDR_NAME	LIN IO Address Name	lin@xxxxxxxx:ioaddr
SIZE_OF_LIN_IRQ_NAME	LIN IRQ Name	lin@xxxxxxxx:irq
SIZE_OF_LIN_BROADCAST_BUS_SLEEP_MSG	LIN Bus Sleep Message	8
LIN_SYSCALL_RD_CMD_GET_CORE_CLOCK	Get Core Clock Command	0
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-LIN-001] nc_lin_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline lin_kernel_driver_t *nc_lin_kernel_get_instance(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
lin_kernel_driver_t*	Lin Instance Handle
Parameter
Variable Name	Type	Spec. Designation
dev_num	uint32_t	Channel Number
[표 5] nc_lin_kernel_get_instance() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_lin_kernel_get_instance() 제어 흐름도
5.1.5.2. [SWF-LIN-002] nc_lin_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_lin_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
EVENT	Event Handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 6] nc_lin_kernel_exception_handler() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_lin_kernel_exception_handler() 제어 흐름도
5.1.5.3. [SWF-LIN-003] nc_lin_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_lin_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 7] nc_lin_kernel_read_command() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_lin_kernel_read_command() 제어 흐름도
5.1.5.4. [SWF-LIN-004] nc_lin_kernel_probe()
Description	Performs hw resource initialization of lin at kernel-boot time.
Prototype	static Error nc_lin_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	char*	compatible name of device tree node
[표 8] nc_lin_kernel_probe() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_lin_kernel_probe() 제어 흐름도
5.2. [SWU-LIN-002] lin_driver
lin_driver 유닛은 User가 LIN의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 LIN 초기화, Data Read/Write이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 9] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
MAX_OF_TIMEOUT_VALUE	Timeout Maximum Value	0xffffffffffffffffUL
NUM_OF_ID_BITS_MASK	ID Bit Mask Number	6U
CASE_LIN_CRC_ERROR	Error Number of LIN CRC	0
SIZE_OF_EXPORTED_LIN_IOADDR_NAME	LIN IO Address Name	lin@xxxxxxxx:ioaddr
LIN_BROADCAST_BUS_SLEEP_ID	LIN Bus Sleep ID	0x3c
SIZE_OF_LIN_BROADCAST_BUS_SLEEP_MSG	Bus Sleep Message	8
LIN_SYSCALL_RD_CMD_GET_CORE_CLOCK	Get Core Clock Command	0
[표 10] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-LIN-001] nc_lin_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_lin_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 11] nc_lin_probe() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 10] nc_lin_probe() 제어 흐름도
5.2.4.2. [SUI-LIN-002] nc_lin_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_lin_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address of driver instance handle
command	Value	command value
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 12] nc_lin_ioctl() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 11] nc_lin_ioctl() 제어 흐름도
5.2.4.3. [SUI-LIN-003] nc_lin_ioctl_initialize()
Description	Perform initialization of lin.
Prototype	static Error nc_lin_ioctl_initialize(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or IllegalLength or ArgumentError
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 13] nc_lin_ioctl_initialize() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 12] nc_lin_ioctl_initialize() 제어 흐름도
5.2.4.4. [SUI-LIN-004] nc_lin_ioctl_deinitialize()
Description	Perform deinitialization of lin.
Prototype	static Error nc_lin_ioctl_deinitialize(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 14] nc_lin_ioctl_deinitialize() Description

5.2.4.4.1. Control Flow Diagram
 
[그림 13] nc_lin_ioctl_deinitialize() 제어 흐름도
5.2.4.5. [SUI-LIN-005] nc_lin_ioctl_master_write()
Description	Send data in master mode.
Prototype	static Error nc_lin_ioctl_master_write(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 15] nc_lin_ioctl_master_write() Description

5.2.4.5.1. Control Flow Diagram
 
[그림 14] nc_lin_ioctl_master_write() 제어 흐름도
5.2.4.6. [SUI-LIN-006] nc_lin_ioctl_master_read()
Description	Receive data in master mode.
Prototype	static Error nc_lin_ioctl_master_read(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 16] nc_lin_ioctl_master_read() Description

5.2.4.6.1. Control Flow Diagram
 
[그림 15] nc_lin_ioctl_master_read() 제어 흐름도
5.2.4.7. [SUI-LIN-007] nc_lin_ioctl_master_read_by_log_mode()
Description	Receive data in master mode by log-mode.
Prototype	static Error nc_lin_ioctl_master_read_by_log_mode(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or MustNotBeNULL or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 17] nc_lin_ioctl_master_read_by_log_mode() Description

5.2.4.7.1. Control Flow Diagram
 
[그림 16] nc_lin_ioctl_master_read_by_log_mode() 제어 흐름도
5.2.4.8. [SUI-LIN-008] nc_lin_ioctl_broadcast_bus_sleep()
Description	Broadcast sleep signal.
Prototype	static Error nc_lin_ioctl_broadcast_bus_sleep(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 18] nc_lin_ioctl_broadcast_bus_sleep() Description

5.2.4.8.1. Control Flow Diagram
 
[그림 17] nc_lin_ioctl_broadcast_bus_sleep() 제어 흐름도
5.2.4.9. [SUI-LIN-009] nc_lin_ioctl_wake_up_bus()
Description	Broadcast wake-up signal.
Prototype	static Error nc_lin_ioctl_wake_up_bus(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 19] nc_lin_ioctl_wake_up_bus() Description

5.2.4.9.1. Control Flow Diagram
 
[그림 18] nc_lin_ioctl_wake_up_bus() 제어 흐름도
5.2.4.10. [SUI-LIN-010] nc_lin_ioctl_wait_for_ready()
Description	Wait for a response from the lin bus and return response slave id.
Prototype	static Error nc_lin_ioctl_wait_for_ready(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 20] nc_lin_ioctl_wait_for_ready() Description

5.2.4.10.1. Control Flow Diagram
 
[그림 19] nc_lin_ioctl_wait_for_ready() 제어 흐름도
5.2.4.11. [SUI-LIN-011] nc_lin_ioctl_slave_write()
Description	Send data in slave mode.
Prototype	static Error nc_lin_ioctl_slave_write(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 21] nc_lin_ioctl_slave_write() Description

5.2.4.11.1. Control Flow Diagram
 
[그림 20] nc_lin_ioctl_slave_write() 제어 흐름도
5.2.4.12. [SUI-LIN-012] nc_lin_ioctl_slave_read()
Description	Receive data in slave mode.
Prototype	static Error nc_lin_ioctl_slave_read(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 22] nc_lin_ioctl_slave_read() Description
5.2.4.12.1. Control Flow Diagram
 
[그림 21] nc_lin_ioctl_slave_read() 제어 흐름도
 
5.2.4.13. [SUI-LIN-013] nc_lin_ioctl_slave_read_by_log_mode()
Description	Receive data in slave mode by log-mode.
Prototype	static Error nc_lin_ioctl_slave_read_by_log_mode(nc_lin_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or MustNotBeNULL or IllegalLength 
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 23] nc_lin_ioctl_slave_read_by_log_mode() Description
5.2.4.13.1. Control Flow Diagram
 
[그림 22] nc_lin_ioctl_slave_read_by_log_mode() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-LIN-005] nc_lin_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_lin_driver_t *nc_lin_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
nc_lin_driver_t*	Lin Driver Instance
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel number
[표 24] nc_lin_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 23] nc_lin_get_instance() 제어 흐름도
5.2.5.2. [SWF-LIN-006] nc_lin_master_initialize()
Description	Perform lin driver initialization in master mode.
Prototype	static Error nc_lin_master_initialize(nc_lin_driver_t *instance, nc_lin_init_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or ArgumentError or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	nc_lin_init_param_t*	initialization parameter
[표 25] nc_lin_master_initialize() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 24] nc_lin_master_initialize() 제어 흐름도
5.2.5.3. [SWF-LIN-007] nc_lin_slave_initialize()
Description	Perform lin driver initialization in slave mode.
Prototype	static Error nc_lin_slave_initialize(nc_lin_driver_t *instance, nc_lin_init_param_t *param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or ArgumentError or Failue
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
param	nc_lin_init_param_t*	initialization parameter
[표 26] nc_lin_slave_initialize() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 25] nc_lin_slave_initialize() 제어 흐름도
5.2.5.4. [SWF-LIN-008] nc_lin_deinitialize()
Description	Deinitializes the lin driver.
Prototype	static void nc_lin_deinitialize(nc_lin_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
[표 27] nc_lin_deinitialize() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 26] nc_lin_deinitialize() 제어 흐름도
5.2.5.5. [SWF-LIN-009] nc_lin_set_identifier()
Description	Set the ID of the lin device.
Prototype	static Error nc_lin_set_identifier(nc_lin_driver_t *instance, uint32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
id	uint32_t	id-value
[표 28] nc_lin_set_identifier() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 27] nc_lin_set_identifier() 제어 흐름도
5.2.5.6. [SWF-LIN-010] nc_lin_set_baudrate()
Description	Set the baudrate of the lin device.
Prototype	static Error nc_lin_set_baudrate(nc_lin_driver_t *instance, uint32_t baudrate)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
baudrate	uint32_t	baudrate value
[표 29] nc_lin_set_baudrate() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 28] nc_lin_set_baudrate() 제어 흐름도
5.2.5.7. [SWF-LIN-011] nc_lin_set_header_delay()
Description	Perform header transmission delay time settings.
Prototype	static Error nc_lin_set_header_delay(nc_lin_driver_t *instance, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
timeout_us	size_t	timeout value
[표 30] nc_lin_set_header_delay() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 29] nc_lin_set_header_delay() 제어 흐름도
5.2.5.8. [SWF-LIN-012] nc_lin_master_write()
Description	Send data in master mode.
Prototype	static Error nc_lin_master_write(nc_lin_driver_t *instance, uint32_t id, uint8_t *buf, size_t len, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
id	uint32_t	slave id
buf	uint8_t*	data buffer
len	size_t	data size
timeout_us	size_t	timeout value
[표 31] nc_lin_master_write() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 30] nc_lin_master_write() 제어 흐름도
5.2.5.9. [SWF-LIN-013] nc_lin_master_read()
Description	Receive data in master mode.
Prototype	static Error nc_lin_master_read(nc_lin_driver_t *instance, uint32_t id, uint8_t *buf, size_t len, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
id	uint32_t	slave id
buf	uint8_t*	data buffer
len	size_t	data size
timeout_us	size_t	timeout value
[표 32] nc_lin_master_read() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 31] nc_lin_master_read() 제어 흐름도
5.2.5.10. [SWF-LIN-014] nc_lin_master_read_by_log_mode()
Description	Receive data in master mode by log-mode.
Prototype	static Error nc_lin_master_read_by_log_mode(nc_lin_driver_t *instance, uint32_t id, uint8_t *buf, size_t len, size_t *processed_len, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
id	uint32_t	slave id
buf	uint8_t*	data buffer
len	size_t	data size
processed_len	size_t*	processed length
timeout_us	size_t	timeout value
[표 33] nc_lin_master_read_by_log_mode() Description

5.2.5.10.1. Control Flow Diagram
 
[그림 32] nc_lin_master_read_by_log_mode() 제어 흐름도
5.2.5.11. [SWF-LIN-015] nc_lin_slave_write()
Description	Send data in slave mode.
Prototype	static Error nc_lin_slave_write(nc_lin_driver_t *instance, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
buf	uint8_t*	data buffer
len	size_t	data size
[표 34] nc_lin_slave_write() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 33] nc_lin_slave_write() 제어 흐름도
5.2.5.12. [SWF-LIN-016] nc_lin_slave_read()
Description	Receive data in slave mode.
Prototype	static Error nc_lin_slave_read(nc_lin_driver_t *instance, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
buf	uint8_t*	data buffer
len	size_t	data size
[표 35] nc_lin_slave_read() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 34] nc_lin_slave_read() 제어 흐름도
5.2.5.13. [SWF-LIN-017] nc_lin_slave_read_by_log_mode()
Description	Receive data in slave mode by log-mode.
Prototype	static Error nc_lin_slave_read_by_log_mode(nc_lin_driver_t *instance, uint8_t *buf, size_t len, size_t *processed_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure or LengthTooLarge or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
buf	uint8_t*	data buffer
len	size_t	data size
processed_len	size_t*	processed size
[표 36] nc_lin_slave_read_by_log_mode() Description
5.2.5.13.1. Control Flow Diagram
 
[그림 35] nc_lin_slave_read_by_log_mode() 제어 흐름도
5.2.5.14. [SWF-LIN-018] nc_lin_wake_up_bus()
Description	Broadcasts a wake-up signal on the lin bus.
Prototype	static Error nc_lin_wake_up_bus(nc_lin_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
[표 37] nc_lin_wake_up_bus() Description

5.2.5.14.1. Control Flow Diagram
 
[그림 36] nc_lin_wake_up_bus() 제어 흐름도
5.2.5.15. [SWF-LIN-019] nc_lin_broadcast_bus_sleep()
Description	Broadcast a sleep signal on the lin bus.
Prototype	static Error nc_lin_broadcast_bus_sleep(nc_lin_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error driver instance handle
[표 38] nc_lin_broadcast_bus_sleep() Description
5.2.5.15.1. Control Flow Diagram
 
[그림 37] nc_lin_broadcast_bus_sleep() 제어 흐름도
5.2.5.16. [SWF-LIN-020] nc_lin_wait_for_ready()
Description	Wait for a response from the lin bus.
Prototype	static Error nc_lin_wait_for_ready(nc_lin_driver_t *instance, uint32_t intr_mask, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
intr_mask	uint32_t	interrupt mask
timeout_us	size_t	timeout value
[표 39] nc_lin_wait_for_ready() Description
5.2.5.16.1. Control Flow Diagram
 
[그림 38] nc_lin_wait_for_ready() 제어 흐름도
5.2.5.17. [SWF-LIN-021] nc_lin_wait_for_ready_without_error_checking()
Description	Wait for a response from the lin bus without error checking.
Prototype	static Error nc_lin_wait_for_ready_without_error_checking(nc_lin_driver_t *instance, uint32_t intr_mask, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
intr_mask	uint32_t	interrupt mask
timeout_us	size_t	timeout value
[표 40] nc_lin_wait_for_ready_without_error_checking() Description

5.2.5.17.1. Control Flow Diagram
 
[그림 39] nc_lin_wait_for_ready_without_error_checking() 제어 흐름도
5.2.5.18. [SWF-LIN-022] nc_lin_master_send_header()
Description	Send lin header in master mode
Prototype	static Error nc_lin_master_send_header(nc_lin_driver_t *instance, uint32_t id, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
id	uint32_t	slave id
timeout_us	size_t	timeout value
[표 41] nc_lin_master_send_header() Description
5.2.5.18.1. Control Flow Diagram
 
[그림 40] nc_lin_master_send_header() 제어 흐름도
5.2.5.19. [SWF-LIN-023] nc_lin_master_send_abort()
Description	Send abort signal to lin bus in master-mode.
Prototype	static Error nc_lin_master_send_abort(nc_lin_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
[표 42] nc_lin_master_send_abort() Description
5.2.5.19.1. Control Flow Diagram
 
[그림 41] nc_lin_master_send_abort() 제어 흐름도
5.2.5.20. [SWF-LIN-024] nc_lin_master_send_data()
Description	Send data in master mode.
Prototype	static Error nc_lin_master_send_data(nc_lin_driver_t *instance, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
buf	uint8_t*	data buffer
len	size_t	data size
[표 43] nc_lin_master_send_data() Description
5.2.5.20.1. Control Flow Diagram
 
[그림 42] nc_lin_master_send_data() 제어 흐름도
5.2.5.21. [SWF-LIN-025] nc_lin_master_recv_data()
Description	Receive data in master mode.
Prototype	static Error nc_lin_master_recv_data(nc_lin_driver_t *instance, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
buf	uint8_t*	data buffer
len	size_t	data size
[표 44] nc_lin_master_recv_data() Description
5.2.5.21.1. Control Flow Diagram
 
[그림 43] nc_lin_master_recv_data() 제어 흐름도
5.2.5.22. [SWF-LIN-026] nc_lin_master_recv_data_by_log_mode()
Description	Receive data in master mode by log-mode.
Prototype	static Error nc_lin_master_recv_data_by_log_mode(nc_lin_driver_t *instance, uint8_t *buf, size_t len, size_t *processed_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_lin_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of lin hw register
is_master_mode - master mode flag
is_init_done - initialization flag
checksum_type_mask - checksum type mask value
last_lsr - register backup value of status
last_ler - register backup value of error
buf	uint8_t*	data buffer
len	size_t	data size
processed_len	size_t*	processed size
[표 45] nc_lin_master_recv_data_by_log_mode() Description
 

5.2.5.22.1. Control Flow Diagram
 
[그림 44] nc_lin_master_recv_data_by_log_mode() 제어 흐름도
5.2.5.23. [SWF-LIN-027] nc_lin_verify_classic_checksum()
Description	Verify checksum of lin classic type and return result.
Prototype	static Error nc_lin_verify_classic_checksum(uint32_t checksum, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalCounterValue
Parameter
Variable Name	Type	Spec. Designation
checksum	uint32_t	received checksum value
buf	uint8_t*	data buffer
len	size_t	data size
[표 46] nc_lin_verify_classic_checksum() Description

5.2.5.23.1. Control Flow Diagram
 
[그림 45] nc_lin_verify_classic_checksum() 제어 흐름도
5.2.5.24. [SWF-LIN-028] nc_lin_verify_enhanced_checksum()
Description	Verify checksum of lin enhanced type and return result.
Prototype	static Error nc_lin_verify_enhanced_checksum(uint32_t checksum, uint32_t lin_id, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002
Return
Type	Spec. Designation
Error	Success or IllegalCounterValue
Parameter
Variable Name	Type	Spec. Designation
checksum	uint32_t	received checksum value
lin_id	uint32_t	slave id
buf	uint8_t*	data buffer
len	size_t	data size
[표 47] nc_lin_verify_enhanced_checksum() Description
5.2.5.24.1. Control Flow Diagram
 
[그림 46] nc_lin_verify_enhanced_checksum() 제어 흐름도
5.2.5.25. [SWF-LIN-029] nc_lin_get_safety_alarm_object()
Description	Return Safety Alarm Object.
Prototype	static inline Connection nc_lin_get_safety_alarm_object(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002, SSR-SoC-CC-001
Return
Type	Spec. Designation
Connection	Safety_alarm_object
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 48] nc_lin_get_safety_alarm_object() Description
5.2.5.25.1. Control Flow Diagram
 
[그림 47] nc_lin_get_safety_alarm_object() 제어 흐름도
5.2.5.26. [SWF-LIN-030] nc_lin_to_safety_mechanism()
Description	Send Alarm to Safety Mechanism.
Prototype	static void nc_lin_to_safety_mechanism(Address alam_code)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-LIN-002, SSR-SoC-CC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
alam_code	Address	alam-code value
[표 49] nc_lin_to_safety_mechanism() Description
5.2.5.26.1. Control Flow Diagram
 
[그림 48] nc_lin_to_safety_mechanism() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-MI-001] MI_sm
MI_sm은 Memory integrity check를 하여 Error가 발생하면 SE에 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-MI-001] memory_integrity_check_task()
Description	Check memory integrity.
Prototype	Value memory_integrity_check_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-MI-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 5] memory_integrity_check_task() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] memory_integrity_check_task() 제어 흐름도
5.1.5. Unit Function 
5.1.5.1. [SWF-MI-001] nc_set_memory_integrity_check_offset()
Description	Set MI check offset.
Prototype	static void nc_set_memory_integrity_check_offset(nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-MI-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_state_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 6] nc_set_memory_integrity_check_offset() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_set_memory_integrity_check_offset() 제어 흐름도
5.1.5.2. [SWF-MI-002] nc_get_memory_integrity_mask_value()
Description	Get MI mask value.
Prototype	static void nc_get_memory_integrity_mask_value(nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-MI-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
offset_instance	nc_safety_engine_offset_t*	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_state_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
[표 7] nc_get_memory_integrity_mask_value() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_get_memory_integrity_mask_value() 제어 흐름도
5.1.5.3. [SWF-MI-003] nc_start_memory_integrity_check()
Description	Start MI check.
Prototype	static void nc_start_memory_integrity_check(nc_safety_engine_config_t *instance, nc_safety_engine_offset_t mem_offset_mask, Value mask_value)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-MI-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_config_t*	safety engine instance
mem_offset_mask	nc_safety_engine_offset_t	mem_ecc_ctrl_offset
fault_mask_offset - safety_engine fault mask offset
clk_monitor_ctrl - safety_engine clock monitor control offset
irq_offset - safety_engine fault irq mask offset
clear_offset - safety_engine fault clear mask offset
fault_state_offset - safety_engine fault status mask offset
number_of_ip - number of component
mask_value - clock monitoring or fault mask value
mask_value	Value	Mask value
[표 8] nc_start_memory_integrity_check() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_start_memory_integrity_check() 제어 흐름도
5.1.5.4. [SWF-MI-004] nc_check_memory_integrity()
Description	Memory integrity check.
Prototype	static Error nc_check_memory_integrity(nc_memory_integrity_sm_t *fault_param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-MI-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
fault_param	nc_memory_integrity_sm_t*	common_config - Safety Engine config handle
mi_config - MI initial config
[표 9] nc_check_memory_integrity() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_check_memory_integrity() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-MMC-001] mmc_kernel_driver
mmc_kernel_driver 유닛은 커널 부팅 시 MMC의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-MMC-001] nc_mmc_kernel_get_instance()
Description	Get kernel mmc instance.
Prototype	static inline mmc_kernel_driver_t *nc_mmc_kernel_get_instance(uint32_t devnum)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
mmc_kernel_driver_t*	mmc instance handle
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	device number
[표 5] nc_mmc_kernel_get_instanc() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 7] nc_mmc_kernel_get_instance() 제어 흐름도
5.1.5.2. [SWF-MMC-002] nc_mmc_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_mmc_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
EVENT	Event handle
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 6] nc_mmc_kernel_exception_handler() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 8] nc_mmc_kernel_exception_handler() 제어 흐름도
5.1.5.3. [SWF-MMC-003] nc_mmc_kernel_get_sdma_name()
Description	Get kernel mmc sdma name.
Prototype	static inline const char *nc_mmc_kernel_get_sdma_name(uint32_t devnum)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
char*	mmc sdma name
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	device number
[표 7] nc_mmc_kernel_get_sdma_name() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 9] nc_mmc_kernel_get_sdma_name() 제어 흐름도
5.1.5.4. [SWF-MMC-004] nc_mmc_kernel_get_dev_name()
Description	Get kernel mmc device name.
Prototype	static inline const char *nc_mmc_kernel_get_dev_name(uint32_t devnum)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
const char*	mmc device name
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	device number
[표 8] nc_mmc_kernel_get_dev_name() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 10] nc_mmc_kernel_get_dev_name() 제어 흐름도
5.1.5.5. [SWF-MMC-005] nc_mmc_kernel_get_ioaddr_name()
Description	Get kernel mmc ioaddr name.
Prototype	static inline const char *nc_mmc_kernel_get_ioaddr_name(uint32_t devnum)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
const char*	mmc ioaddr name
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	device number
[표 9] nc_mmc_kernel_get_ioaddr_name() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 11] nc_mmc_kernel_get_ioaddr_name() 제어 흐름도
5.1.5.6. [SWF-MMC-006] nc_mmc_kernel_get_irq_name()
Description	Get kernel mmc irq name.
Prototype	static inline const char *nc_mmc_kernel_get_irq_name(uint32_t devnum)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
const char*	mmc irq name
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	device number
[표 10] nc_mmc_kernel_get_irq_name() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 12] nc_mmc_kernel_get_irq_name() 제어 흐름도

5.1.5.7. [SWF-MMC-007] nc_mmc_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_mmc_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 11] nc_mmc_kernel_read_comman() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 13] nc_mmc_kernel_read_command() 제어 흐름도
5.1.5.8. [SWF-MMC-008] nc_mmc_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceRegister function from user-space.
Prototype	static Error nc_mmc_kernel_write_command(IODeviceVector iod, Value command, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber or ArgumentError
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
val	Value	architecture-value
[표 12] nc_mmc_kernel_write_command() Description
5.1.5.8.1. Control Flow Diagram
 
[그림 14] nc_mmc_kernel_write_command() 제어 흐름도
5.1.5.9. [SWF-MMC-009] nc_mmc_kernel_probe()
Description	Performs hw resource initialization of mmc at kernel-boot time.
Prototype	static Error nc_mmc_kernel_probe(DevTree_Node node, const char *match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 13] nc_mmc_kernel_probe() Description
5.1.5.9.1. Control Flow Diagram
 
[그림 15] nc_mmc_kernel_probe() 제어 흐름도
5.2. [SWU-MMC-002] mmc_ driver
mmc_driver 유닛은 User가 MMC의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 MMC 초기화, Set Bus Speed, Send Command, Data Transfer이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 14] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
QUIRK_NO_1_8_V	NO 1.8V	empty
QUIRK_BROKEN_PROGRAMMABLE_CLOCK	BROKEN PROGRAMMABLE CLOCK	empty
DEFAULT_BUS_TIMEOUT	Timeout ms value	100
DEFAULT_CLK_STABLE_TIMEOUT	Timeout ms value	100
DEFAULT_INTR_STS_TIMEOUT	Timeout ms value	2000
DEFAULT_SW_RESET_TIMEOUT	Timeout ms value	200
DEFAULT_TRANSFER_TIMEOUT	Timeout ms value	10000
DEFAULT_MMC_LOW_SPEED	MMC Low speed value	400kHz
DEFAULT_MMC_HIGH_SPEED	MMC High speed value	50MHz
MMC_CALL_TRACE	N/A	empty
NUM_OF_STATFS_ELEM	Statfs element number	10
[표 15] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-MMC-001] nc_mmc_probe()
Description	Initialize mmc
Prototype	static Error nc_mmc_probe(SDIOCard *mmc, const char *io_device_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
io_device_name	const char*	io device name
[표 16] nc_mmc_probe() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 16] nc_mmc_probe() 제어 흐름도
5.2.4.2. [SUI-MMC-002] nc_mmc_send_command()
Description	Send mmc command
Prototype	static Error nc_mmc_send_command(SDIOCard *mmc, uint8_t cmd, uint8_t resp_type_num, uint8_t *resp, uint8_t *arg, Boolean is_deselect)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or ResourceNotAvailable
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
cmd	uint8_t	command
resp_type_num	uint8_t	response type
resp	uint8_t*	response
arg	uint8_t*	argument
is_deselect	Boolean	is deselect
[표 17] nc_mmc_send_command() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 17] nc_mmc_send_command() 제어 흐름도
5.2.4.3. [SUI-MMC-003] nc_mmc_dma_transfer()
Description	transfer mmc dma command
Prototype	static Error nc_mmc_dma_transfer(SDIOCard *mmc, uint8_t cmd, uint8_t *resp, uint8_t resp_type_num, uint8_t *arg, Boolean is_write, Boolean is_send_stop, Buffer *ghs_buffer, uint16_t blocksize, uint16_t blockcount, Value flags)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut or ResourceNotAvailable
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
Cmd	uint8_t	command
Resp	uint8_t*	response
resp_type_num	uint8_t	response type
arg	uint8_t*	argument
is_write	Boolean	is write
is_send_stop	Boolean	is send stop
ghs_buffer	Buffer*	ghs buffer
blocksize	uint16_t	block size
blockcount	uint16_t	block count
flags	Value	flag value
[표 18] nc_mmc_dma_transfer() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 18] nc_mmc_dma_transfer() 제어 흐름도
5.2.4.4. [SUI-MMC-004] nc_mmc_set_bus_speed()
Description	Set mmc bus speed
Prototype	static Error nc_mmc_set_bus_speed(SDIOCard *mmc, uint32_t freq)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
freq	uint32_t	frequency
[표 19] nc_mmc_set_bus_speed() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 19] nc_mmc_set_bus_speed() 제어 흐름도
5.2.4.5. [SUI-MMC-005] nc_mmc_set_low_bus_speed()
Description	Set mmc low bus speed
Prototype	static Error nc_mmc_set_low_bus_speed(SDIOCard *mmc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 20] nc_mmc_set_low_bus_speed() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 20] nc_mmc_set_low_bus_speed() 제어 흐름도
5.2.4.6. [SUI-MMC-006] nc_mmc_set_high_bus_speed()
Description	Set mmc high bus speed
Prototype	static Error nc_mmc_set_high_bus_speed(SDIOCard *mmc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 21] nc_mmc_set_high_bus_speed() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 21] nc_mmc_set_high_bus_speed() 제어 흐름도
5.2.4.7. [SUI-MMC-007] nc_mmc_set_high_bus_speed_preset()
Description	Set mmc high bus speed
Prototype	static Error nc_mmc_set_high_bus_speed_preset(SDIOCard *mmc, uint32_t freq)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
freq	uint32_t	frequency
[표 22] nc_mmc_set_high_bus_speed_preset() Description
5.2.4.7.1. Control Flow Diagram
 
[그림 22] nc_mmc_set_high_bus_speed_preset() 제어 흐름도
5.2.4.8. [SUI-MMC-008] nc_mmc_reset()
Description	Reset mmc
Prototype	static void nc_mmc_reset(SDIOCard *mmc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 23] nc_mmc_reset() Description
5.2.4.8.1. Control Flow Diagram
 
[그림 23] nc_mmc_reset() 제어 흐름도
5.2.4.9. [SUI-MMC-009] nc_mmc_bus_initialize()
Description	Initialize bus
Prototype	static Error nc_mmc_bus_initialize(SDIOCard *mmc, uint8_t init_mem)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 24] nc_mmc_bus_initialize() Description
5.2.4.9.1. Control Flow Diagram
 
[그림 24] nc_mmc_bus_initialize() 제어 흐름도
5.2.4.10. [SUI-MMC-010] nc_mmc_mem_initialize()
Description	Initialize memory
Prototype	static Error nc_mmc_mem_initialize(SDIOCard *mmc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 25] nc_mmc_mem_initialize() Description
5.2.4.10.1. Control Flow Diagram
 
[그림 25] nc_mmc_mem_initialize() 제어 흐름도
5.2.4.11. [SUI-MMC-011] nc_mmc_inserted()
Description	Check mmc is inserted or not
Prototype	static Boolean nc_mmc_inserted(SDIOCard *mmc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 26] nc_mmc_inserted() Description
5.2.4.11.1. Control Flow Diagram
 
[그림 26] nc_mmc_inserted() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-MMC-010] nc_mmc_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline mmc_host_driver_t *nc_mmc_get_instance(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
mmc_host_driver_t*	mmc instance
Parameter
Variable Name	Type	Spec. Designation
dev_num	uint32_t	channel-number
[표 27] nc_mmc_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 27] nc_mmc_get_instance() 제어 흐름도
5.2.5.2. [SWF-MMC-011] nc_mmc_is_masked()
Description	Mask mmc data
Prototype	static inline Boolean nc_mmc_is_masked(uint32_t caps, uint32_t mask)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
caps	uint32_t	capabilities
mask	uint32_t	mask-data
[표 28] nc_mmc_is_masked() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 28] nc_mmc_is_masked() 제어 흐름도
5.2.5.3. [SWF-MMC-012] nc_mmc_get_voltage_masking()
Description	Get mmc voltage data
Prototype	static inline uint32_t nc_mmc_get_voltage_masking(uint32_t caps, uint32_t mask)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
uint32_t	voltage data
Parameter
Variable Name	Type	Spec. Designation
caps	uint32_t	capabilities
mask	uint32_t	mask-data
[표 29] nc_mmc_get_voltage_masking() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 29] nc_mmc_get_voltage_masking() 제어 흐름도
5.2.5.4. [SWF-MMC-013] nc_mmc_get_buscaps_masking()
Description	Get mmc buscaps data
Prototype	static inline uint32_t nc_mmc_get_buscaps_masking(uint32_t caps, uint32_t mask)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
uint32_t	mask-val
Parameter
Variable Name	Type	Spec. Designation
caps	uint32_t	capabilities
mask	uint32_t	mask-data
[표 30] nc_mmc_get_buscaps_masking() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 30] nc_mmc_get_buscaps_masking() 제어 흐름도
5.2.5.5. [SWF-MMC-014] nc_mmc_irq_entry()
Description	Performs interrupt service routine of user-space
Prototype	static Value nc_mmc_irq_entry(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	mmc-instance handle
[표 31] nc_mmc_irq_entry() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 31] nc_mmc_irq_entry() 제어 흐름도
5.2.5.6. [SWF-MMC-015] nc_mmc_check_controller_spec()
Description	This function checks the capabilities of the controller.
Prototype	static void nc_mmc_check_controller_spec(mmc_host_driver_t *host)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	mmc-instance handle
[표 32] nc_mmc_check_controller_spec() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 32] nc_mmc_check_controller_spec() 제어 흐름도
5.2.5.7. [SWF-MMC-016] nc_mmc_manipulate_controller_spec()
Description	Manipulate mmc controller spec.
Prototype	static void nc_mmc_manipulate_controller_spec(mmc_host_driver_t *host)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	mmc-instance handle
[표 33] nc_mmc_manipulate_controller_spec() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 33] nc_mmc_manipulate_controller_spec() 제어 흐름도
5.2.5.8. [SWF-MMC-017] nc_mmc_wait_for_pstate()
Description	Wait for the specified mask of the pstate to be turned off.
Prototype	static Error nc_mmc_wait_for_pstate(mmc_host_driver_t *host, uint32_t mask, uint32_t timeout_ms)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	mmc-instance handle
mask	uint32_t	mask
timeout_ms	uint32_t	timeout
[표 34] nc_mmc_wait_for_pstate() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 34] nc_mmc_wait_for_pstate() 제어 흐름도
5.2.5.9. [SWF-MMC-018] nc_mmc_wait_for_interrupt_status()
Description	Wait mmc interrupt status.
Prototype	static Error nc_mmc_wait_for_interrupt_status(mmc_host_driver_t *host, uint32_t mask, uint32_t timeout_ms)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or Failure or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
mask	uint32_t	mask
timeout_ms	uint32_t	timeout
[표 35] nc_mmc_wait_for_interrupt_status() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 35] nc_mmc_wait_for_interrupt_status() 제어 흐름도
5.2.5.10. [SWF-MMC-019] nc_mmc_wait_for_clock_stable()
Description	Wait mmc clock stable.
Prototype	static Error nc_mmc_wait_for_clock_stable(mmc_host_driver_t *host, uint32_t timeout_ms)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
timeout_ms	uint32_t	timeout
[표 36] nc_mmc_wait_for_clock_stable() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 36] nc_mmc_wait_for_clock_stable() 제어 흐름도
5.2.5.11. [SWF-MMC-020] nc_mmc_set_clock()
Description	Set mmc clock.
Prototype	static Error nc_mmc_set_clock(mmc_host_driver_t *host, uint32_t clock_freq)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
clock_freq	uint32_t	clock frequency
[표 37] nc_mmc_set_clock() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 37] nc_mmc_set_clock() 제어 흐름도
5.2.5.12. [SWF-MMC-021] nc_mmc_calculate_clock_divider()
Description	Calculate mmc clock divider.
Prototype	static uint32_t nc_mmc_calculate_clock_divider(mmc_host_driver_t *host, uint32_t clock_freq)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
uint32_t	Clock divider value
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
clock_freq	uint32_t	clock frequency
[표 38] nc_mmc_calculate_clock_divider() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 38] nc_mmc_calculate_clock_divider() 제어 흐름도
5.2.5.13. [SWF-MMC-022] nc_mmc_common_send_command()
Description	Send mmc command & data.
Prototype	static Error nc_mmc_common_send_command(mmc_host_driver_t *host, mmc_cmd cmd, mmc_data data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or Failure or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
cmd	mmc_cmd	command
data	mmc_data	data
[표 39] nc_mmc_common_send_command() Description
5.2.5.13.1. Control Flow Diagram
 
[그림 39] nc_mmc_common_send_command() 제어 흐름도
5.2.5.14. [SWF-MMC-023] nc_mmc_set_bus_width()
Description	Set mmc bus width.
Prototype	static void nc_mmc_set_bus_width(mmc_host_driver_t *host)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
[표 40] nc_mmc_set_bus_width() Description
5.2.5.14.1. Control Flow Diagram
 
[그림 40] nc_mmc_set_bus_width() 제어 흐름도
5.2.5.15. [SWF-MMC-024] nc_mmc_make_command_options_and_interrupt_masking()
Description	Make mmc command option and interrupt masking.
Prototype	static void nc_mmc_make_command_options_and_interrupt_masking(  mmc_cmd cmd, mmc_data data, uint16_t *command_options, uint32_t *interrupt_masking)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
cmd	mmc_cmd	command
data	mmc_data	data
command_options	uint16_t*	command option
interrupt_masking	uint32_t*	interrupt masking
[표 41] nc_mmc_make_command_options_and_interrupt_masking() Description
5.2.5.15.1. Control Flow Diagramd
 
[그림 41] nc_mmc_make_command_options_and_interrupt_masking() 제어 흐름도
5.2.5.16. [SWF-MMC-025] nc_mmc_make_xfer_mode_options()
Description	Set xfer mode
Prototype	static uint32_t nc_mmc_make_xfer_mode_options(mmc_host_driver_t *host, mmc_data data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
uint32_t	xfer_mode_options
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
data	mmc_data	data-set
[표 42] nc_mmc_make_xfer_mode_options() Description
5.2.5.16.1. Control Flow Diagram
 
[그림 42] nc_mmc_make_xfer_mode_options() 제어 흐름도
5.2.5.17. [SWF-MMC-026] nc_mmc_prepare_sdma()
Description	Prepare sdma
Prototype	static void nc_mmc_prepare_sdma(mmc_host_driver_t *host, mmc_data data, uint32_t trans_bytes)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
data	mmc_data	data
trans_bytes	uint32_t	byte
[표 43] nc_mmc_prepare_sdma() Description
5.2.5.17.1. Control Flow Diagram
 
[그림 43] nc_mmc_prepare_sdma() 제어 흐름도
5.2.5.18. [SWF-MMC-027] nc_mmc_read_response_data()
Description	Read mmc response data
Prototype	static void nc_mmc_read_response_data(mmc_host_driver_t *host, mmc_cmd cmd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
cmd	mmc_cmd	command
[표 44] nc_mmc_read_response_data() Description
5.2.5.18.1. Control Flow Diagram
 
[그림 44] nc_mmc_read_response_data() 제어 흐름도
5.2.5.19. [SWF-MMC-028] nc_mmc_transfer_data()
Description	Transfer mmc data
Prototype	static Error nc_mmc_transfer_data(mmc_host_driver_t *host, mmc_data data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or Failure or OperationTimeOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
data	mmc_data	data
[표 45] nc_mmc_transfer_data() Description
5.2.5.19.1. Control Flow Diagram
 
[그림 45] nc_mmc_transfer_data() 제어 흐름도
5.2.5.20. [SWF-MMC-029] nc_mmc_transfer_by_polling()
Description	Transfer data by polling
Prototype	static void nc_mmc_transfer_by_polling(mmc_host_driver_t *host, mmc_data data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
data	mmc_data	data
[표 46] nc_mmc_transfer_by_polling() Description
5.2.5.20.1. Control Flow Diagram
 
[그림 46] nc_mmc_transfer_by_polling() 제어 흐름도
5.2.5.21. [SWF-MMC-030] nc_mmc_show_interrupt_status_error()
Description	Show interrupt status error
Prototype	static void nc_mmc_show_interrupt_status_error(uint32_t interrupt_status, const char *at)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
interrupt_status	uint32_t	interrupt status
at	const char*	location of call
[표 47] nc_mmc_show_interrupt_status_error() Description
5.2.5.21.1. Control Flow Diagram
 
[그림 47] nc_mmc_show_interrupt_status_error() 제어 흐름도
5.2.5.22. [SWF-MMC-031] nc_mmc_get_ioaddr_name()
Description	Returns the name of the io-address-resource name corresponding to the input ID.
Prototype	static inline const char *nc_mmc_get_ioaddr_name(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
const char*	mmc device name
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	channel-number
[표 48] nc_mmc_get_ioaddr_name() Description
5.2.5.22.1. Control Flow Diagram
 
[그림 48] nc_mmc_get_ioaddr_name() 제어 흐름도
5.2.5.23. [SWF-MMC-032] nc_mmc_get_sdma_buffer_name()
Description	Returns the name of the sdma-cma-buffer-resource name corresponding to the input ID.
Prototype	static inline const char *nc_mmc_get_sdma_buffer_name(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
const char*	mmc device name
Parameter
Variable Name	Type	Spec. Designation
devnum	uint32_t	channel-number
[표 49] nc_mmc_get_sdma_buffer_name() Description
5.2.5.23.1. Control Flow Diagram
 
[그림 49] nc_mmc_get_sdma_buffer_name() 제어 흐름도
5.2.5.24. [SWF-MMC-033] nc_mmc_get_safety_alarm_object()
Description	Return Safety Alarm Object.
Prototype	static inline Connection nc_mmc_get_safety_alarm_object(void)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CC-001, SSR-SoC-IFTO-001, SR-SoC-MMC-002
Return
Type	Spec. Designation
Connection	Safety alarm object
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 50] nc_mmc_get_safety_alarm_object() Description
5.2.5.24.1. Control Flow Diagram
 
[그림 50] nc_mmc_get_safety_alarm_object() 제어 흐름도
5.2.5.25. [SWF-MMC-034] nc_mmc_to_safety_mechanism()
Description	Send Alarm to Safety Mechanism.
Prototype	static void nc_mmc_to_safety_mechanism(Error error_code, uint32_t interrupt_status)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-CC-001, SSR-SoC-IFTO-001, SR-SoC-MMC-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
error_code	Error	Error code
interrupt_status	uint32_t	Interrupt status
[표 51] nc_mmc_to_safety_mechanism() Description
5.2.5.25.1. Control Flow Diagram
 
[그림 51] nc_mmc_to_safety_mechanism() 제어 흐름도
5.2.5.26. [SWF-MMC-035] nc_mmc_reset_bus()
Description	Wait reset mmc bus.
Prototype	static Error nc_mmc_reset_bus(mmc_host_driver_t *host, uint32_t mask, uint32_t timeout_ms)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
host	mmc_host_driver_t*	host driver
mask	uint32_t	mask
timeout_ms	uint32_t	timeout
[표 52] nc_mmc_reset_bus() Description
5.2.5.26.1. Control Flow Diagram
 
[그림 52] nc_mmc_reset_bus() 제어 흐름도
5.2.5.27. [SWF-MMC-036] nc_mmc_get_notify_obj()
Description	Get mmc device object
Prototype	static Object nc_mmc_get_notify_obj(SDIOCard *mmc)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-MMC-001
Return
Type	Spec. Designation
Object	IO Device Object
Parameter
Variable Name	Type	Spec. Designation
mmc	SDIOCard*	mmc card information
[표 53] nc_mmc_get_notify_obj() Description
5.2.5.27.1. Control Flow Diagram
 
[그림 53] nc_mmc_get_notify_obj() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-NCDRV-001] nc_driver
nc_driver 유닛은 Driver의 Handle 등록, Start, Open, Close과 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-NCDRV-001] nc_driver_register_handle()
Description	Register the synchronization module with the resource manager and register the driver instance handle with the driver handle pool.
Prototype	void nc_driver_register_handle(nc_node_driver_t *driver, Address handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001, SR-SoC-VDMA_H264-001, SR-SoC-ADC-001, SR-SoC-CAN-001, SR-SoC-DMA-001, SR-SoC-H264ENC-001, SR-SoC-I2C-001, SR-SoC-LIN-001, SR-SoC-PWM-001, SR-SoC-SPI-001, SR-SoC-UART-001, SR-SoC-OIC-001, SR-SoC-PVT-001, SR-SoC-SF-001, SSR-SoC-SE-001, SSR-SoC-WDT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
handle	Address	instance-handle
[표 5] nc_driver_register_handle() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 10] nc_driver_register_handle() 제어 흐름도
5.1.4.2. [SUI-NCDRV-002] nc_driver_find_device_name()
Description	Finds a device-tree node that is device-tree compatible, stores the device name of the parent node in name_buf if it is the parent of the child-node, and returns the result.
Prototype	Error nc_driver_find_device_name(const char *compatible, DevTree_Node child_node, char *name_buf, uint32_t buflen, uint32_t *output_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure or NotEnoughBuffers
Parameter
Variable Name	Type	Spec. Designation
compatible	const char*	device-tree compatible name
child_node	DevTree_Node	device-tree child-node
name_buf	char*	return address of name buffer
buflen	uint32_t	name buffer length
output_len	uint32_t*	return address of name length
[표 6] nc_driver_find_device_name() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 11] nc_driver_find_device_name() 제어 흐름도
5.1.4.3. [SUI-NCDRV-003] nc_driver_startup()
Description	Perform initialization of the system device-tree, searches for devices registered in device-tree and initializes drivers.
Prototype	void nc_driver_startup(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001, SSR-SoC-STM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 7] nc_driver_startup() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 12] nc_driver_startup() 제어 흐름도
5.1.4.4. [SUI-NCDRV-004] nc_driver_open()
Description	Finds the driver instance handle of the input bus_name, perform postprocess of open-device and returns the driver descriptor.
Prototype	Address nc_driver_open(const char *bus_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001, SR-SoC-NCLD-001, SSR-SoC-STM-001
Return
Type	Spec. Designation
Address	Descriptor address value
Parameter
Variable Name	Type	Spec. Designation
bus_name	const char*		bus-name(device-name)
[표 8] nc_driver_open() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 13] nc_driver_open() 제어 흐름도
5.1.4.5. [SUI-NCDRV-005] nc_driver_close()
Description	Performs the close function of the input device driver descriptor and returns the result.
Prototype	Error nc_driver_close(Address descriptor)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001, SR-SoC-NCLD-001
Return
Type	Spec. Designation
Error	Success or InvalidObject or OperationNotImplemented or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
descriptor	Address		descriptor of device-driver
[표 9] nc_driver_close() Description
5.1.4.5.1. Control Flow Diagram
 
[그림 14] nc_driver_close() 제어 흐름도
5.1.4.6. [SUI-NCDRV-006] nc_driver_ioctl()
Description	Performs the ioctl function of the input device driver descriptor and returns the result.
Prototype	Error nc_driver_ioctl(Address descriptor, Value command, Address param, uint32_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001, SR-SoC-NCLD-001, SSR-SoC-STM-001, SSR-SoC-CC-001, SSR-SoC-FM-001, SSR-SoC-H264SM-001, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001, SSR-SoC-NPUM-001, SSR-SoC-OIC-001, SSR-SoC-TM-001, SSR-SoC-VM-001, SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or MustNotBeNULL or OperationNotImplemented
Parameter
Variable Name	Type	Spec. Designation
descriptor	Address	descriptor of device-driver
command	Value	command value
param	Address	buffer address or value
param_len	uint32_t	size of param
[표 10] nc_driver_ioctl() Description
5.1.4.6.1. Control Flow Diagram
 
[그림 15] nc_driver_ioctl() 제어 흐름도
5.1.5. Unit Function 
N/A
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-NCLD-001] ncbin
ncbin 유닛은 Header Data의 Signature Magic Number를 검사하고 Success/Failure를 반환한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
NCBIN_BOOT_HEADER_SIZE	Boot Header Size	16
NCBIN_PLATFORM_MAGIC	Magic Number	0x30355041
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-NCLD-001] ncbin_check_header()
Description	The result is returned by comparing whether the data located at the signature offset of ncbin in the input buffer matches the Golden Signature.
Prototype	int32_t ncbin_check_header(void *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
	buf	void*	Boot Header Data
[표 5] ncbin_check_header() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 5] ncbin_check_header() 제어 흐름도
5.2. [SWU-NCLD-002] main
main 유닛은 파일 로딩을 위한 Device Mount, File Loading 등의 기능을 수행한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 6] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 7] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
5.2.4.1. [SUI-NCLD-001] main()
Description	Identify the config file, mount the designated storage, load user-data, and execute the target application.
Prototype	int main(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int	0
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 8] main() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 6] main() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-NCLD-002] nc_loader_send_exit_signal_to_safety_mechanism()
Description	Before nc-loader terminates, a termination signal is sent to the safety mechanism.
Prototype	static void nc_loader_send_exit_signal_to_safety_mechanism(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 9] nc_loader_send_exit_signal_to_safety_mechanism() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 7] nc_loader_send_exit_signal_to_safety_mechanism() 제어 흐름도
5.3. [SWU-NCLD-003] nc_zip
nc_zip 유닛은 zip 파일의 압축 해제를 위한 기능이 정의되어 있다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 10] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
RETRY_EOCD_SCAN_COUNT	EOCD Scan Count	(256)
NUM_OF_EOCD_LOOP_CALL	EOCD Loop Count	(4)
NUM_OF_CD_LOOP_CALL	CD Loop Count	(3)
NUM_OF_LF_LOOP_CALL	LF Loop Count	(6)
[표 11] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface
N/A
5.3.5. Unit Function
5.3.5.1. [SWF-NCLD-003] nc_zip_get_gd()
Description	Returns a global descriptor.
Prototype	static nc_zip_global_descriptor_t *nc_zip_get_gd(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 12] nc_zip_get_gd() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 8] nc_zip_get_gd() 제어 흐름도
5.3.5.2. [SWF-NCLD-004] nc_zip_loop_find_eocd()
Description	Searches for the eocd header starting from the end offset of the user-data identified in the ncbin header and returns the result.
Prototype	static nc_zip_error_t nc_zip_loop_find_eocd(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 13] nc_zip_loop_find_eocd() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 9] nc_zip_loop_find_eocd() 제어 흐름도
5.3.5.3. [SWF-NCLD-005] nc_zip_loop_seek_eocd()
Description	Adjust the offset to the starting point of end-of-central-directory.
Prototype	static nc_zip_error_t nc_zip_loop_seek_eocd(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 14] nc_zip_loop_seek_eocd() Description
5.3.5.3.1. Control Flow Diagram
 
[그림 10] nc_zip_loop_seek_eocd() 제어 흐름도
5.3.5.4. [SWF-NCLD-006] nc_zip_loop_read_eocd()
Description	Read data from end-of-central-directory and store it inside the global descriptor variable.
Prototype	static nc_zip_error_t nc_zip_loop_read_eocd(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 15] nc_zip_loop_read_eocd() Description
5.3.5.4.1. Control Flow Diagram
 
[그림 11] nc_zip_loop_read_eocd() 제어 흐름도
5.3.5.5. [SWF-NCLD-007] nc_zip_loop_verify_eocd()
Description	Performs validation of end-of-central-directory data stored in the global descriptor and returns the results.
Prototype	static nc_zip_error_t nc_zip_loop_verify_eocd(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 16] nc_zip_loop_verify_eocd() Description
5.3.5.5.1. Control Flow Diagram
 
[그림 12] nc_zip_loop_verify_eocd() 제어 흐름도
5.3.5.6. [SWF-NCLD-008] nc_zip_loop_reserve_cd_memory_pool()
Description	Creates a central-directory buffer in the global descriptor and returns the result.
Prototype	static nc_zip_error_t nc_zip_loop_reserve_cd_memory_pool(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)	
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 17] nc_zip_loop_reserve_cd_memory_pool() Description
5.3.5.6.1. Control Flow Diagram
 
[그림 13] nc_zip_loop_reserve_cd_memory_pool() 제어 흐름도
5.3.5.7. [SWF-NCLD-009] nc_zip_loop_seek_cd()
Description	Adjust the offset to the starting point of central-directory.
Prototype	static nc_zip_error_t nc_zip_loop_seek_cd(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)	
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 18] nc_zip_loop_seek_cd() Description
5.3.5.7.1. Control Flow Diagram
 
[그림 14] nc_zip_loop_seek_cd() 제어 흐름도
5.3.5.8. [SWF-NCLD-010] nc_zip_loop_read_cd_to_gd()
Description	Read data from central-directory and store it inside the global descriptor variable.
Prototype	static nc_zip_error_t nc_zip_loop_read_cd_to_gd(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 19] nc_zip_loop_read_cd_to_gd() Description
5.3.5.8.1. Control Flow Diagram
 
[그림 15] nc_zip_loop_read_cd_to_gd() 제어 흐름도
5.3.5.9. [SWF-NCLD-011] nc_zip_loop_seek_local_file_header()
Description	Adjust the offset to the starting point of local-file-header.
Prototype	static nc_zip_error_t nc_zip_loop_seek_local_file_header(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 20] nc_zip_loop_seek_local_file_header() Description
5.3.5.9.1. Control Flow Diagram
 
[그림 16] nc_zip_loop_seek_local_file_header() 제어 흐름도
5.3.5.10. [SWF-NCLD-012] nc_zip_loop_read_local_file_header()
Description	Read data from local-file-header and store it inside the global descriptor variable.
Prototype	static nc_zip_error_t nc_zip_loop_read_local_file_header(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 21] nc_zip_loop_read_local_file_header() Description
5.3.5.10.1. Control Flow Diagram
 
[그림 17] nc_zip_loop_read_local_file_header() 제어 흐름도
5.3.5.11. [SWF-NCLD-013] nc_zip_loop_read_name()
Description	Reads and saves the file name from the current local-file of the zip.
Prototype	static nc_zip_error_t nc_zip_loop_read_name(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 22] nc_zip_loop_read_name() Description
5.3.5.11.1. Control Flow Diagram
 
[그림 18] nc_zip_loop_read_name() 제어 흐름도
5.3.5.12. [SWF-NCLD-014] nc_zip_loop_read_extra()
Description	Reads and saves the extra-field data from the current local-file of the zip.
Prototype	static nc_zip_error_t nc_zip_loop_read_extra(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 23] nc_zip_loop_read_extra() Description
5.3.5.12.1. Control Flow Diagram
 
[그림 19] nc_zip_loop_read_extra() 제어 흐름도
5.3.5.13. [SWF-NCLD-015] nc_zip_loop_read_data()
Description	Reads and saves the chunk data from the current local-file of the zip.
Prototype	static nc_zip_error_t nc_zip_loop_read_data(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 24] nc_zip_loop_read_data() Description
5.3.5.13.1. Control Flow Diagram
 
[그림 20] nc_zip_loop_read_data() 제어 흐름도
5.3.5.14. [SWF-NCLD-016] nc_zip_loop_request_inflating()
Description	Passes local-file to inflating task and performs work request.
Prototype	static nc_zip_error_t nc_zip_loop_request_inflating(nc_zip_global_descriptor_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_global_descriptor_t*	ops - io operations of zip
is_gd_available - status
eocd - end-of-central-directory data of zip
cd - central-directory-lists of zip
current_cd - current central-directory
lf - local-file-lists of zip
current_lf - current local-file
[표 25] nc_zip_loop_request_inflating() Description
5.3.5.14.1. Control Flow Diagram
 
[그림 21] nc_zip_loop_request_inflating() 제어 흐름도
5.3.5.15. [SWF-NCLD-017] nc_zip_register_ops()
Description	Validates the input operations and registers them in the global descriptor.
Prototype	nc_zip_error_t nc_zip_register_ops(NC_ZIP_OUT nc_zip_ops_t *ops)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Sussess or Failure
Parameter
Variable Name	Type	Spec. Designation
ops	nc_zip_ops_t*	read - read method function pointer
seek - seek method function pointer
send - send method function pointer
[표 26] nc_zip_register_ops() Description
5.3.5.15.1. Control Flow Diagram
 
[그림 22] nc_zip_register_ops() 제어 흐름도
5.3.5.16. [SWF-NCLD-018] nc_zip_read_eocd_to_gd()
Description	Finds the end-of-central-directory of the zip in the user-partition, performs validation, and returns the result.
Prototype	nc_zip_error_t nc_zip_read_eocd_to_gd(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Sussess or Failure
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 27] nc_zip_read_eocd_to_gd() Description
5.3.5.16.1. Control Flow Diagram
 
[그림 23] nc_zip_read_eocd_to_gd() 제어 흐름도
5.3.5.17. [SWF-NCLD-019] nc_zip_read_cd_to_gd()
Description	Finds the central-directory of the zip in the user-partition, performs validation, and returns the result.
Prototype	nc_zip_error_t nc_zip_read_cd_to_gd(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Sussess or Failure
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 28] nc_zip_read_cd_to_gd() Description
5.3.5.17.1. Control Flow Diagram
 
[그림 24] nc_zip_read_cd_to_gd() 제어 흐름도
5.3.5.18. [SWF-NCLD-020] nc_zip_uncompress_on_the_fly()
Description	Parse the header information from the local-file section of the zip, load the chunk, and transfer the data to the inflating task.
Prototype	nc_zip_error_t nc_zip_uncompress_on_the_fly(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Sussess or Failure
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 29] nc_zip_uncompress_on_the_fly() Description
5.3.5.18.1. Control Flow Diagram
 
[그림 25] nc_zip_uncompress_on_the_fly() 제어 흐름도
5.3.5.19. [SWF-NCLD-021] nc_zip_release_resource()
Description	Release memory resources allocated for zip decompression.
Prototype	void nc_zip_release_resource(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 30] nc_zip_release_resource() Description
5.3.5.19.1. Control Flow Diagram
 
[그림 26] nc_zip_release_resource() 제어 흐름도
5.4. [SWU-NCLD-004] nc_zip_ops
nc_zip_ops 유닛은 플레시 메모리에서 Data File의 압축 해제에 관한 기능이 정의되어 있다.
5.4.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 31] 전역 변수
5.4.2. Defined Parameters
Name	Description	Value
GIPC_EP_NAME	GIPC Endpoint Name	"gipc_nc_loader"
GIPC_PAIR	GPIC Pair Value	(2)
PATH_PREFIX	Path Name	"/user_data"
USER_PARTITION_START	User Partition Start Offset	(0x20be000)
USER_PARTITION_LIMIT	User Partition Limit Size	(0x1f42000)
USER_PARTITION_END	User Partition End Offset	(USER_PARTITION_START + USER_PARTITION_LIMIT - 1)
NC_ZIP_OPS_GIPC_PROTO_INFLATING	Inflating Command	(0U)
NC_ZIP_OPS_GIPC_PROTO_EXIT	Exit Command	(1U)
PTR_BYTE	PTR Byte	((uint32_t)__PTR_BIT / BITS_PER_BYTE)
NUM_OF_SPI_SCLK_ELEM	SPI SCLK Element	(9)
NUM_OF_SPI_CLOCK_PROP_ELEM	SPI Property Element	(4)
NUM_OF_SPI_NOR_READ_FUNCTION_ELEM	SPI Read Function Element Count	(2)
MAX_OF_ASYNC_INFLATOR	Max Inflator Count	(64)
DEFAULT_ASYNC_INFLATOR_PRIORITY	Priority value	(125)
DEFAULT_ASYNC_INFLATOR_STACK_SIZE	Stack Size	(0x1000)
ASYNC_INFLATOR_NAME_LEN	Name Length	(sizeof("aync-inflator-xx"))
[표 32] Defined Parameters
5.4.3. Constraint
N/A
5.4.4. Unit Interface
N/A
5.4.5. Unit Function
5.4.5.1. [SWF-NCLD-022] nc_zip_get_spi_sck()
Description	Returns the sclk value of the ID entered in the spi baudrate table.
Prototype	static inline uint32_t nc_zip_get_spi_sck(int32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
uint32_t	Sclk value
Parameter
Variable Name	Type	Spec. Designation
id	int32_t	table id of sclk
[표 33] nc_zip_get_spi_sck() Description
5.4.5.1.1. Control Flow Diagram
 
[그림 27] nc_zip_get_spi_sck() 제어 흐름도
5.4.5.2. [SWF-NCLD-023] nc_zip_get_spi_clock_prop()
Description	Returns the property of the ID entered from the spi clock property table.
Prototype	static inline const nc_zip_ops_spi_clock_property_t *nc_zip_get_spi_clock_prop(int32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_ops_spi_clock_property_t*	pol - clock polarity
pha - clock phase
log - log for debug
Parameter
Variable Name	Type	Spec. Designation
id	int32_t	table id of clock property
[표 34] nc_zip_get_spi_clock_prop() Description
5.4.5.2.1. Control Flow Diagram
 
[그림 28] nc_zip_get_spi_clock_prop() 제어 흐름도
5.4.5.3. [SWF-NCLD-024] nc_zip_ops_get_gd()
Description	Returns a global descriptor.
Prototype	static nc_zip_ops_gd_t *nc_zip_ops_get_gd(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_ops_spi_clock_property_t*	address of spi_clock_prop_table
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 35] nc_zip_ops_get_gd() Description
5.4.5.3.1. Control Flow Diagram
 
[그림 29] nc_zip_ops_get_gd() 제어 흐름도
5.4.5.4. [SWF-NCLD-025] nc_zip_ops_scan_ncbin()
Description	Perform NCBIN header identification in the fastest order by SPI-READ MODE, CLOCK-PROPERTY, and SCLK TABLE combinations.
Prototype	static nc_zip_error_t nc_zip_ops_scan_ncbin(nc_zip_ops_gd_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
[표 36] nc_zip_ops_scan_ncbin() Description
5.4.5.4.1. Control Flow Diagram
 
[그림 30] nc_zip_ops_scan_ncbin() 제어 흐름도
5.4.5.5. [SWF-NCLD-026] nc_zip_ops_prepare_gipc()
Description	Perform GIPC initialization.
Prototype	static void nc_zip_ops_prepare_gipc(nc_zip_ops_gd_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
[표 37] nc_zip_ops_prepare_gipc() Description
5.4.5.5.1. Control Flow Diagram
 
[그림 31] nc_zip_ops_prepare_gipc() 제어 흐름도
5.4.5.6. [SWF-NCLD-027] nc_zip_ops_release_gipc()
Description	Perform GIPC deinitialization.
Prototype	static void nc_zip_ops_release_gipc(nc_zip_ops_gd_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
[표 38] nc_zip_ops_release_gipc() Description
5.4.5.6.1. Control Flow Diagram
 
[그림 32] nc_zip_ops_release_gipc() 제어 흐름도
5.4.5.7. [SWF-NCLD-028] nc_zip_ops_prepare_inflating_task()
Description	Create and run an inflating task.
Prototype	static void nc_zip_ops_prepare_inflating_task(nc_zip_ops_gd_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
[표 39] nc_zip_ops_prepare_inflating_task() Description
5.4.5.7.1. Control Flow Diagram
 
[그림 33] nc_zip_ops_prepare_inflating_task() 제어 흐름도
5.4.5.8. [SWF-NCLD-029] nc_zip_ops_write_file()
Description	Save the inflated data as a file.
Prototype	static Error nc_zip_ops_write_file(const char *path, uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Error	Success of Failure
Parameter
Variable Name	Type	Spec. Designation
path	char*	File path
buf	uint8_t*	Write buffer
len	size_t	Write size
[표 40] nc_zip_ops_write_file() Description
5.4.5.8.1. Control Flow Diagram
 
[그림 34] nc_zip_ops_write_file() 제어 흐름도
5.4.5.9. [SWF-NCLD-030] nc_zip_ops_inflating_task()
Description	Performs requested inflates in parallel.
Prototype	static Value nc_zip_ops_inflating_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Value	Exit number
Parameter
Variable Name	Type	Spec. Designation
param	Address	address of global descriptor
[표 41] nc_zip_ops_inflating_task() Description
5.4.5.9.1. Control Flow Diagram
 
[그림 35] nc_zip_ops_inflating_task() 제어 흐름도
5.4.5.10. [SWF-NCLD-031] nc_aync_inflator_entry()
Description	Inflating is performed asynchronously.
Prototype	static Value nc_aync_inflator_entry(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	address of global descriptor
[표 42] nc_aync_inflator_entry() Description
5.4.5.10.1. Control Flow Diagram
 
[그림 36] nc_aync_inflator_entry() 제어 흐름도
5.4.5.11. [SWF-NCLD-032] nc_zip_ops_spi_nor_initialize()
Description	Open the flash device and save the device handle in the global descriptor.
Prototype	static int32_t nc_zip_ops_spi_nor_initialize(nc_zip_ops_gd_t *gd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
[표 43] nc_zip_ops_spi_nor_initialize() Description
5.4.5.11.1. Control Flow Diagram
 
[그림 37] nc_zip_ops_spi_nor_initialize() 제어 흐름도
5.4.5.12. [SWF-NCLD-033] nc_zip_ops_spi_nor_set_clock_property()
Description	Configure the spi clock property of the flash device.
Prototype	static int32_t nc_zip_ops_spi_nor_set_clock_property(nc_zip_ops_gd_t *gd, uint32_t pha, uint32_t pol)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
pha	uint32_t	spi-clock-phase
pol	uint32_t	spi-clock-polarity
[표 44] nc_zip_ops_spi_nor_set_clock_property() Description
5.4.5.12.1. Control Flow Diagram
 
[그림 38] nc_zip_ops_spi_nor_set_clock_property() 제어 흐름도
5.4.5.13. [SWF-NCLD-034] nc_zip_ops_spi_nor_set_sclk()
Description	Configure the spi clock speed of the flash device.
Prototype	static int32_t nc_zip_ops_spi_nor_set_sclk(nc_zip_ops_gd_t *gd, uint32_t sclk)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
sclk	uint32_t	spi-speed
[표 45] nc_zip_ops_spi_nor_set_sclk() Description
5.4.5.13.1. Control Flow Diagram
 
[그림 39] nc_zip_ops_spi_nor_set_sclk() 제어 흐름도
5.4.5.14. [SWF-NCLD-035] nc_zip_ops_spi_nor_quad_read()
Description	Data is read into the buffer in quad-spi mode from the specified offset on the flash device to the specified size.
Prototype	static int32_t nc_zip_ops_spi_nor_quad_read(nc_zip_ops_gd_t *gd, uint32_t addr, uint8_t *buf, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
addr	uint32_t	flash-offset
buf	uint8_t*	buffer address
len	uint32_t	buffer size
[표 46] nc_zip_ops_spi_nor_quad_read() Description
5.4.5.14.1. Control Flow Diagram
 
[그림 40] nc_zip_ops_spi_nor_quad_read() 제어 흐름도
5.4.5.15. [SWF-NCLD-036] nc_zip_ops_spi_nor_single_read()
Description	Data is read into the buffer in single-spi mode from the specified offset on the flash device to the specified size.
Prototype	static int32_t nc_zip_ops_spi_nor_single_read(nc_zip_ops_gd_t *gd, uint32_t addr, uint8_t *buf, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gd	nc_zip_ops_gd_t*	base - This is the offset of user-partition.
limit - This is the limited-offset of user-partition.
start - The start offset of the user-data, excluding the ncbin header.
end - The end offset of user-data.
offset - The current offset.
task_id - The handle of the inflating task.
gipc_pmr - The physical memory region pair of the GIPC.
gpic_ch - GIPC Channel information.
gpic_ep_rx - GIPC rx endpoint.
gpic_ep_tx - GIPC tx endpoint.
nor_read - The function pointer for NOR FLASH READ.
spi_nor_dev - The handle of the spi nor flash device.
is_opend - The status value.
addr	uint32_t	flash-offset
buf	uint8_t*	buffer address
len	uint32_t	buffer size
[표 47] nc_zip_ops_spi_nor_single_read() Description
5.4.5.15.1. Control Flow Diagram
 
[그림 41] nc_zip_ops_spi_nor_single_read() 제어 흐름도
5.4.5.16. [SWF-NCLD-037] nc_zip_ops_open()
Description	Identify the signature of the user-data file from flash memory and perform initialization for loading and decompression.
Prototype	nc_zip_error_t nc_zip_ops_open(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 48] nc_zip_ops_open() Description
5.4.5.16.1. Control Flow Diagram
 
[그림 42] nc_zip_ops_open() 제어 흐름도
5.4.5.17. [SWF-NCLD-038] nc_zip_ops_close()
Description	Sends a termination signal to the inflating task, waits for the task to finish, and then cleans up the allocated resources.
Prototype	void nc_zip_ops_close(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 49] nc_zip_ops_close() Description
5.4.5.17.1. Control Flow Diagram
 
[그림 43] nc_zip_ops_close() 제어 흐름도
5.4.5.18. [SWF-NCLD-039] nc_zip_ops_read()
Description	Copies data from the current offset in flash by the size entered to the entered buffer address.
Prototype	nc_zip_error_t nc_zip_ops_read(uintptr_t buf, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
buf	uintptr_t	Buffer address to store flash data.
len	uint32_t	data size
[표 50] nc_zip_ops_read() Description
5.4.5.18.1. Control Flow Diagram
 
[그림 44] nc_zip_ops_read() 제어 흐름도
5.4.5.19. [SWF-NCLD-040] nc_zip_ops_seek()
Description	Modifies the current offset value of flash by "offset" from "from".
Prototype	nc_zip_error_t nc_zip_ops_seek(int32_t offset, nc_zip_seek_t from)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
offset	int32_t	This is the offset value to set based on “from”.
from	nc_zip_seek_t	This is the reference location(NC_ZIP_SEEK_SET, NC_ZIP_SEEK_CUR, NC_ZIP_SEEK_END)
[표 51] nc_zip_ops_seek() Description
5.4.5.19.1. Control Flow Diagram
 
[그림 45] nc_zip_ops_seek() 제어 흐름도
5.4.5.20. [SWF-NCLD-041] nc_zip_ops_send_inflating_request()
Description	Request inflating local-file through IPC to the Inflating Task.
Prototype	nc_zip_error_t nc_zip_ops_send_inflating_request(const nc_zip_lf_t **lf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_zip_error_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
lf	nc_zip_lf_t**	lfh - local-file-header of ZIP
name - file of directory name
extra_field - extra_field of ZIP
data - chunk data
[표 52] nc_zip_ops_send_inflating_request() Description
5.4.5.20.1. Control Flow Diagram
 
[그림 46] nc_zip_ops_send_inflating_request() 제어 흐름도
5.5. [SWU-NCLD-005] nc_memory
nc_memory 유닛은 memory malloc, calloc와 free 기능이 정의되어 있다.
5.5.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 53] 전역 변수
5.5.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 54] Defined Parameters
5.5.3. Constraint
N/A
5.5.4. Unit Interface
N/A
5.5.5. Unit Function
5.5.5.1. [SWF-NCLD-042] nc_malloc()
Description	Perform memory malloc.
Prototype	uintptr_t nc_malloc(uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
uintptr_t	Memory pointer
Parameter
Variable Name	Type	Spec. Designation
len	uint32_t	Memory size
[표 55] nc_malloc() Description
5.5.5.1.1. Control Flow Diagram
 
[그림 47] nc_malloc() 제어 흐름도
5.5.5.2. [SWF-NCLD-043] nc_calloc()
Description	Perform memory calloc.
Prototype	uintptr_t nc_calloc(uint32_t count, uint32_t unit)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
uintptr_t	Memory pointer
Parameter
Variable Name	Type	Spec. Designation
count	uint32_t	Memory count
unit	uint32_t	Memory size
[표 56] nc_calloc() Description
5.5.5.2.1. Control Flow Diagram
 
[그림 48] nc_calloc() 제어 흐름도
5.5.5.3. [SWF-NCLD-044] nc_free()
Description	Release allocated memory.
Prototype	void nc_free(uintptr_t ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
ptr	uintptr_t	Memory pointer
[표 57] nc_free() Description
5.5.5.3.1. Control Flow Diagram
 
[그림 49] nc_free() 제어 흐름도
5.6. [ SWU-NCLD-006] nc_gunzip
nc_gunzip 유닛은 unzip 기능이 정의되어 있다.
5.6.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 58] 전역 변수
5.6.2. Defined Parameters
Name	Description	Value
NUM_THREADS	Thread Number	4
[표 59] Defined Parameters
5.6.3. Constraint
N/A
5.6.4. Unit Interface
N/A
5.6.5. Unit Function
5.6.5.1. [SWF-NCLD-045] nc_zcalloc()
Description	Performs memory allocation in zlib.
Prototype	static void *nc_zcalloc(void *opaque, uint32_t items, uint32_t unit)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void*	calloc buffer
Parameter
Variable Name	Type	Spec. Designation
opaque	void*	unused
Items	uint32_t	unit-count
unit	uint32_t	unit-size
[표 60] nc_zcalloc() Description
5.6.5.1.1. Control Flow Diagram
 
[그림 50] nc_zcalloc() 제어 흐름도
5.6.5.2. [SWF-NCLD-046] nc_zfree()
Description	Perform memory release in zlib.
Prototype	static void nc_zfree(void *opaque, void *ptr)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
opaque	void*	unused
ptr	void*	Memory address to be freed
[표 61] nc_zfree() Description
5.6.5.2.1. Control Flow Diagram
 
[그림 51] nc_zfree() 제어 흐름도
5.6.5.3. [SWF-NCLD-047] nc_gunzip()
Description	Perform gunzip.
Prototype	int32_t nc_gunzip(uint32_t method, uint8_t *in_buf, uint32_t in_len, uint8_t *out_buf, uint32_t out_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
method	uint32_t	compressed-method
in_buf	uint8_t*	compressed-data
in_len	uint32_t	size-of-compressed-data
out_buf	uint8_t*	decompressed-data
out_len	uint32_t	size-of-decompressed-data
[표 62] nc_gunzip() Description
5.6.5.3.1. Control Flow Diagram
 
[그림 52] nc_gunzip() 제어 흐름도
5.6.5.4. [SWF-NCLD-048] nc_gunzip_by_zlib()
Description	Perform inflating.
Prototype	static int32_t nc_gunzip_by_zlib(uint8_t *in_buf, uint32_t in_len, uint8_t *out_buf, uint32_t out_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
in_buf	uint8_t*	compressed-data
in_len	uint32_t	size-of-compressed-data
out_buf	uint8_t*	decompressed-data
out_len	uint32_t	size-of-decompressed-data
[표 63] nc_gunzip_by_zlib() Description
5.6.5.4.1. Control Flow Diagram
 
[그림 53] nc_gunzip_by_zlib() 제어 흐름도
5.6.5.5. [SWF-NCLD-049] nc_gunzip_get_zstd_dctx()
Description	Get Decompression context from Gunzip Instance.
Prototype	static ZSTD_DCtx *nc_gunzip_get_zstd_dctx(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
ZSTD_DCtx*	Decompression context
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 64] nc_gunzip_get_zstd_dctx() Description
5.6.5.5.1. Control Flow Diagram
 
[그림 54] nc_gunzip_get_zstd_dctx() 제어 흐름도
5.6.5.6. [SWF-NCLD-050] nc_gunzip_by_zstd()
Description	Decompression using a pre-digested Dictionary.
Prototype	static int32_t nc_gunzip_by_zstd(uint8_t *in_buf, uint32_t in_len, uint8_t *out_buf, uint32_t out_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
in_buf	uint8_t*	compressed-data
in_len	uint32_t	size-of-compressed-data
out_buf	uint8_t*	decompressed-data
out_len	uint32_t	size-of-decompressed-data
[표 65] nc_gunzip_by_zstd() Description
5.6.5.6.1. Control Flow Diagram
 
[그림 55] nc_gunzip_by_zstd() 제어 흐름도
5.6.5.7. [SWF-NCLD-051] nc_gunzip_zstd_initialize()
Description	Initialize gunzip zstd.
Prototype	int32_t nc_gunzip_zstd_initialize(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 66] nc_gunzip_zstd_initialize() Description
5.6.5.7.1. Control Flow Diagram
 
[그림 56] nc_gunzip_zstd_initialize() 제어 흐름도
5.6.5.8. [SWF-NCLD-052] nc_gunzip_zstd_deinitialize()
Description	Deinitialize gunzip zstd.
Prototype	void nc_gunzip_zstd_deinitialize(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 67] nc_gunzip_zstd_deinitialize() Description
5.6.5.8.1. Control Flow Diagram
 
[그림 57] nc_gunzip_zstd_deinitialize() 제어 흐름도
5.6.5.9. [SWF-NCLD-053] nc_gunzip_zstd_get_instance()
Description	Returns the instance handle of the driver.
Prototype	nc_gunzip_zstd_t *nc_gunzip_zstd_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
nc_gunzip_zstd_t *	Instance Handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 68] nc_gunzip_zstd_get_instance() Description
5.6.5.9.1. Control Flow Diagram
 
[그림 58] nc_gunzip_zstd_get_instance() 제어 흐름도
5.7. [SWU-NCLD-007] ncmount
ncmount 유닛은 File System에 Mount 하는 기능이 정의되어 있다.
5.7.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 69] 전역 변수
5.7.2. Defined Parameters
Name	Description	Value
DEVICE_VISIBLE	Device Visible value	1
[표 70] Defined Parameters
5.7.3. Constraint
N/A
5.7.4. Unit Interface
N/A
5.7.5. Unit Function
5.7.5.1. [SWF-NCLD-054] nc_mount_nor_flash()
Description	For mount of user-partition, Performs system resource and ZIP operations initialization, ZIP Loading task creation and execution.
Prototype	static Error nc_mount_nor_flash(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 71] nc_mount_nor_flash() Description
5.7.5.1.1. Control Flow Diagram
 
[그림 59] nc_mount_nor_flash() 제어 흐름도
5.7.5.2. [SWF-NCLD-055] async_mount_nor_flash_entry()
Description	Performs ZIP file loading and inflating requests from Flash.
Prototype	static Value async_mount_nor_flash_entry(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	unused
[표 72] async_mount_nor_flash_entry() Description
5.7.5.2.1. Control Flow Diagram
 
[그림 60] async_mount_nor_flash_entry() 제어 흐름도
5.7.5.3. [SWF-NCLD-056] nc_mount_mkdir()
Description	Performs directory creation recursively.
Prototype	static Error nc_mount_mkdir(const char *path)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
path	char*	string path
[표 73] nc_mount_mkdir() Description
5.7.5.3.1. Control Flow Diagram
 
[그림 61] nc_mount_mkdir() 제어 흐름도
5.7.5.4. [SWF-NCLD-057] nc_mount_userdata()
Description	Mount the user-data partition to the file-system from the storage specified in config data.
Prototype	Error nc_mount_userdata(nc_loader_cfg_t *config)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
config	nc_loader_cfg_t*	ini_buffer - buffer of config file
ini_len - size of config file
bootdev_id - ID of mount storage
serverip - ip address of nfs server
nfsroot - nfsroot path
mountpoint - mount point of user data
root - root path
file - 'application' file name
is_autorun - AutoRun
[표 74] nc_mount_userdata() Description
5.7.5.4.1. Control Flow Diagram
 
[그림 62] nc_mount_userdata() 제어 흐름도
5.7.5.5. [SWF-NCLD-058] nc_mount_userdata_finish()
Description	When mounting user-data from flash, wait until completion and then perform resource cleanup.
Prototype	void nc_mount_userdata_finish(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	Void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 75] nc_mount_userdata_finish() Description
5.7.5.5.1. Control Flow Diagram
 
[그림 63] nc_mount_userdata_finish() 제어 흐름도
5.8. [SWU-NCLD-008] nccfg
nccfg 유닛는 Config 파일을 식별하고 Parsing한다.
5.8.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 76] 전역 변수
5.8.2. Defined Parameters
Name	Description	Value
MAX_CFG_FILE_NAME_LEN	Max File Name Length	128
IPV4_ADDRESS_LEN	Address Length	15
BOOTDEV_ID_FLASH	Flash ID	0
BOOTDEV_ID_NFS	NFS ID	1
BOOTDEV_ID_SDCARD	SD Card ID	2
BOOTDEV_ID_EMMC	Emmc ID	3
MAX_OF_BOOTDEV_ID	Boot Device ID	4
[표 77] Defined Parameters
5.8.3. Constraint
N/A
5.8.4. Unit Interface 
N/A
5.8.5. Unit Function
5.8.5.1. [SWF-NCLD-059] nc_config_parse_handler()
Description	Initialize the config structure by identifying the value according to section and name.
Prototype	static int nc_config_parse_handler(void* user, const char *section, const char *name, const char *value)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int	1
Parameter
Variable Name	Type	Spec. Designation
user	void*	data address of config structure
section	char*	section name
name	char*	filed name
value	char*	filed value
[표 78] nc_config_parse_handler() Description
5.8.5.1.1. Control Flow Diagram
 
[그림 64] nc_config_parse_handler() 제어 흐름도
5.8.5.2. [SWF-NCLD-060] nc_config_is_ini_match()
Description	Compares the 'section' and 'name' tags and returns a match as a Boolean.
Prototype	static Boolean nc_config_is_ini_match(const char *section, const char *s, const char *name, const char *n)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
Boolean	TRUE or FALSE
Parameter
Variable Name	Type	Spec. Designation
section	char*	'section' tag value of config file
s	char*	expected 'section' tag
name	char*	'name' tag value of config file
n	char*	expected 'name' tag
[표 79] nc_config_is_ini_match() Description
5.8.5.2.1. Control Flow Diagram
 
[그림 65] nc_config_is_ini_match() 제어 흐름도
5.8.5.3. [SWF-NCLD-061] hexval()
Description	Returns the ASCII code value as an integer.
Prototype	static int32_t hexval(char c)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
int32_t	Hex value
Parameter
Variable Name	Type	Spec. Designation
c	char	ascii code
[표 80] hexval() Description
5.8.5.3.1. Control Flow Diagram
 
[그림 66] hexval() 제어 흐름도
5.8.5.4. [SWF-NCLD-062] nc_config_atol()
Description	Converts ascii string data to integer type and returns it.
Prototype	static long nc_config_atol(const char *str)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
long	long value
Parameter
Variable Name	Type	Spec. Designation
str	Char*	string data
[표 81] nc_config_atol() Description
5.8.5.4.1. Control Flow Diagram
 
[그림 67] nc_config_atol() 제어 흐름도
5.8.5.5. [SWF-NCLD-063] nc_config_initialize()
Description	Identify the Config file from DeviceTree and initialize the Config structure.
Prototype	void nc_config_initialize(nc_loader_cfg_t *config)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLD-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
	config	nc_loader_cfg_t*	ini_buffer - buffer of config file
ini_len - size of config file
bootdev_id - ID of mount storage
serverip - ip address of nfs server
nfsroot - nfsroot path
mountpoint - mount point of user data
root - root path
file - 'application' file name
is_autorun - AutoRun
[표 82] nc_config_initialize() Description
5.8.5.5.1. Control Flow Diagram
 
[그림 68] nc_config_initialize() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-NCLDH-001] nc_loader_helper
nc_loader_helper 유닛은 NCLD의 보조를 위한 기능이 정의되어 있다.
기능으로는 Timed File Open, Wait for File System, Wait for Mount이다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
MSEC_TO_USEC	Time Out Value	1000U
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-NCLDH-001] nc_loader_wait_for_file()
Description	Checks whether nc-loader has written a file to the file system during the entered time limit and returns the result.
Prototype	Error nc_loader_wait_for_file(const char *path, uint64_t timeout_ms)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLDH-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
path	const char *	file path
timeout_ms	uint64_t	time-out value
[표 5] nc_loader_wait_for_file() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] nc_loader_wait_for_file() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-NCLDH-001] nc_loader_timed_fopen()
Description	Attempts to open the file for the entered time limit and returns a file pointer upon success.
Prototype	FILE *nc_loader_timed_fopen(const char *path, const char *mode, uint64_t timeout_ms)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLDH-001
Return
Type	Spec. Designation
FILE*	File Pointer
Parameter
Variable Name	Type	Spec. Designation
path	const char *	file path
mode	const char *	file open mode
timeout_ms	uint64_t	time-out value
[표 6] nc_loader_timed_fopen() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_loader_timed_fopen() 제어 흐름도
5.1.5.2. [SWF-NCLDH-002] nc_loader_wait_for_mount_done()
Description	Wait until nc-loader writes all user-data to the file-system.
Prototype	Error nc_loader_wait_for_mount_done(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-NCLDH-001
Return
Type	Spec. Designation
ERROR	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 7] nc_loader_wait_for_mount_done() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_loader_wait_for_mount_done() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1.  [SWU-NPUM-001] NPU_sm
NPU_sm 유닛은 NPU 동작 중 오류가 발생하면 SE에 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
NETWORK_FILE_INPUT	File Name	"/user_data/resource/network/pavlite_argX_64x64/input.bin"
NETWORK_FILE_OUTPUT	File Name	"/user_data/resource/network/pavlite_argX_64x64/output.bin"
NETWORK_FILE_WEIGHTS	File Name	"/user_data/resource/network/pavlite_argX_64x64/weights.bin"
NETWORK_FILE_CMDQ	File Name	"/user_data/resource/network/pavlite_argX_64x64/cmdq.bin"
OFFSET_INPUT	Offset Value	0x0
OFFSET_OUTPUT	Offset Value	0x3000U
OFFSET_WEIGHTS	Offset Value	0x47D000
OFFSET_CMDQ	Offset Value	0x58C000
OUTPUT_SIZE	Output Size	8192
CMD_ADDR	Command Address	0x201a380
CMD_CNT	Command Count	4
NPU_IOD_TIMEOUT_US	Time Out Value	5000UL
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-NPUM-001] npu_monitor_task()
Description	NPU simulation task.
Prototype	Value npu_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-NPUM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	npu address
[표 5] npu_monitor_task() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] npu_monitor_task() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-NPUM-001] nc_set_npu_monitor_fault()
Description	Set that an NPU fault has occurred in the Safety Engine.
Prototype	static Error nc_set_npu_monitor_fault(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-NPUM-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
param	Address	safety engine parameter address
[표 6] nc_set_npu_monitor_fault() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_set_npu_monitor_fault() 제어 흐름도
5.1.5.2. [SWF-NPUM-002] npu_sm_load_binary()
Description	Load Binary data.
Prototype	static Error npu_sm_load_binary(const char *path, uint8_t *dst)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-NPUM-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
path	const char*	binary path
dst	uint8_t*	destination address
[표 7] npu_sm_load_binary() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] npu_sm_load_binary() 제어 흐름도
5.1.5.3. [SWF-NPUM-003] npu_sm_load_network()
Description	Load network.
Prototype	static Error npu_sm_load_network(Address mmap_base, uint8_t *output)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-NPUM-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
mmap_base	Address	memory map base
output	uint8_t*	output binary
[표 8] npu_sm_load_network() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] npu_sm_load_network() 제어 흐름도
5.1.5.4. [SWF-NPUM-004] npu_sm_check_intr_status()
Description	Read check interrupt status.
Prototype	static Error npu_sm_check_intr_status(IODevice aim_cnn_sm_iod, uint64_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-NPUM-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
aim_cnn_sm_iod	IODevice	cnn iodevice info
timeout_us	uint64_t	timeout
[표 9] npu_sm_check_intr_status() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] npu_sm_check_intr_status() 제어 흐름도
5.1.5.5. [SWF-NPUM-005] npu_sm_set_run()
Description	run npu sm to driver.
Prototype	static void npu_sm_set_run(IODevice aim_cnn_sm_iod)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-NPUM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
aim_cnn_sm_iod	IODevice	cnn iodevice info
[표 10] npu_sm_set_run() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] npu_sm_set_run() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-OIC-001] OIC_sm
OIC_sm 유닛은 OIC Bus에서 Error가 발생하면 SE에 Fault를 전달한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
FAULT_INJECTION_ENABLE	Fault Injection Enable	7
OIC_B_CHANNEL_R_CHANNEL	OIC Channel	2
OIC_W_CHANNEL_A_CHANNEL	OIC Channel	1
OIC_COMPONENT_DESC_OFFSET	OIC Component Offset	4
OIC_FAULT_MONITOR_MODE_SECDED_W_A	OIC Fault Monitor Mode	1
OIC_FAULT_MONITOR_MODE_SECDED_R_B	OIC Fault Monitor Mode	2
OIC_FAULT_MONITOR_MODE_FIRE_DOOR	OIC Fault Monitor Mode	3
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface 
5.1.3.1. [SUI-OIC-001] oic_control_monitor_task()
Description	Check OIC SM.
Prototype	Value oic_control_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	address parameter
[표 5] oic_control_monitor_task() Description
5.1.3.1.1. Control Flow Diagram
 
[그림 7] oic_control_monitor_task() 제어 흐름도
5.1.3.2. [SUI-OIC-002] oic_control_halt_task()
Description	Wait for OIC bus controller interrupt pending clear and set fault.
Prototype	Value oic_control_halt_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	address parameter
[표 6] oic_control_halt_task() Description
5.1.3.2.1. Control Flow Diagram
 
[그림 8] oic_control_halt_task() 제어 흐름도
5.1.4. Unit Function
5.1.4.1. [SWF-OIC-001] nc_monitor_oic_control()
Description	Enable OIC controller safety.
Prototype	static Error nc_monitor_oic_control(nc_oic_control_monitor_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	nc_oic_control_monitor_sm_t*	common_config - Safety Engine config handle
oic_config - OIC SM initial config
descriptor - OIC driver descriptor
interrupt_bit - OIC component interrupt bit
idx - OIC component list index get from USER
iod - Device IODevice Vector Handle
component - OIC component to enable
[표 7] nc_monitor_oic_control() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 9] nc_monitor_oic_control() 제어 흐름도
5.2. [SWU-OIC-002] oic_driver
oic_driver 유닛은 User가 OIC의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 OIC 초기화, Enable Fault Detect, Read Status, IRQ 처리이다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 8] 전역 변수
5.2.1. Defined Parameters
Name	Description	Value
OIC_FAULT_MONITOR_MODE_SECDED_W_A	OIC Fault Monitor Mode	1
OIC_FAULT_MONITOR_MODE_SECDED_R_B	OIC Fault Monitor Mode	2
OIC_FAULT_MONITOR_MODE_FIRE_DOOR	OIC Fault Monitor Mode	3
[표 9] Defined Parameters
5.2.2. Constraint
N/A
5.2.3. Unit Interface 
5.2.3.1. [SUI-OIC-003] nc_oic_probe()
Description	Initialize and register oic.
Prototype	static Error nc_oic_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	DeviceTree Node
driver	nc_node_driver_t*	Node Driver Structure
[표 10] nc_oic_probe () Description
5.2.3.1.1. Control Flow Diagram
 
[그림 10] nc_oic_probe() 제어 흐름도
5.2.3.2. [SUI-OIC-004] nc_oic_ioctl_enable_fault_detect()
Description	Enable OIC controller fire door feature.
Prototype	static Error nc_oic_ioctl_enable_fault_detect(nc_oic_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_oic_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of oic hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap		
paramr	Address	parameter
param_len	size_t	parameter length
[표 11] nc_oic_ioctl_enable_fault_detect() Description
5.2.3.2.1. Control Flow Diagram
 
[그림 11] nc_oic_ioctl_enable_fault_detect() 제어 흐름도
5.2.3.3. [SUI-OIC-005] nc_oic_ioctl_enable_interrupt()
Description	Enable interrupt ioctl.
Prototype	static Error nc_oic_ioctl_enable_interrupt(nc_oic_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_oic_driver_t*	oic driver instance
param	Address	parameter
param_len	size_t	parameter length
[표 12] nc_oic_ioctl_enable_interrupt() Description
5.2.3.3.1. Control Flow Diagram
 
[그림 12] nc_oic_ioctl_enable_interrupt() 제어 흐름도
5.2.3.4. [SUI-OIC-006] nc_oic_ioctl_get_irq_receiver()
Description	Get IO device.
Prototype	static Error nc_oic_ioctl_get_irq_receiver(nc_oic_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or NULLObjectSpecified
Parameter
Variable Name	Type	Spec. Designation
instance	nc_oic_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of oic hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap		
param	Address	parameter
param_len	size_t	parameter length
[표 13] nc_oic_ioctl_get_irq_receiver() Description
5.2.3.4.1. Control Flow Diagram
 
[그림 13] nc_oic_ioctl_get_irq_receiver() 제어 흐름도
5.2.3.5. [SUI-OIC-007] nc_oic_ioctl_enable_ecc_monitoring()
Description	Enable OIC controller SECDED feature.
Prototype	static Error nc_oic_ioctl_enable_ecc_monitoring(nc_oic_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_oic_driver_t *	iod - IODevice Handle
ioaddr - Virtual base address of oic hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
param_len	size_t	Parameter length
[표 14] nc_oic_ioctl_enable_ecc_monitoring() Description
5.2.3.5.1. Control Flow Diagram
 
[그림 14] nc_oic_ioctl_enable_ecc_monitoring() 제어 흐름도
5.2.3.6. [SUI-OIC-008] nc_oic_ioctl_read_fd_status()
Description	Read OIC Firedoor status.
Prototype	static Error nc_oic_ioctl_read_fd_status(nc_oic_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or IllegalObjectNumber
Parameter
Variable Name	Type	Spec. Designation
instance	nc_oic_driver_t *	iod - IODevice Handle
ioaddr - Virtual base address of oic hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
param_len	size_t	Parameter length
[표 15] nc_oic_ioctl_read_fd_status() Description
5.2.3.6.1. Control Flow Diagram
 
[그림 15] nc_oic_ioctl_read_fd_status() 제어 흐름도
5.2.3.7. [SUI-OIC-009] nc_oic_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_oic_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 16] nc_oic_ioctl() Description
5.2.3.7.1. Control Flow Diagram
 
[그림 16] nc_oic_ioctl() 제어 흐름도
5.2.4. Unit Function 
5.2.4.1. [SWF-OIC-002] nc_oic_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static nc_oic_driver_t *nc_oic_get_instance(uint32_t component)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
nc_oic_driver_t*	Instance handler
Parameter
Variable Name	Type	Spec. Designation
component	uint32_t	Component value
[표 17] nc_oic_get_instance() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 17] nc_oic_get_instance() 제어 흐름도
5.3. [SWU-OIC-003] oic_kernel_driver
oic_kernel_driver 유닛은 커널 부팅 시 OIC의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 18] 전역 변수
5.3.1. Defined Parameters
Name	Description	Value
OIC_CODA_NUM_OF_RST	Coda number	2U
OIC_INT_MASK	OIC Interrupt mask	(0xCUL)
OIC_FD_CONTROL	OIC FD Control	(0x1CUL)
OIC_INT_CLEAR	OIC Interrupt Clear	(0x8UL)
OIC_GIC_INT_CLEAR	OIC GIC Interrupt Clear	(0x84UL)
OIC_MASTER_FD_STATUS	OIC Master FD status	(0x24UL)
OIC_SLAVE_STATUS	OIC slave status	(0x18UL)
OIC_TO_GIC_INT_MASK	OIC GIC Interrupt Mask	(0x104UL)
OIC_B_CHANNEL_R_CHANNEL	OIC Channel	2
[표 19] Defined Parameters
5.3.2. Constraint
N/A
5.3.3. Unit Interface
N/A
5.3.4. Unit Function 
5.3.4.1. [SWF-OIC-003] nc_oic_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_oic_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
EVENT	Event handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 20] nc_oic_kernel_exception_handler() Description
5.3.4.1.1. Control Flow Diagram
 
[그림 18] nc_oic_kernel_exception_handler() 제어 흐름도
5.3.4.2. [SWF-OIC-004] nc_oic_kernel_clear_fault()
Description	Clear OIC interrupt to stop enter pending.
Prototype	static void nc_oic_kernel_clear_fault(oic_kernel_driver_t *instance, Value bit_mask)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	oic_kernel_driver_t*	iod - Device IODevice Vector Handle
oic_ioaddr - register base kernel virtual address
irq_num - irq number table
khwclock_reset - OIC_coda kernel HW clock
oic_component - OIC safety mechanism component
error_type - Error Type
bit_mask	Value	fault_bit
[표 21] nc_oic_kernel_clear_fault() Description
5.3.4.2.1. Control Flow Diagram
 
[그림 19] nc_oic_kernel_clear_fault() 제어 흐름도
5.3.4.3. [SWF-OIC-005] nc_oic_kernel_get_instance()
Description	Returns an Instance function.
Prototype	static inline oic_kernel_driver_t *nc_oic_kernel_get_instance(uint32_t componnent)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
oic_kernel_driver_t*	Instance handler
Parameter
Variable Name	Type	Spec. Designation
componnent	uint32_t	Component value
[표 22] nc_oic_kernel_get_instance() Description
5.3.4.3.1. Control Flow Diagram
 
[그림 20] nc_oic_kernel_get_instance() 제어 흐름도
5.3.4.4. [SWF-OIC-006] nc_oic_kernel_write_command()
Description	Performs an io request for irq-iodevice by calling the WriteIODeviceRegister function from user-space.
Prototype	static Error nc_oic_kernel_write_command(IODeviceVector iod, Value command, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
Iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
val	Value	write value
[표 23] nc_oic_kernel_write_command() Description
5.3.4.4.1. Control Flow Diagram
 
[그림 21] nc_oic_kernel_write_command() 제어 흐름도
5.3.4.5. [SWF-OIC-007] nc_oic_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_oic_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	combine of ID and command number
buf	Value*	buffer address of architecture-value
[표 24] nc_oic_kernel_read_command() Description
5.3.4.5.1. Control Flow Diagram
 
[그림 22] nc_oic_kernel_read_command() 제어 흐름도
5.3.4.6. [SWF-OIC-008] nc_oic_kernel_probe()
Description	Performs hw resource initialization of oic at kernel-boot time.
Prototype	static Error nc_oic_kernel_probe(DevTree_Node node, const char *match_name)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-OIC-001, SSR-SoC-OIC-002, SSR-SoC-OIC-003, SSR-SoC-OIC-004
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 25] nc_oic_kernel_probe() Description
5.3.4.6.1. Control Flow Diagram
 
[그림 23] nc_oic_kernel_probe() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-OSAL-001] nc_ghs_message_queue
nc_ghs_message_queue 유닛은 메세지를 처리하기 위한 기능을 제공한다.
제공되는 기능으로는 Create Message Queue와 Send, Receive Message이다. 
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
MAX_GIPC_EP_NAME_LEN	Name Length	128
NC_GIPC_PAIR	GIPC Pair	2
TX_SIDE	TX Value	0
RX_SIDE	RX Value	1
MSG_BLOCKMD	Message Block	0
MSG_NONBLKMD	Message No Bleck	1
GIPC_TX_LOCK_MUTEX	TX Mutex Lock	0
GIPC_TX_LOCK_SEMAPHORE	TX Semaphore Lock	1
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
5.1.4.1. [SUI-OSAL-001] nc_ghs_ipc_create_mq()
Description	This function is for creating message queue. (like linux posix message queue).
Prototype	Error nc_ghs_ipc_create_mq (const char *gipc_ep_name, size_t msg_size, int32_t msg_mode, st_nc_gipc_info *ret_gipc_info)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
gipc_ep_name 	const char*	unique gipc end-point name for creating mq
msg_size	size_t	max message size
msg_mode	int32_t	message queue mode
ret_gipc_info	st_nc_gipc_info*	Mode - ipc mode
gipc_ep_name - ipc-endpoint names
gipc_pmr - memory region pair for ipc
gipc_ch - ipc channel handle
gipc_ep_rx - ipc-rx-endpoint
gipc_ep_tx - ipc-tx-endpoint
tx_lock - mutex for ipc-send
[표 5] nc_ghs_ipc_create_mq() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] nc_ghs_ipc_create_mq() 제어 흐름도
5.1.4.2. [SUI-OSAL-002] nc_ghs_ipc_mq_send()
Description	This function is for sending message queue. (like linux posix message queue).
Prototype	GIPC_Result nc_ghs_ipc_mq_send (st_nc_gipc_info *gipc_info, const void *send_data_ptr, size_t data_length, uint32_t protocol)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-001
Return
Type	Spec. Designation
GIPC_Result	GIPC_Result
Parameter
Variable Name	Type	Spec. Designation
gipc_info	st_nc_gipc_info*	Mode - ipc mode
gipc_ep_name - ipc-endpoint names
gipc_pmr - memory region pair for ipc
gipc_ch - ipc channel handle
gipc_ep_rx - ipc-rx-endpoint
gipc_ep_tx - ipc-tx-endpoint
tx_lock - mutex for ipc-send
send_data_ptr	const void*	memory-allocated data's pointer
data_length	size_t	sending data length
protocol	uint32_t	unique gipc end-point name
[표 6] nc_ghs_ipc_mq_send() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 6] nc_ghs_ipc_mq_send() 제어 흐름도
5.1.4.3. [SUI-OSAL-003] nc_ghs_ipc_mq_receive()
Description	This function is for receiving message queues. (like linux posix message queue).
Prototype	int32_t nc_ghs_ipc_mq_receive (st_nc_gipc_info* gipc_info, void *rcv_data_ptr, size_t data_length, size_t *bytes_received, uint32_t *protocol)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-001
Return
Type	Spec. Designation
int32_t	Failure or Received data size
Parameter
Variable Name	Type	Spec. Designation
gipc_info	st_nc_gipc_info*	Mode - ipc mode
gipc_ep_name - ipc-endpoint names
gipc_pmr - memory region pair for ipc
gipc_ch - ipc channel handle
gipc_ep_rx - ipc-rx-endpoint
gipc_ep_tx - ipc-tx-endpoint
tx_lock - mutex for ipc-send
rcv_data_ptr	void*	data pointer for receving
data_length	size_t	data length to receive
bytes_received	size_t*	received data size (in bytes)
protocol	uint32_t*	received protocol num
[표 7] nc_ghs_ipc_mq_receive() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 7] nc_ghs_ipc_mq_receive() 제어 흐름도
5.1.4.4. [SUI-OSAL-004] nc_ghs_ipc_close_mq()
Description	This function is for closing message queue. (like linux posix message queue).
Prototype	void nc_ghs_ipc_close_mq (st_nc_gipc_info *gipc_info)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
gipc_info	st_nc_gipc_info*	Mode - ipc mode
gipc_ep_name - ipc-endpoint names
gipc_pmr - memory region pair for ipc
gipc_ch - ipc channel handle
gipc_ep_rx - ipc-rx-endpoint
gipc_ep_tx - ipc-tx-endpoint
tx_lock - mutex for ipc-send
[표 8] nc_ghs_ipc_close_mq() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 8] nc_ghs_ipc_close_mq() 제어 흐름도
5.1.5. Unit Function 
5.1.5.1. [SWF-OSAL-001] nc_gipc_request_ep_entry()
Description	This function is for request endpoint.
Prototype	static Value nc_gipc_request_ep_entry(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	task argument
[표 9] nc_gipc_request_ep_entry() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 9] nc_gipc_request_ep_entry() 제어 흐름도
5.2. [SWU-OSAL-002] nc_ghs_thread
nc_ghs_thread 유닛은 Task 생성 기능을 수행한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 10] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
NC_DEFAULT_TASK_STACK_SIZE	Stack Size	0x1000
NC_DEFAULT_TASK_PRIORITY	Task Default Priority	125
NC_HIGH_TASK_PRIORITY	Task High Priority	250
NC_LOW_TASK_PRIORITY	Task Low Priority	5
[표 11] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
5.2.4.1. [SUI-OSAL-005] nc_ghs_create_normal_task()
Description	This function is for creating task with usual option.
Prototype	Error nc_ghs_create_normal_task (tkc_t *task_map, char* uniq_task_name, Address arg)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
task_map	tkc_t	task_entry - thread entry point
g_task – thread handle
uniq_task_name	char*	unique task name
arg	Address	task's argument
[표 12] nc_ghs_create_normal_task() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 10] nc_ghs_create_normal_task() 제어 흐름도
5.2.4.2. [SUI-OSAL-006] nc_ghs_create_task_with_option()
Description	This function is for creating task with detail option.
Prototype	Error nc_ghs_create_task_with_option (tkc_t *task_map, char *uniq_task_name, Address arg, Value priority, Address stack_size, Value core_to_run)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-OSAL-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
task_map	tkc_t*	task_entry - thread entry point
g_task – thread handle
uniq_task_name	char*	unique task name
arg	Address	task's argument
priority	Value	task's priority
stack_size	Address	task's stack_size
core_to_run	Value	core for running task
[표 13] nc_ghs_create_task_with_option() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 11] nc_ghs_create_task_with_option() 제어 흐름도
5.2.5. Unit Function 
N/A
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-PVT-001] pvt_kernel_driver
pvt_kernel_driver 유닛은 커널 부팅 시 PVT의 HW 리소스의 초기화를 수행한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A 
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-PVT-001] nc_pvt_kernel_get_instance()
Description	Returns an Instance function.
Prototype	static inline pvt_kernel_driver_t *nc_pvt_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
pvt_kernel_driver_t*	Pvt Driver Instance
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 5] nc_pvt_kernel_get_instance() Description

5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_pvt_kernel_get_instance() 제어 흐름도
5.1.5.2. [SWF-PVT-002] nc_pvt_kernel_probe()
Description	Performs hw resource initialization of pvt at kernel-boot time.
Prototype	static Error nc_pvt_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device tree node
match_name	const char*	compatible name of device tree node
[표 6] nc_pvt_kernel_probe() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_pvt_kernel_probe() 제어 흐름도
5.2. [SWU-PVT-002] pvt_driver
pct_driver 유닛은 User가 PVT의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 PVT 초기화, Read Value, Data Calibration이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 7] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
EOC_COUNTING_TIMEOUT      	EOC timeout value	500000U
EOC_COUNTING_CLEAR_TIMEOUT	EOC timeout value	500000U
NUM_OF_PROBE_PER_GROUP    	Probe max number per group	4U
PVT_VOLTAGE_PROBE_FLAG    	Voltage probe flag	0x10U
NUM_OF_PVT_BUS	Pvt bus number	1
SIZE_OF_EXPORTED_PVT_IOADDR_NAME	Pvt id address name size	19
[표 8] Defined Parameters
5.2.3. Constraint
N/A

5.2.4. Unit Interface 
5.2.4.1. [SUI-PVT-001] nc_pvt_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_pvt_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 9] nc_pvt_probe() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 8] nc_pvt_probe() 제어 흐름도
5.2.4.2. [SUI-PVT-002] nc_pvt_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_pvt_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address of driver instance handle
command	Value	command value
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 10] nc_pvt_ioctl() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 9] nc_pvt_ioctl() 제어 흐름도
5.2.4.3. [SUI-PVT-003] nc_pvt_ioctl_set_calibration_data()
Description	Set calibration data in PVT.
Prototype	static Error nc_pvt_ioctl_set_calibration_data(nc_pvt_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 11] nc_pvt_ioctl_set_calibration_data() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 10] nc_pvt_ioctl_set_calibration_data() 제어 흐름도
5.2.4.4. [SUI-PVT-004] nc_pvt_ioctl_get_calibration_data()
Description	Get calibration data of PVT.
Prototype	static Error nc_pvt_ioctl_get_calibration_data(nc_pvt_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base ddress of pvt hw register
data_set - calibration data set
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 12] nc_pvt_ioctl_get_calibration_data() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 11] nc_pvt_ioctl_get_calibration_data() 제어 흐름도
5.2.4.5. [SUI-PVT-005] nc_pvt_ioctl_get_temperature()
Description	Get temperature data of PVT.
Prototype	static Error nc_pvt_ioctl_get_temperature(nc_pvt_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 13] nc_pvt_ioctl_get_temperature() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 12] nc_pvt_ioctl_get_temperature() 제어 흐름도
5.2.4.6. [SUI-PVT-006] nc_pvt_ioctl_get_voltage()
Description	Get voltage data of PVT.
Prototype	static Error nc_pvt_ioctl_get_voltage(nc_pvt_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 14] nc_pvt_ioctl_get_voltage() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 13] nc_pvt_ioctl_get_voltage() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-PVT-003] nc_pvt_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_pvt_driver_t *nc_pvt_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
nc_pvt_driver_t*	Pvt Driver Instance
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 15] nc_pvt_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 14] nc_pvt_get_instance() 제어 흐름도
5.2.5.2. [SWF-PVT-004] nc_pvt_set_default_calibration()
Description	Set default calibration values in PVT.
Prototype	static void nc_pvt_set_default_calibration(pvt_calibration_data_set data_set)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
data_set	pvt_calibration_data_set	unit_time - unit time
D_OPT_25 - Values detected at 25 degrees during the final test phase.
D_OPT_85 - Values detected at 85 degrees during the final test phase.
D_OTP_SL - Default value of D_OTP_SL.
TRIM_VLSB_TS - LSB voltage of DAC trimming ports
MUX_ADDR_TS - Test MUX address setting bits Only for test debugging purpose
BUF_VREF_SEL_TS - Reference voltage setting ports for the amplifier tin the Positive-TC generator block
BUF_SLOPE_SEL_TS - Temperature slope setting ports
TRIM_BJT_CUR_TS - Current trimming ports for BJT
TRIM_BGR_TS - Curvature trimming ports for voltage change in BGR
EN_VBE_TRIM_TS - Vref calibration enable port
EN_VREFT_TRIM_TS - Vref calibration enable port
EN_CH_TS - Offset calibration enable port
[표 16] nc_pvt_set_default_calibration() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 15] nc_pvt_set_default_calibration() 제어 흐름도
5.2.5.3. [SWF-PVT-005] nc_pvt_set_timing()
Description	Set PVT timing.
Prototype	static void nc_pvt_set_timing(nc_pvt_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
[표 17] nc_pvt_set_timing() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 16] nc_pvt_set_timing() 제어 흐름도
5.2.5.4. [SWF-PVT-006] nc_pvt_set_enable()
Description	Set PVT enable.
Prototype	static void nc_pvt_set_enable(nc_pvt_driver_t *instance, uint32_t is_enable)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
is_enable	uint32_t	Enable/Disable value
[표 18] nc_pvt_set_enable() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 17] nc_pvt_set_enable() 제어 흐름도
5.2.5.5. [SWF-PVT-007] nc_pvt_wait_for_done()
Description	Wait until the probe measurement is complete.
Prototype	static Error nc_pvt_wait_for_done(nc_pvt_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
[표 19] nc_pvt_wait_for_done() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 18] nc_pvt_wait_for_done() 제어 흐름도
5.2.5.6. [SWF-PVT-008] nc_pvt_select_output()
Description	Set output probe point selection.
Prototype	static void nc_pvt_select_output(nc_pvt_driver_t *instance, uint32_t group_id, uint32_t sel)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
group_id	uint32_t	PVT group id
sel	uint32_t	probe point value
[표 20] nc_pvt_select_output() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 19] nc_pvt_select_output() 제어 흐름도
5.2.5.7. [SWF-PVT-009] nc_pvt_get_output()
Description	Reads the output value of the probe point and returns the average value.
Prototype	static uint32_t nc_pvt_get_output(nc_pvt_driver_t *instance, uint32_t group_id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
uint32_t	PVT Average
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
group_id	uint32_t	PVT group id
[표 21] nc_pvt_get_output() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 20] nc_pvt_get_output() 제어 흐름도

5.2.5.8. [SWF-PVT-010] nc_pvt_two_point_calibration()
Description	Perform 2-point calibration of PVT.
Prototype	static float nc_pvt_two_point_calibration(float D_OPT_25, float D_OPT_85, float D_OTP_SL, float D_SENSOR)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
float	Calculated Calibration Value
Parameter
Variable Name	Type	Spec. Designation
D_OPT_25 	float	OTP25 calibration value
D_OPT_85 	float	OTP85 calibration value
D_OTP_SL 	float	D_OTP_SL value
D_SENSOR 	float	D_SENSOR value
[표 22] nc_pvt_two_point_calibration() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 21] nc_pvt_two_point_calibration() 제어 흐름도
5.2.5.9. [SWF-PVT-011] nc_pvt_voltage_calibration()
Description	Perform voltage calibration of PVT.
Prototype	static float nc_pvt_voltage_calibration(float D_SENSOR)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
float	Calculated Calibration Value
Parameter
Variable Name	Type	Spec. Designation
D_SENSOR	float	D_SENSOR value
[표 23] nc_pvt_voltage_calibration() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 22] nc_pvt_voltage_calibration() 제어 흐름도
5.2.5.10. [SWF-PVT-012] nc_pvt_ioctl_get_temperature_data()
Description	Read temperature data.
Prototype	static Error nc_pvt_ioctl_get_temperature_data(nc_pvt_driver_t *instance, pvt_temperature_data_t *data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
data	pvt_temperature_data_t*	Temperature data buffer
[표 24] nc_pvt_ioctl_get_temperature_data() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 23] nc_pvt_ioctl_get_temperature_data() 제어 흐름도
5.2.5.11. [SWF-PVT-013] nc_pvt_ioctl_get_voltage_data()
Description	Read voltage value.
Prototype	static Error nc_pvt_ioctl_get_voltage_data(nc_pvt_driver_t *instance, pvt_voltage_data_t *data)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PVT-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pvt_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of pvt hw register
data_set - calibration data set
data	pvt_voltage_data_t*	Voltage data buffer
[표 25] nc_pvt_ioctl_get_voltage_data() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 24] nc_pvt_ioctl_get_voltage_data() 제어 흐름도
1. 일반 기능 단위 설계(Unit Description)
1.1. [SWU-PWM-001] pwm_kernel_driver
pwm_kernel_driver 유닛은 커널 부팅 시 PWM의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
1.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
1.1.2. Defined Parameters
Name	Description	Value
DEFAULT_DIVIDER_MUX 	Defualt divider mux value	0U
DEFAULT_PRESCALER   	Default prescaler value	1U
[표 4] Defined Parameters
1.1.3. Constraint
N/A
1.1.4. Unit Interface 
N/A
1.1.5. Unit Function
1.1.5.1. [SWF-PWM-001] nc_pwm_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline pwm_kernel_driver_t *nc_pwm_kernel_get_instance(uint32_t dev_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
pwm_kernel_driver_t*	Pwm Driver Instance
Parameter
Variable Name	Type	Spec. Designation
dev_num	uint32_t	channel number
[표 5] nc_pwm_kernel_get_instance() Description

1.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_pwm_kernel_get_instance() 제어 흐름도
1.1.5.2. [SWF-PWM-002] nc_pwm_update_buffer_counter()
Description	Update the buffer count of pwm.
Prototype	static void nc_pwm_update_buffer_counter(pwm_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
[표 6] nc_pwm_update_buffer_counter() Description

1.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_pwm_update_buffer_counter() 제어 흐름도
1.1.5.3. [SWF-PWM-003] nc_pwm_update_timing_param()
Description	Update the timing parameter of pwm.
Prototype	static void nc_pwm_update_timing_param(pwm_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
[표 7] nc_pwm_update_timing_param() Description
1.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_pwm_update_timing_param() 제어 흐름도
1.1.5.4. [SWF-PWM-004] nc_pwm_set_resolution()
Description	Set resolution of PWM.
Prototype	static Error nc_pwm_set_resolution(pwm_kernel_driver_t *instance, uint32_t request_period_ns)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
request_period_ns	uint32_t	Period value
[표 8] nc_pwm_set_resolution() Description

1.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_pwm_set_resolution() 제어 흐름도
1.1.5.5. [SWF-PWM-005] nc_pwm_set_duty_rate()
Description	Set duty rate of PWM.
Prototype	static Error nc_pwm_set_duty_rate(pwm_kernel_driver_t *instance, uint32_t request_duty_rate_ns)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
request_duty_rate_ns	uint32_t	PWM duty rate
[표 9] nc_pwm_set_duty_rate() Description

1.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_pwm_set_duty_rate() 제어 흐름도
1.1.5.6. [SWF-PWM-006] nc_pwm_set_dead_zone()
Description	Set dead zone of PWM.
Prototype	static Error nc_pwm_set_dead_zone(pwm_kernel_driver_t *instance, uint32_t request_dead_zone_ns)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
request_dead_zone_ns	uint32_t	PWM dead zone value
[표 10] nc_pwm_set_dead_zone() Description

1.1.5.6.1. Control Flow Diagram
 
[그림 11] nc_pwm_set_dead_zone() 제어 흐름도
1.1.5.7. [SWF-PWM-007] nc_pwm_set_polarity()
Description	Set polarity of PWM.
Prototype	static void nc_pwm_set_polarity(pwm_kernel_driver_t *instance, uint32_t polarity)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
polarity	uint32_t	PWM polarity value
[표 11] nc_pwm_set_polarity() Description

1.1.5.7.1. Control Flow Diagram
 
[그림 12] nc_pwm_set_polarity() 제어 흐름도
1.1.5.8. [SWF-PWM-008] nc_pwm_run()
Description	Run PWM.
Prototype	static void nc_pwm_run(pwm_kernel_driver_t *instance, uint32_t mode)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
mode	uint32_t	Auto reload mode
[표 12] nc_pwm_run() Description

1.1.5.8.1. Control Flow Diagram
 
[그림 13] nc_pwm_run() 제어 흐름도
1.1.5.9. [SWF-PWM-009] nc_pwm_stop()
Description	Stop PWM
Prototype	static void nc_pwm_stop(pwm_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	pwm_kernel_driver_t*	iod - IODevice Handle
ioaddr - virtual base address of pwm hw register
khwclock - Clock struct
irq_num - PWM IRQ number
gpio - GPIO pin
timing_param - PWM timing parameter
dev_name - Device name
irq_name - IRQ name
[표 13] nc_pwm_stop() Description
1.1.5.9.1. Control Flow Diagram
 
[그림 14] nc_pwm_stop() 제어 흐름도
1.1.5.10. [SWF-PWM-010] nc_pwm_kernel_exception_handler()
Description	Clear pending kernel exceptions.
Prototype	static EVENT nc_pwm_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Event	Event Handled
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	Extended exception frame
id	Address	Callback parameter
[표 14] nc_pwm_kernel_exception_handler() Description
1.1.5.10.1. Control Flow Diagram
 
[그림 15] nc_pwm_kernel_exception_handler() 제어 흐름도
1.1.5.11. [SWF-PWM-011] nc_pwm_kernel_read_command()
Description	Get timing parameter of PWM.
Prototype	static Error nc_pwm_kernel_read_command(IODeviceVector iod, Value command, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	Command value
buf	void*	Buffer pointer
len	Address	Data length
[표 15] nc_pwm_kernel_read_command() Description
1.1.5.11.1. Control Flow Diagram
 
[그림 16] nc_pwm_kernel_read_command() 제어 흐름도
1.1.5.12. [SWF-PWM-012] nc_pwm_kernel_write_command()
Description	Performs actions appropriate to the PWM command.
Prototype	static Error nc_pwm_kernel_write_command(IODeviceVector iod, Value command, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-002
Return
Type	Spec. Designation
Error	SUCCESS or FAILURE
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	Command value
val	Value	Input value
[표 16] nc_pwm_kernel_write_command() Description
1.1.5.12.1. Control Flow Diagram
 
[그림 17] nc_pwm_kernel_write_command() 제어 흐름도
1.1.5.13. [SWF-PWM-013] nc_pwm_kernel_probe()
Description	Get ready to use PWM.
Prototype	static Error nc_pwm_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	Device tree node
match_name	const char*	Match name
[표 17] nc_pwm_kernel_probe() Description
1.1.5.13.1. Control Flow Diagram
 
[그림 18] nc_pwm_kernel_probe() 제어 흐름도
1.2. [SWU-PWM-002] pwm_driver
pwm_driver 유닛은 User가 PWM의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 PWM 초기화, Set Period/Deuty/Dead Zone/Polarity, Run, Stop이다.
1.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 18] 전역 변수
1.2.2. Defined Parameters
Name	Description	Value
N/A     	N/A	N/A
[표 19] Defined Parameters
1.2.3. Constraint
N/A
1.2.4. Unit Interface 
1.2.4.1. [SUI-PWM-001] nc_pwm_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_pwm_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 20] nc_pwm_probe() Description
1.2.4.1.1. Control Flow Diagram
 
[그림 19] nc_pwm_probe() 제어 흐름도
1.2.4.2. [SUI-PWM-002] nc_pwm_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_pwm_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address of driver instance handle
command	Value	command value
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 21] nc_pwm_ioctl() Description
1.2.4.2.1. Control Flow Diagram
 
[그림 20] nc_pwm_ioctl() 제어 흐름도
1.2.4.3. [SUI-PWM-003] nc_pwm_ioctl_initialize()
Description	Initialize PWM.
Prototype	static Error nc_pwm_ioctl_initialize(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 22] nc_pwm_ioctl_initialize() Description
1.2.4.3.1. Control Flow Diagram
 
[그림 21] nc_pwm_ioctl_initialize() 제어 흐름도
1.2.4.4. [SUI-PWM-004] nc_pwm_ioctl_set_period()
Description	Set period of PWM.
Prototype	static Error nc_pwm_ioctl_set_period(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 23] nc_pwm_ioctl_set_period() Description
1.2.4.4.1. Control Flow Diagram
 
[그림 22] nc_pwm_ioctl_set_period() 제어 흐름도
1.2.4.5. [SUI-PWM-005] nc_pwm_ioctl_set_duty_rate()
Description	Set duty rate of PWM.
Prototype	static Error nc_pwm_ioctl_set_duty_rate(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 24] nc_pwm_ioctl_set_duty_rate() Description
1.2.4.5.1. Control Flow Diagram
 
[그림 23] nc_pwm_ioctl_set_duty_rate() 제어 흐름도
1.2.4.6. [SUI-PWM-006] nc_pwm_ioctl_set_dead_zone()
Description	Set dead zone.
Prototype	static Error nc_pwm_ioctl_set_dead_zone(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 25] nc_pwm_ioctl_set_dead_zone() Description
1.2.4.6.1. Control Flow Diagram
 
[그림 24] nc_pwm_ioctl_set_dead_zone() 제어 흐름도
1.2.4.7. [SUI-PWM-007] nc_pwm_ioctl_set_polarity()
Description	Set the priority level of PWM.
Prototype	static Error nc_pwm_ioctl_set_polarity(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 26] nc_pwm_ioctl_set_polarity() Description
1.2.4.7.1. Control Flow Diagram
 
[그림 25] nc_pwm_ioctl_set_polarity() 제어 흐름도 
1.2.4.8. [SUI-PWM-008] nc_pwm_ioctl_run()
Description	Run PWM.
Prototype	static Error nc_pwm_ioctl_run(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 27] nc_pwm_ioctl_run() Description
1.2.4.8.1. Control Flow Diagram
 
[그림 26] nc_pwm_ioctl_run() 제어 흐름도
1.2.4.9. [SUI-PWM-009] nc_pwm_ioctl_stop()
Description	Stop PWM.
Prototype	static Error nc_pwm_ioctl_stop(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 28] nc_pwm_ioctl_stop() Description
1.2.4.9.1. Control Flow Diagram
 
[그림 27] nc_pwm_ioctl_stop() 제어 흐름도
1.2.4.10. [SUI-PWM-010] nc_pwm_ioctl_set_enable_interrupt()
Description	Set interrupt.
Prototype	static Error nc_pwm_ioctl_set_enable_interrupt(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 29] nc_pwm_ioctl_set_enable_interrupt() Description
1.2.4.10.1. Control Flow Diagram
 
[그림 28] nc_pwm_ioctl_set_enable_interrupt() 제어 흐름도
1.2.4.11. [SUI-PWM-011] nc_pwm_ioctl_get_timing_parameter()
Description	Get timing parameter.
Prototype	static Error nc_pwm_ioctl_get_timing_parameter(nc_pwm_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_pwm_driver_t*	instance handle
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 30] nc_pwm_ioctl_get_timing_parameter() Description
1.2.4.11.1. Control Flow Diagram
 
[그림 29] nc_pwm_ioctl_get_timing_parameter() 제어 흐름도
1.2.5. Unit Function
1.2.5.1. [SWF-PWM-014] nc_pwm_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_pwm_driver_t *nc_pwm_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
nc_pwm_driver_t*	PWM Driver Instance
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel number
[표 31] nc_pwm_get_instance() Description
1.2.5.1.1. Control Flow Diagram
 
[그림 30] nc_pwm_get_instance() 제어 흐름도
1.2.5.2. [SWF-PWM-015] nc_pwm_initialize()
Description	Initialize PWM.
Prototype	static Error nc_pwm_initialize(nc_pwm_driver_t *instance, nc_pwm_init_param_t *init_param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-PWM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_pwm_driver_t*	Driver instance handle
init_param	nc_pwm_init_param_t*	period_ns - PWM period
duty_rate_ns - PWM duty rate
dead_zone_ns - PWM dead zone
polarity - PWM polarity
is_using_intr - PWM interrupt enable
intrt_receiver - PWM interrupt receiver
[표 32] nc_pwm_initialize() Description
1.2.5.2.1. Control Flow Diagram
 
[그림 31] nc_pwm_initialize() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-RDT-001] RDT_sm
RDT_sm 유닛은 Redundant Timer에서 Error가 발생 시 SE에 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-RDT-001] redundant_timer_task()
Description	Run redundant timer task.
Prototype	Value redundant_timer_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-RDT-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	address parameter
[표 5] redundant_timer_task() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] redundant_timer_task() 제어 흐름도
5.1.5. Unit Function 
5.1.5.1. [SWF-RDT-001] nc_set_redundant_timer_monitor_offset()
Description	Set fault and irq offset of RDT.
Prototype	static void nc_set_redundant_timer_monitor_offset(nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-RDT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
offset_instance	nc_safety_engine_offset_t*	Safety engine offset
[표 6] nc_set_redundant_timer_monitor_offset() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_set_redundant_timer_monitor_offset() 제어 흐름도
5.1.5.2. [SWF-RDT-002] nc_get_redundant_timer_monitor_mask_value()
Description	Set WDT mask in the RDT.
Prototype	static void nc_get_redundant_timer_monitor_mask_value(nc_safety_engine_offset_t *offset_instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-RDT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
offset_instance	nc_safety_engine_offset_t*	Safety engine offset
[표 7] nc_get_redundant_timer_monitor_mask_value() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_get_redundant_timer_monitor_mask_value() 제어 흐름도
5.1.5.3. [SWF-RDT-003] nc_start_redundant_timer_monitor()
Description	Start RDT.
Prototype	static void nc_start_redundant_timer_monitor(nc_redundant_timer_sm_t *instance, nc_safety_engine_offset_t offset_instance, Value mask_value)	
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-RDT-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_redundant_timer_sm_t*	common_config - Safety Engine config handle
rdt_config - RDT initial config
iod - Device IODevice Vector Handle
ioaddr - Device Handling descriptor
offset_instance	nc_safety_engine_offset_t	Safety engine offset
mask_value	Value	mask value
[표 8] nc_start_redundant_timer_monitor() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_start_redundant_timer_monitor() 제어 흐름도
5.1.5.4. [SWF-RDT-004] nc_monitor_redundant_timer()
Description	Monitor RDT.
Prototype	static Error nc_monitor_redundant_timer(nc_redundant_timer_sm_t *fault_param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-RDT-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
fault_param	nc_redundant_timer_sm_t*	common_config - Safety Engine config handle
rdt_config - RDT initial config
iod - Device IODevice Vector Handle
ioaddr - Device Handling descriptor
[표 9] nc_monitor_redundant_timer() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_monitor_redundant_timer() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-SE-001] safety_engine_kernel_driver
safety_engine_kernel_driver 유닛은 커널 부팅 시 SE의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
SIZE_OF_EXPORTED_SAFETY_ENGINE_IOADDR_NAME	SE IO Address Name Size	29
SIZE_OF_SAFETY_ENGINE_IRQ_NAME	SE IRQ Name Size	26
SE_SYSCAL_RD_CMD_GET_CLOCK_VALUE	Read System Call Value	0
SE_SYSCALL_RD_CMD_GET_HW_FT_STATUS	Read System Call Value	1
SE_SYSCALL_RD_CMD_GET_SW_FT_STATUS	Read System Call Value	2
SE_SYSCALL_RD_CMD_CHK_BOOT_SEQ_STAT	Read System Call Value	3
SE_SYSCALL_WR_CMD_SET_SW_FAULT	Write System Call Value	1
SE_SYSCALL_WR_CMD_SW_FT_TRANS_SAFE_STATE	Write System Call Value	2
SE_SYSCALL_WR_CMD_SET_SE_STATE	Write System Call Value	3
SE_SYSCALL_WR_CMD_SET_SE_MODE	Write System Call Value	4
SE_SYSCALL_WR_CMD_CLEAR_FAULT	Write System Call Value	5
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function 
5.1.5.1. [SWF-SE-001] nc_safety_engine_CM_switch_mode()
Description	Switch SafetyEngine Mode and disable SafetyEngine.
Prototype	static void nc_safety_engine_CM_switch_mode(safety_engine_kernel_driver_t *instance, Value offset)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	safety_engine_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - Safety_engine virtual base address
boot_ioaddr - BootSequenceMonitor virtual base address
transfer_param - Received parameter from safety engine kernel driver
khwclock - Clock Monitoring Component clock info
irq_num - GIC Interrupt number
ioaddr_name - Device IODevice io address name
irq_name - Device IODevice interrupt name
offset	Value	register offset
[표 5] nc_safety_engine_CM_switch_mode() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_safety_engine_CM_switch_mode() 제어 흐름도
5.1.5.2. [SWF-SE-002] nc_safety_engine_CM_kernel_check_status()
Description	Check SafetyEngine State.
Prototype	static Error nc_safety_engine_CM_kernel_check_status(safety_engine_kernel_driver_t *instance, Address offset)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
ERROR	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	safety_engine_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - Safety_engine virtual base address
boot_ioaddr - BootSequenceMonitor virtual base address
transfer_param - Received parameter from safety engine kernel driver
khwclock - Clock Monitoring Component clock info
irq_num - GIC Interrupt number
ioaddr_name - Device IODevice io address name
irq_name - Device IODevice interrupt name
offset	Address	register offset
[표 6] nc_safety_engine_CM_kernel_check_status() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_safety_engine_CM_kernel_check_status() 제어 흐름도
5.1.5.3. [SWF-SE-003] nc_safety_engine_print_fault()
Description	Print SafetyEngine Fault value.
Prototype	static void nc_safety_engine_print_fault(Value reg)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
reg	Value	fault register value
[표 7] nc_safety_engine_print_fault() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_safety_engine_print_fault() 제어 흐름도
5.1.5.4. [SWF-SE-004] nc_safety_engine_kernel_copy_fault()
Description	Copy HW Fault status & IP.
Prototype	static void nc_safety_engine_kernel_copy_fault(safety_engine_kernel_driver_t *instance, Address fault_bit)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	safety_engine_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - Safety_engine virtual base address
boot_ioaddr - BootSequenceMonitor virtual base address
transfer_param - Received parameter from safety engine kernel driver
khwclock - Clock Monitoring Component clock info
irq_num - GIC Interrupt number
ioaddr_name - Device IODevice io address name
irq_name - Device IODevice interrupt name
fault_bit	Address	fault value
[표 8] nc_safety_engine_kernel_copy_fault() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 9] nc_safety_engine_kernel_copy_fault() 제어 흐름도
5.1.5.5. [SWF-SE-005] nc_safety_engine_kernel_clear_fault()
Description	Clear SafetyEngine Fault IRQ (for ClockMonitoring & ip FaultMonitoring).
Prototype	static void nc_safety_engine_kernel_clear_fault(safety_engine_kernel_driver_t *instance, Address fault_bit)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	safety_engine_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - Safety_engine virtual base address
boot_ioaddr - BootSequenceMonitor virtual base address
transfer_param - Received parameter from safety engine kernel driver
khwclock - Clock Monitoring Component clock info
irq_num - GIC Interrupt number
ioaddr_name - Device IODevice io address name
irq_name - Device IODevice interrupt name
fault_bit	Address	fault register vaule
[표 9] nc_safety_engine_kernel_clear_fault() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 10] nc_safety_engine_kernel_clear_fault() 제어 흐름도
5.1.5.6. [SWF-SE-006] nc_safety_engine_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_safety_engine_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
EVENT	EVENT_HANDLED
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME *	extended exception frame
id	Address	callback parameter
[표 10] nc_safety_engine_kernel_exception_handler() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 11] nc_safety_engine_kernel_exception_handler() 제어 흐름도
5.1.5.7. [SWF-SE-007] nc_safety_engine_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_safety_engine_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-002
Return
Type	Spec. Designation
Error	Success or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	combine of ID and command number
buf	Value*	buffer address of architecture-value
[표 11] nc_safety_engine_kernel_read_command() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 12] nc_safety_engine_kernel_read_command() 제어 흐름도
5.1.5.8. [SWF-SE-008] nc_safety_engine_kernel_write_command()
Description	Performs an io request for irq-iodevice by calling the WriteIODeviceRegister function from user-space.
Prototype	static Error nc_safety_engine_kernel_write_command(IODeviceVector iod, Value command, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-002
Return
Type	Spec. Designation
Error	Success or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
val	Value	write value
[표 12] nc_safety_engine_kernel_write_command() Description
5.1.5.8.1. Control Flow Diagram
 
[그림 13] nc_safety_engine_kernel_write_command() 제어 흐름도
5.1.5.9. [SWF-SE-009] nc_safety_engine_kernel_probe()
Description	Performs hw resource initialization of safety_engine at kernel-boot time.
Prototype	static Error nc_safety_engine_kernel_probe(DevTree_Node node, const char *match_name)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char *	compatible-name of device-tree node
[표 13] nc_safety_engine_kernel_probe() Description
5.1.5.9.1. Control Flow Diagram
 
[그림 14] nc_safety_engine_kernel_probe() 제어 흐름도
5.1.5.10. [SWF-SE-010] nc_safety_engine_kernel_get_instance()
Description	Returns the instance handle.
Prototype	static inline safety_engine_kernel_driver_t *nc_safety_engine_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
safety_engine_kernel_driver_t*	Safety engine instance handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 14] nc_safety_engine_kernel_get_instance() Description
5.1.5.10.1. Control Flow Diagram
 
[그림 15] nc_safety_engine_kernel_get_instance() 제어 흐름도
5.2. [SWU-SE-002] safety_engine_driver
safety_engine_driver 유닛은 User가 SE의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 SE 초기화, Set Fault, Clear Fault Status이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 15] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
NUM_OF_SAFETY_ENGINE_BUS	SE Bus Number	1
SE_SYSCALL_RD_CMD_GET_HW_FT_STATUS	Read System Call Value	1
SE_SYSCALL_RD_CMD_GET_SW_FT_STATUS	Read System Call Value	2
SE_SYSCALL_WR_CMD_SET_SW_FAULT	Write System Call Value	1
SE_SYSCALL_WR_CMD_SW_FT_TRANS_SAFE_STATE	Write System Call Value	2
SE_SYSCALL_WR_CMD_SET_SE_STATE	Write System Call Value	3
SE_SYSCALL_WR_CMD_SET_SE_MODE	Write System Call Value	4
SE_SYSCALL_WR_CMD_CLEAR_FAULT	Write System Call Value	5
[표 16] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-SE-001] nc_safety_engine_probe()
Description	Initialize and register safety_engine.
Prototype	static Error nc_safety_engine_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	DeviceTree Node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 17] nc_safety_engine_probe() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 16] nc_safety_engine_probe() 제어 흐름도
5.2.4.2. [SUI-SE-002] nc_safety_engine_ioctl_set_mode()
Description	Set Safety Engine driver operation mode.
Prototype	static Error nc_safety_engine_ioctl_set_mode(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success or IllegalObjectNumber
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
param_len	size_t	parameter length
[표 18] nc_safety_engine_ioctl_set_mode() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 17] nc_safety_engine_ioctl_set_mode() 제어 흐름도
5.2.4.3. [SUI-SE-003] nc_safety_engine_ioctl_control_enable()
Description	Enable Safety Engine driver.
Prototype	static Error nc_safety_engine_ioctl_control_enable(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
size_t	param_len	parameter length
[표 19] nc_safety_engine_ioctl_control_enable() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 18] nc_safety_engine_ioctl_control_enable() 제어 흐름도
5.2.4.4. [SUI-SE-004] nc_safety_engine_ioctl_sw_fault_clear()
Description	Clear Fault Status Register Manually.
Prototype	static Error nc_safety_engine_ioctl_sw_fault_clear(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
size_t	param_len	parameter length
[표 20] nc_safety_engine_ioctl_sw_fault_clear() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 19] nc_safety_engine_ioctl_sw_fault_clear() 제어 흐름도
5.2.4.5. [SUI-SE-005] nc_safety_engine_ioctl_read_status()
Description	Read Fault status through ReadIODeviceRegister() , SE_SYSCALL_RD_CMD_GET_HW_FT_STATUS command.
Prototype	static Error nc_safety_engine_ioctl_read_status(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	Parameter
size_t	param_len	parameter length
[표 21] nc_safety_engine_ioctl_read_status() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 20] nc_safety_engine_ioctl_read_status() 제어 흐름도
5.2.4.6. [SUI-SE-006] nc_safety_engine_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_safety_engine_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 22] nc_safety_engine_ioctl() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 21] nc_safety_engine_ioctl() 제어 흐름도
5.2.4.7. [SUI-SE-007] nc_safety_engine_ioctl_get_ioaddr()
Description	Get viurtual IOAddress from kernel space.
Prototype	static Error nc_safety_engine_ioctl_get_ioaddr(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
Error	Success or NULLObjectSpecified
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
param_len	size_t	parameter length
[표 23] nc_safety_engine_ioctl_get_ioaddr() Description
5.2.4.7.1. Control Flow Diagram
 
[그림 22] nc_safety_engine_ioctl_get_ioaddr() 제어 흐름도
5.2.4.8. [SUI-SE-008] nc_safety_engine_ioctl_hw_fault_clear()
Description	Clear HW Fault Status Register Manually.
Prototype	static Error nc_safety_engine_ioctl_hw_fault_clear(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
param_len	size_t	parameter length
[표 24] nc_safety_engine_ioctl_hw_fault_clear() Description
5.2.4.8.1. Control Flow Diagram
 
[그림 23] nc_safety_engine_ioctl_hw_fault_clear() 제어 흐름도
5.2.4.9. [SUI-SE-009] nc_safety_engine_ioctl_set_sw_fault()
Description	Write SW defined fault.
Prototype	static Error nc_safety_engine_ioctl_set_sw_fault(nc_safety_engine_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_safety_engine_driver_t*	iod - IODevice Handle
ioaddr - Virtual base address of safety_engine hw register
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
param	Address	parameter
param_len	size_t	parameter length
[표 25] nc_safety_engine_ioctl_set_sw_fault() Description
5.2.4.9.1. Control Flow Diagram
 
[그림 24] nc_safety_engine_ioctl_set_sw_fault() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-SE-011] nc_safety_engine_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static nc_safety_engine_driver_t *nc_safety_engine_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-SE-001
Return
Type	Spec. Designation
nc_safety_engine_driver_t*	Instance handler
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 26] nc_safety_engine_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 25] nc_safety_engine_get_instance() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-SF-001] nor_flash_driver
nor_flash_driver 유닛은 User가 flash의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 sFlash Device Scan, Single/Quad Mode Setting, Data Read/Write/Erase이다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
NOR_FLASH_CONTROLLER_COMPATIBLE	sFlash device name	("snps,dw-apb-ssi")
NUM_OF_NOR_FLASH	sFlash number	(1U)
NOR_FLASH_DEFAULT_SCLK	sFlash default clock speed	(34U * MHz)
NOR_FLASH_MAX_OP_LEN	sFlash command length	(5U)
NOR_FLASH_ADDR24_OP_LEN	sFlash command length	(4U)
NOR_FLASH_ADDR32_OP_LEN	sFlash command length	5
DEFAULT_TIMEOUT_MS	Default timeout 100ms	(100000U)
NOR_DEFAULT_ERASE_TIMEOUT	Erase timeout 400ms	(400000U)
NOR_DEFAULT_PAGE_PROGRAM_TIMEOUT	Page program timeout 20ms	(20000U)
NUM_OF_SCAN_HWCAP	Number of HW capability	(2U)
CASE_SPI_RD_BACK_ERROR	Safety mechanism number	((Address)4UL)
CASE_SPI_TIMEOUT_ERROR	Safety mechanism number	((Address)6UL)
NOR_MFR_GIGADEVICE	FLASH_ID_GIGA	0xC8
NOR_MFR_ST	FLASH_ID_MICRON	0x20
NOR_MFR_SPANSION	FLASH_ID_CYPRESS	0x01
NOR_MFR_SST	FLASH ID	0xBF
NOR_MFR_WINBOND	FLASH ID WINBOND	0xEF
SZ_4KB	Size 4Kb	0x00001000
NOR_LEN_PER_BANK	Flash Size	0x01000000
NOR_OP_READ	READ ID Operations	0x03
NOR_OP_QUAD_FAST_READ_1_1_4	READ MEMORY Operations	0x6b
NOR_OP_QUAD_FAST_READ_1_4_4	READ MEMORY Operations	0xeb
NOR_OP_4BYTE_READ	READ MEMORY Operations with 4-Byte Address	0x13
NOR_OP_4BYTE_QUAD_FAST_READ_1_1_4	READ MEMORY Operations with 4-Byte Address	0x6c
NOR_OP_4BYTE_QUAD_FAST_READ_1_4_4	READ MEMORY Operations with 4-Byte Address	0xec
NOR_OP_PAGE_PROGRAM	PROGRAM Operations	0x02
NOR_OP_QUAD_FAST_PROGRAM_1_1_4	PROGRAM Operations	0x32
NOR_OP_QUAD_FAST_PROGRAM_1_4_4	PROGRAM Operations	0x38
NOR_OP_4BYTE_PAGE_PROGRAM	PROGRAM Operations with 4-Byte Address	0x12
NOR_OP_4BYTE_QUAD_FAST_PROGRAM_1_1_4	PROGRAM Operations with 4-Byte Address	0x34
NOR_OP_4BYTE_QUAD_FAST_PROGRAM_1_4_4	PROGRAM Operations with 4-Byte Address	0x3e
NOR_OP_4KB_SUB_SECTOR_ERASE	ERASE Operations	0x20
NOR_OP_4BYTE_4KB_SUB_SECTOR_ERASE	ERASE Operations with 4-Byte Address	0x21
NOR_OP_WRITE_ENABLE	WRITE Operations	0x06
NOR_OP_READ_STATUS	READ REGISTER Operations	0x05
NOR_OP_READ_STATUS2	READ REGISTER Operations	0x3f
NOR_OP_READ_CONFIGURE	READ REGISTER Operations	0x35
NOR_OP_WRITE_STATUS	WRITE REGISTER Operations	0x01
NOR_OP_WRITE_STATUS2	WRITE REGISTER Operations	0x3e
NOR_OP_WRITE_STATUS3	WRITE REGISTER Operations	0x31
NOR_OP_BRWR	Used for Spansion flashes only	0x17
NOR_QUAD_EN_BIT6_MASK	lag Status Register Structure	6
NOR_QUAD_EN_BIT7_MASK	lag Status Register Structure	7
NOR_QUAD_EN_BIT1_MASK	lag Status Register Structure	1
NC_NOR_FLASH_IOCTL_EXEC_ERASE	Falsh Ioctl Value	0
NC_NOR_FLASH_IOCTL_EXEC_PAGE_PROGRAM_1_1_1	Falsh Ioctl Value	1
NC_NOR_FLASH_IOCTL_EXEC_PAGE_PROGRAM_1_1_4	Falsh Ioctl Value	2
NC_NOR_FLASH_IOCTL_EXEC_PAGE_PROGRAM_1_4_4	Falsh Ioctl Value	3
NC_NOR_FLASH_IOCTL_EXEC_READ_1_1_1	Falsh Ioctl Value	4
NC_NOR_FLASH_IOCTL_EXEC_FAST_READ_1_1_4	Falsh Ioctl Value	5
NC_NOR_FLASH_IOCTL_EXEC_FAST_READ_1_4_4	Falsh Ioctl Value	6
NC_NOR_FLASH_SET_SCLK	Falsh Ioctl Value	7
NC_NOR_FLASH_SET_CLOCK_PROPERTY	Falsh Ioctl Value	8
NC_NOR_FLASH_IOCTL_SAFE_EXEC_PAGE_PROGRAM_1_1_1	Falsh Ioctl Value	9
NC_NOR_FLASH_IOCTL_SAFE_EXEC_PAGE_PROGRAM_1_1_4	Falsh Ioctl Value	10
NC_NOR_FLASH_IOCTL_SAFE_EXEC_PAGE_PROGRAM_1_4_4	Falsh Ioctl Value	11
NC_MAX_OF_NOR_FLASH_IOCTL	Falsh Ioctl Value	12
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-SF-001] nc_nor_flash_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_nor_flash_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 5] nc_nor_flash_probe() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] nc_nor_flash_probe() 제어 흐름도
5.1.4.2. [SUI-SF-002] nc_nor_flash_open()
Description	This function is a porting layer of the driver open interface and performs additional tasks when opening the driver.
Prototype	static Error nc_nor_flash_open(Address handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
[표 6] nc_nor_flash_open() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 7] nc_nor_flash_open() 제어 흐름도
5.1.4.3. [SUI-SF-003] nc_nor_flash_close()
Description	This function is a porting layer of the driver close interface and performs additional tasks when closing the driver.
Prototype	static Error nc_nor_flash_close(Address handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
[표 7] nc_nor_flash_close() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 8] nc_nor_flash_close() 제어 흐름도
5.1.4.4. [SUI-SF-004] nc_nor_flash_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_nor_flash_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 8] nc_nor_flash_ioctl() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 9] nc_nor_flash_ioctl() 제어 흐름도
5.1.4.5. [SUI-SF-005] nc_nor_flash_ioctl_exec_erase()
Description	Performs data erase of the requested flash region.
Prototype	static Error nc_nor_flash_ioctl_exec_erase(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure or IllegalAlignment
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 9] nc_nor_flash_ioctl_exec_erase() Description
5.1.4.5.1. Control Flow Diagram
 
[그림 10] nc_nor_flash_ioctl_exec_erase() 제어 흐름도
5.1.4.6. [SUI-SF-006] nc_nor_flash_ioctl_exec_page_programe_1_1_1()
Description	Write data to flash in single spi mode.
Prototype	static Error nc_nor_flash_ioctl_exec_page_programe_1_1_1(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 10] nc_nor_flash_ioctl_exec_page_programe_1_1_1() Description
5.1.4.6.1. Control Flow Diagram
 
[그림 11] nc_nor_flash_ioctl_exec_page_programe_1_1_1() 제어 흐름도
5.1.4.7. [SUI-SF-007] nc_nor_flash_ioctl_exec_page_programe_1_1_4()
Description	Write data to flash in quad spi mode.
Prototype	static Error nc_nor_flash_ioctl_exec_page_programe_1_1_4(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 11] nc_nor_flash_ioctl_exec_page_programe_1_1_4() Description
5.1.4.7.1. Control Flow Diagram
 
[그림 12] nc_nor_flash_ioctl_exec_page_programe_1_1_4() 제어 흐름도
5.1.4.8. [SUI-SF-008] nc_nor_flash_ioctl_exec_page_programe_1_4_4()
Description	Write data to flash in quad spi mode.
Prototype	static Error nc_nor_flash_ioctl_exec_page_programe_1_4_4(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 12] nc_nor_flash_ioctl_exec_page_programe_1_4_4() Description
5.1.4.8.1. Control Flow Diagram
 
[그림 13] nc_nor_flash_ioctl_exec_page_programe_1_4_4() 제어 흐름도
5.1.4.9. [SUI-SF-009] nc_nor_flash_ioctl_exec_read_1_1_1()
Description	Read data from flash in single spi mode.
Prototype	static Error nc_nor_flash_ioctl_exec_read_1_1_1(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 13] nc_nor_flash_ioctl_exec_read_1_1_1() Description
5.1.4.9.1. Control Flow Diagram
 
[그림 14] nc_nor_flash_ioctl_exec_read_1_1_1() 제어 흐름도
5.1.4.10. [SUI-SF-010] nc_nor_flash_ioctl_exec_fast_read_1_1_4()
Description	Read data from flash in quad spi mode.
Prototype	static Error nc_nor_flash_ioctl_exec_fast_read_1_1_4(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
Instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 14] nc_nor_flash_ioctl_exec_fast_read_1_1_4() Description
5.1.4.10.1. Control Flow Diagram
 
[그림 15] nc_nor_flash_ioctl_exec_fast_read_1_1_4() 제어 흐름도
5.1.4.11. [SUI-SF-011] nc_nor_flash_ioctl_exec_fast_read_1_4_4()
Description	Read data from flash in quad spi mode.
Prototype	static Error nc_nor_flash_ioctl_exec_fast_read_1_4_4(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 15] nc_nor_flash_ioctl_exec_fast_read_1_4_4() Description
5.1.4.11.1. Control Flow Diagram
 
[그림 16] nc_nor_flash_ioctl_exec_fast_read_1_4_4() 제어 흐름도
5.1.4.12. [SUI-SF-012] nc_nor_flash_ioctl_set_sclk()
Description	Set clock.
Prototype	static Error nc_nor_flash_ioctl_set_sclk(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 16] nc_nor_flash_ioctl_set_sclk() Description
5.1.4.12.1. Control Flow Diagram
 
[그림 17] nc_nor_flash_ioctl_set_sclk() 제어 흐름도
5.1.4.13. [SUI-SF-013] nc_nor_flash_ioctl_set_clock_property()
Description	Set clock-property.
Prototype	static Error nc_nor_flash_ioctl_set_clock_property(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 17] nc_nor_flash_ioctl_set_clock_property() Description
5.1.4.13.1. Control Flow Diagram
 
[그림 18] nc_nor_flash_ioctl_set_clock_property() 제어 흐름도
5.1.4.14. [SUI-SF-014] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1()
Description	Write data to flash in single spi mode.
Compare data from source and destination.
Prototype	static Error nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 18] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1() Description
5.1.4.14.1. Control Flow Diagram
 
[그림 19] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_1() 제어 흐름도
5.1.4.15. [SUI-SF-015] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4()
Description	Write data to flash in quad spi mode.
Compare data from source and destination.
Prototype	static Error nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 19] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4() Description
5.1.4.15.1. Control Flow Diagram
 
[그림 20] nc_nor_flash_ioctl_safe_exec_page_programe_1_1_4() 제어 흐름도
5.1.4.16. [SUI-SF-016] nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4()
Description	Write data to flash in quad spi mode.
Compare data from source and destination.
Prototype	static Error nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4(nc_nor_flash_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	parameter-length
[표 20] nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4() Description
5.1.4.16.1. Control Flow Diagram
 
[그림 21] nc_nor_flash_ioctl_safe_exec_page_programe_1_4_4() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-SF-001] nc_nor_flash_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static nc_nor_flash_driver_t *nc_nor_flash_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
nc_nor_flash_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 21] nc_nor_flash_get_instance() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 22] nc_nor_flash_get_instance() 제어 흐름도
5.1.5.2. [SWF-SF-002] nc_nor_flash_scan_device()
Description	spi-nor Performs a scan of the flash device and performs initialization when the device is detected.
Prototype	static Error nc_nor_flash_scan_device(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 22] nc_nor_flash_scan_device() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 23] nc_nor_flash_scan_device() 제어 흐름도
5.1.5.3. [SWF-SF-003] nc_nor_flash_set_default_config()
Description	Set default config in instance-handle
Prototype	static void nc_nor_flash_set_default_config(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 23] nc_nor_flash_set_default_config() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 24] nc_nor_flash_set_default_config() 제어 흐름도
5.1.5.4. [SWF-SF-004] nc_nor_flash_scan_hwcap_by_id()
Description	Perform initialization by identifying the model ID of spi-nor flash.
Prototype	static Error nc_nor_flash_scan_hwcap_by_id(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 24] nc_nor_flash_scan_hwcap_by_id() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 25] nc_nor_flash_scan_hwcap_by_id() 제어 흐름도
5.1.5.5. [SWF-SF-005] nc_nor_flash_scan_hwcap_by_sfdp()
Description	Perform initialization by JEDEC standard.
Prototype	static Error nc_nor_flash_scan_hwcap_by_sfdp(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 25] nc_nor_flash_scan_hwcap_by_sfdp() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 26] nc_nor_flash_scan_hwcap_by_sfdp() 제어 흐름도
5.1.5.6. [SWF-SF-006] nc_nor_flash_scan_sfdp_basic_param()
Description	Configure flash information by identifying sfdp basic parameters.
Prototype	static Error nc_nor_flash_scan_sfdp_basic_param(nc_nor_flash_driver_t *instance, uint32_t offset)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
offset	uint32_t	sfdp-parameter-offset
[표 26] nc_nor_flash_scan_sfdp_basic_param() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 27] nc_nor_flash_scan_sfdp_basic_param() 제어 흐름도
5.1.5.7. [SWF-SF-007] nc_nor_flash_scan_sfdp_4b_addr_inst_param()
Description	Configure flash information by identifying sfdp 4byte address instruction parameters.
Prototype	static Error nc_nor_flash_scan_sfdp_4b_addr_inst_param(nc_nor_flash_driver_t *instance, uint32_t offset)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
offset	uint32_t	sfdp-parameter-offset
[표 27] nc_nor_flash_scan_sfdp_4b_addr_inst_param() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 28] nc_nor_flash_scan_sfdp_4b_addr_inst_param() 제어 흐름도
5.1.5.8. [SWF-SF-008] nc_nor_flash_post_process_sfdp()
Description	Explicitly converts erase command information separated by type-id.
Prototype	static void nc_nor_flash_post_process_sfdp(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 28] nc_nor_flash_post_process_sfdp() Description
5.1.5.8.1. Control Flow Diagram
 
[그림 29] nc_nor_flash_post_process_sfdp() 제어 흐름도
5.1.5.9. [SWF-SF-009] nc_nor_flash_write_bank_register()
Description	Calculate the bank number of the specified flash offset, and if it is different from the current bank number, switch to the calculated bank.
Prototype	static Error nc_nor_flash_write_bank_register(nc_nor_flash_driver_t *instance, uint32_t offset)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
offset	uint32_t	data-offset-of-flash
[표 29] nc_nor_flash_write_bank_register() Description
5.1.5.9.1. Control Flow Diagram
 
[그림 30] nc_nor_flash_write_bank_register() 제어 흐름도
5.1.5.10. [SWF-SF-010] nc_nor_flash_exec_erase_area()
Description	Erase flash data in the requested area.
Prototype	static Error nc_nor_flash_exec_erase_area(nc_nor_flash_driver_t *instance, nc_nor_flash_erase_t *erase)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
erase	nc_nor_flash_erase_t*	erase-area-information
[표 30] nc_nor_flash_exec_erase_area() Description
5.1.5.10.1. Control Flow Diagram
 
[그림 31] nc_nor_flash_exec_erase_area() 제어 흐름도
5.1.5.11. [SWF-SF-011] nc_nor_flash_exec_single_page_program()
Description	Write data to flash in single spi mode.
Prototype	static Error nc_nor_flash_exec_single_page_program(nc_nor_flash_driver_t *instance, nc_nor_flash_rw_t *xfer)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
xfer	nc_nor_flash_rw_t*	addr - data offset
buf - data buffer
safety_buf - safety data buffer
len - transfer length
processed_len - processed length
[표 31] nc_nor_flash_exec_single_page_program() Description
5.1.5.11.1. Control Flow Diagram
 
[그림 32] nc_nor_flash_exec_single_page_program() 제어 흐름도
5.1.5.12. [SWF-SF-012] nc_nor_flash_exec_quad_page_program()
Description	Write data to flash in quad spi mode.
Prototype	static Error nc_nor_flash_exec_quad_page_program(nc_nor_flash_driver_t *instance, nc_nor_flash_rw_t *xfer)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
xfer	nc_nor_flash_rw_t*	addr - data offset
buf - data buffer
safety_buf - safety data buffer
len - transfer length
processed_len - processed length
[표 32] nc_nor_flash_exec_quad_page_program() Description
5.1.5.12.1. Control Flow Diagram
 
[그림 33] nc_nor_flash_exec_quad_page_program() 제어 흐름도
5.1.5.13. [SWF-SF-013] nc_nor_flash_exec_single_read()
Description	Read data from flash in single spi mode.
Prototype	static Error nc_nor_flash_exec_single_read(nc_nor_flash_driver_t *instance, nc_nor_flash_rw_t *xfer)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
xfer	nc_nor_flash_rw_t*	addr - data offset
buf - data buffer
safety_buf - safety data buffer
len - transfer length
processed_len - processed length
[표 33] nc_nor_flash_exec_single_read() Description
5.1.5.13.1. Control Flow Diagram
 
[그림 34] nc_nor_flash_exec_single_read() 제어 흐름도
5.1.5.14. [SWF-SF-014] nc_nor_flash_exec_quad_read()
Description	Read data from flash in quad spi mode.
Prototype	static Error nc_nor_flash_exec_quad_read(nc_nor_flash_driver_t *instance, nc_nor_flash_rw_t *xfer)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
xfer	nc_nor_flash_rw_t*	addr - data offset
buf - data buffer
safety_buf - safety data buffer
len - transfer length
processed_len - processed length
[표 34] nc_nor_flash_exec_quad_read() Description
5.1.5.14.1. Control Flow Diagram
 
[그림 35] nc_nor_flash_exec_quad_read() 제어 흐름도
5.1.5.15. [SWF-SF-015] nc_nor_flash_iterate_xfer_bank()
Description	Depending on the flash offset, bank switching is performed and the transfer function registered as a callback is called.
Prototype	static Error nc_nor_flash_iterate_xfer_bank(nc_nor_flash_driver_t *instance, nc_nor_flash_rw_t *xfer, nc_nor_flash_xfer_entry_t callback_handler)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
xfer	nc_nor_flash_rw_t*	addr - data offset
buf - data buffer
safety_buf - safety data buffer
len - transfer length
processed_len - processed length
callback_handler	nc_nor_flash_xfer_entry_t	callback-hanlder
[표 35] nc_nor_flash_iterate_xfer_bank() Description
5.1.5.15.1. Control Flow Diagram
 
[그림 36] nc_nor_flash_iterate_xfer_bank() 제어 흐름도
5.1.5.16. [SWF-SF-016] nc_nor_flash_iterate_erase_bank()
Description	Depending on the flash offset, bank switching is performed and the erase function registered as a callback is called.
Prototype	static Error nc_nor_flash_iterate_erase_bank(nc_nor_flash_driver_t *instance, nc_nor_flash_erase_t *erase_cfg, nc_nor_flash_erase_entry_t callback_handler)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
erase_cfg	nc_nor_flash_erase_t*	addr - data offset
len - transfer length
processed_len - processed length
callback_handler	nc_nor_flash_xfer_entry_t	callback-hanlder
[표 36] nc_nor_flash_iterate_erase_bank() Description
5.1.5.16.1. Control Flow Diagram
 
[그림 37] nc_nor_flash_iterate_erase_bank() 제어 흐름도
5.1.5.17. [SWF-SF-017] nc_nor_flash_wait_for_busy()
Description	Performs a busy check on the flash device, waits for completion, and returns the results.
Prototype	static Error nc_nor_flash_wait_for_busy(nc_nor_flash_driver_t *instance, uint64_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or OperationTimeOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
timeout_us	uint64_t	timeout value
[표 37] nc_nor_flash_wait_for_busy() Description
5.1.5.17.1. Control Flow Diagram
 
[그림 38] nc_nor_flash_wait_for_busy() 제어 흐름도
5.1.5.18. [SWF-SF-018] nc_nor_flash_write_status()
Description	Perform status update of flash device.
Prototype	static Error nc_nor_flash_write_status(nc_nor_flash_driver_t *instance, uint8_t cmd, uint8_t status)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
cmd	uint8_t	status-command-value
status	uint8_t	status-value
[표 38] nc_nor_flash_write_status() Description
5.1.5.18.1. Control Flow Diagram
 
[그림 39] nc_nor_flash_write_status() 제어 흐름도
5.1.5.19. [SWF-SF-019] nc_nor_flash_write_status_and_configure()
Description	Perform status update of flash device.
Prototype	static Error nc_nor_flash_write_status_and_configure(nc_nor_flash_driver_t *instance, uint8_t status_and_configure[2])
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
uint8_t	status_and_configure[2]	status-and-config-value
[표 39] nc_nor_flash_write_status_and_configure() Description
5.1.5.19.1. Control Flow Diagram
 
[그림 40] nc_nor_flash_write_status_and_configure() 제어 흐름도
5.1.5.20. [SWF-SF-020] nc_nor_flash_enable_quad_by_method_1()
Description	Quad-io feature enable is performed using method 1 of the JEDEC standard.
Prototype	static Error nc_nor_flash_enable_quad_by_method_1(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 40] nc_nor_flash_enable_quad_by_method_1() Description
5.1.5.20.1. Control Flow Diagram
 
[그림 41] nc_nor_flash_enable_quad_by_method_1() 제어 흐름도
5.1.5.21. [SWF-SF-021] nc_nor_flash_enable_quad_by_method_2()
Description	Quad-io feature enable is performed using method 2 of the JEDEC standard.
Prototype	static Error nc_nor_flash_enable_quad_by_method_2(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 41] nc_nor_flash_enable_quad_by_method_2() Description
5.1.5.21.1. Control Flow Diagram
 
[그림 42] nc_nor_flash_enable_quad_by_method_2() 제어 흐름도
5.1.5.22. [SWF-SF-022] nc_nor_flash_enable_quad_by_method_3()
Description	Quad-io feature enable is performed using method 3 of the JEDEC standard.
Prototype	static Error nc_nor_flash_enable_quad_by_method_3(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
Instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 42] nc_nor_flash_enable_quad_by_method_3() Description
5.1.5.22.1. Control Flow Diagram
 
[그림 43] nc_nor_flash_enable_quad_by_method_3() 제어 흐름도
5.1.5.23. [SWF-SF-023] nc_nor_flash_enable_quad_by_method_4()
Description	Quad-io feature enable is performed using method 4 of the JEDEC standard.
Prototype	static Error nc_nor_flash_enable_quad_by_method_4(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
Instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 43] nc_nor_flash_enable_quad_by_method_4() Description
5.1.5.23.1. Control Flow Diagram
 
[그림 44] nc_nor_flash_enable_quad_by_method_4() 제어 흐름도
5.1.5.24. [SWF-SF-024] nc_nor_flash_enable_quad_by_method_5()
Description	Quad-io feature enable is performed using method 5 of the JEDEC standard.
Prototype	static Error nc_nor_flash_enable_quad_by_method_5(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 44] nc_nor_flash_enable_quad_by_method_5() Description
5.1.5.24.1. Control Flow Diagram
 
[그림 45] nc_nor_flash_enable_quad_by_method_5() 제어 흐름도
5.1.5.25. [SWF-SF-025] nc_nor_flash_enable_quad_by_method_6()
Description	Quad-io feature enable is performed using method 6 of the JEDEC standard.
Prototype	static Error nc_nor_flash_enable_quad_by_method_6(nc_nor_flash_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
[표 45] nc_nor_flash_enable_quad_by_method_6() Description
5.1.5.25.1. Control Flow Diagram
 
[그림 46] nc_nor_flash_enable_quad_by_method_6() 제어 흐름도
5.1.5.26. [SWF-SF-026] nc_nor_flash_check_range()
Description	Checks whether the requested flash io range is valid and returns the result.
Prototype	static Error nc_nor_flash_check_range(nc_nor_flash_driver_t *instance, uint32_t addr, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_nor_flash_driver_t*	driver-instance-handle
addr	uint32_t	flash io offset
len	uint32_t	io size
[표 46] nc_nor_flash_check_range() Description
5.1.5.26.1. Control Flow Diagram
 
[그림 47] nc_nor_flash_check_range() 제어 흐름도
5.1.5.27. [SWF-SF-027] nc_nor_flash_get_safety_alarm_object()
Description	Return Safety Alarm Object.
Prototype	static inline Connection nc_nor_flash_get_safety_alarm_object(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001
Return
Type	Spec. Designation
Connection	Safety alarm object
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 47] nc_nor_flash_get_safety_alarm_object() Description
5.1.5.27.1. Control Flow Diagram
 
[그림 48] nc_nor_flash_get_safety_alarm_object() 제어 흐름도
5.1.5.28. [SWF-SF-028] nc_nor_flash_to_safety_mechanism()
Description	Send Alarm to Safety Mechanism.
Prototype	static void nc_nor_flash_to_safety_mechanism(Address alam_code)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SSR-SoC-IFRB-001, SSR-SoC-IFTO-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
alam_code	Address	alarm-code-value
[표 48] nc_nor_flash_to_safety_mechanism() Description
5.1.5.28.1. Control Flow Diagram
 
[그림 49] nc_nor_flash_to_safety_mechanism() 제어 흐름도
5.2. [SWU-SF-002] nor_flash_basic
nor_flash_basic 유닛은 User가 sFlash 장치와 통신하기 위한 기능이 정의되어 있다.
수행되는 기능으로는 sFlash에 Command Data 전송, Read sFlash Status이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 49] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
NOR_FLASH_SFDP_OP_LEN	sFlash command length	5
NOR_OP_READ_DISCOVERY_PARAM	sFlash Command	0x5a
NOR_OP_READ_STATUS	sFlash Command	0x05
NOR_OP_READ_FLAG_STATUS	sFlash Command	0x70
NOR_OP_CLEAR_FLAG_STATUS	sFlash Command	0x50
NOR_OP_CLSR	Clear status register 1	0x30
NOR_WRITE_IN_PROGRESS_MASK	Write in progress	0
NOR_ERASE_ERR_MASK	Erase Error	5
NOR_PAGE_PROGRAM_ERR_MASK	Page program Error	6
NOR_DEVICE_STATUS_MASK	Device status	7
NOR_ERASE_STATUS_MASK	Erase operation status	5
NOR_PROGRAM_STATUS_MASK	Program operation status	4
NOR_PROTECTION_STATUS_MASK	Protection error bit	1
[표 50] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-SF-029] nc_nor_flash_read_sfdp()
Description	Reads serial flash discovery parameters from the spi-nor flash device and returns them to the buffer.
Prototype	Error nc_nor_flash_read_sfdp(Address spi_dev, uint32_t addr, uint8_t *buf, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
addr	uint32_t	offset of serial flash discovery parameter
buf	uint8_t*	data-buffer
len	uint32_t	data-size
[표 51] nc_nor_flash_read_sfdp() Description 
5.2.5.1.1. Control Flow Diagram
 
[그림 50] nc_nor_flash_read_sfdp() 제어 흐름도
5.2.5.2. [SWF-SF-030] nc_nor_flash_exec_command()
Description	Send command to spi-nor flash device.
Prototype	Error nc_nor_flash_exec_command(Address spi_dev, uint8_t cmd)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
cmd	uint8_t	command value
[표 52] nc_nor_flash_exec_command() Description 
5.2.5.2.1. Control Flow Diagram
 
[그림 51] nc_nor_flash_exec_command() 제어 흐름도
5.2.5.3. [SWF-SF-031] nc_nor_flash_write_register()
Description	Send commands and data to spi-nor flash device.
Prototype	Error nc_nor_flash_write_register(Address spi_dev, uint8_t cmd, uint8_t *buf, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
cmd	uint8_t	command value
buf	uint8_t*	data-buffer
len	uint32_t	data-size
[표 53] nc_nor_flash_write_register() Description 
5.2.5.3.1. Control Flow Diagram
 
[그림 52] nc_nor_flash_write_register() 제어 흐름도
5.2.5.4. [SWF-SF-032] nc_nor_flash_read_register()
Description	Sends a command to the spi-nor flash device, receives response data, and returns it.
Prototype	Error nc_nor_flash_read_register(Address spi_dev, uint8_t cmd, uint8_t *buf, uint32_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
cmd	uint8_t	command value
buf	uint8_t*	data-buffer
len	uint32_t	data-size
[표 54] nc_nor_flash_read_register() Description 
5.2.5.4.1. Control Flow Diagram
 
[그림 53] nc_nor_flash_read_register() 제어 흐름도
5.2.5.5. [SWF-SF-033] nc_nor_flash_is_status_ready()
Description	spi-nor Reads and returns status information for a flash device.
Prototype	Error nc_nor_flash_is_status_ready(Address spi_dev)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure or Waiting
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
[표 55] nc_nor_flash_is_status_ready() Description 
5.2.5.5.1. Control Flow Diagram
 
[그림 54] nc_nor_flash_is_status_ready() 제어 흐름도
5.2.5.6. [SWF-SF-034] nc_nor_flash_is_status_ready_and_clear_status_if_error_occured()
Description	Reads the status information of the spi-nor flash device and returns the result, performing a clear if there is an error.
Prototype	Error nc_nor_flash_is_status_ready_and_clear_status_if_error_occured(Address spi_dev)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure or Waiting
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
[표 56] nc_nor_flash_is_status_ready_and_clear_status_if_error_occured() Description 
5.2.5.6.1. Control Flow Diagram
 
[그림 55] nc_nor_flash_is_status_ready_and_clear_status_if_error_occured() 제어 흐름도
5.2.5.7. [SWF-SF-035] nc_nor_flash_is_flag_status_ready()
Description	Reads the flag-status information of the spi-nor flash device and returns the result, performing a clear if there is an error.
Prototype	Error nc_nor_flash_is_flag_status_ready(Address spi_dev)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-002, SR-SoC-SF-003
Return
Type	Spec. Designation
Error	Success or Failure or Waiting
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
[표 57] nc_nor_flash_is_flag_status_ready() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 56] nc_nor_flash_is_flag_status_ready() 제어 흐름도
5.2.5.8. [SWF-SF-036] nc_nor_flash_check_status()
Description	Reads the status of spi-nor flash device according to the entered status type and returns the result.
Prototype	Error nc_nor_flash_check_status(Address spi_dev, uint8_t cmd, uint8_t mask)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
spi_dev	Address	spi device handle
cmd	uint8_t	command value of status type
mask	uint8_t	Bit mask of status to check
[표 58] nc_nor_flash_check_status() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 57] nc_nor_flash_check_status() 제어 흐름도
5.3. [SWU-SF-003] nor_flash_ids
nor_flash_ids 유닛은 미리 작성되어 있는 sFlash 장치의 Parameter Table을 반환한다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 59] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 60] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface
N/A
5.3.5. Unit Function
5.3.5.1. [SWF-SF-037] nc_nor_flash_get_info_id_lists()
Description	Returns pre-written feature and information tables for each flash device.
Prototype	const nc_nor_flash_info_t *nc_nor_flash_get_info_id_lists(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SF-001
Return
Type	Spec. Designation
const nc_nor_flash_info_t*	flash-info-table-pointer
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 61] nc_nor_flash_get_info_id_lists() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 58] nc_nor_flash_get_info_id_lists() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-SPI-001] spi_kernel_driver
spi_kernel_driver 유닛은 커널 부팅 시 SPI의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
NUM_OF_SPI_BUS	SPI Bus Number	3
SPI_SYSCALL_RD_CMD_GET_CORE_CLOCK	SPI Command	0
SIZE_OF_EXPORTED_SPI_IOADDR_NAME	SPI IO Address Name	19
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-SPI-001] nc_spi_kernel_get_instance()
Description	Returns an Instance function.
Prototype	static inline spi_kernel_driver_t *nc_spi_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
spi_kernel_driver_t*	Spi Driver Instance
Parameter
Variable Name	Type	Spec. Designation
dev_num	uint32_t	channel number
[표 5] nc_spi_kernel_get_instance() Description

5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_spi_kernel_get_instance() 제어 흐름도

5.1.5.2. [SWF-SPI-002] nc_spi_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_spi_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 6] nc_spi_kernel_read_command() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 7] nc_spi_kernel_read_command() 제어 흐름도
5.1.5.3. [SWF-SPI-003] nc_spi_kernel_probe()
Description	Performs hw resource initialization of spi at kernel-boot time.
Prototype	static Error nc_spi_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device tree node
match_name	const char*	compatible name of device tree node
[표 7] nc_spi_kernel_probe() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 8] nc_spi_kernel_probe() 제어 흐름도
5.2. [SWU-SPI-002] spi_driver
spi_driver 유닛은 User가 SPI의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 SPI 초기화, Data Read/Write이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
gc_cmd_width	uint32_t*	N/A	2,3	Command Width
gc_addr_width	uint32_t*	N/A	0,2,4,6,8	Address Width
gc_transfer_type	uint32_t*	N/A	0,1,2	Trans Type
[표 8] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
SPI_DEFAULT_FIFO_DEPTH	FIFO Depth value	256U
SPI_DEFAULT_SCLK      	Default SCLK value	8000000U
SPI_DEFAULT_CPHA      	Default PHA value	1U
SPI_DEFAULT_CPOL      	Default POL value	1U
SPI_DEFAULT_XFER_TIMEOUT	Default Timeout value	1000000U
NUM_OF_SPI_BUS	SPI Bus Number	3
SPI_SYSCALL_RD_CMD_GET_CORE_CLOCK	SPI Command	0
SIZE_OF_EXPORTED_SPI_IOADDR_NAME	SPI IO Address Name	19
[표 9] Defined Parameters
5.2.3. Constraint
N/A

5.2.4. Unit Interface 
5.2.4.1. [SUI-SPI-001] nc_spi_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_spi_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 10] nc_spi_probe() Description
5.2.4.1.1. Control Flow Diagram
 
[그림 9] nc_spi_probe() 제어 흐름도
5.2.4.2. [SUI-SPI-002] nc_spi_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_spi_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address of driver instance handle
command	Value  	command value
param	Address	io control parameter buffer
param_len	size_t 	buffer length
[표 11] nc_spi_ioctl() Description
5.2.4.2.1. Control Flow Diagram
 
[그림 10] nc_spi_ioctl() 제어 흐름도
5.2.4.3. [SUI-SPI-003] nc_spi_ioctl_set_sclk()
Description	Calculate the divider of the requested spi clock speed and store it in the instance handle.
Prototype	static Error nc_spi_ioctl_set_sclk(nc_spi_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 12] nc_spi_ioctl_set_sclk() Description
5.2.4.3.1. Control Flow Diagram
 
[그림 11] nc_spi_ioctl_set_sclk() 제어 흐름도
5.2.4.4. [SUI-SPI-004] nc_spi_ioctl_set_clock_property()
Description	Stores the requested spi clock property in the instance handle.
Prototype	static Error nc_spi_ioctl_set_clock_property(nc_spi_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 13] nc_spi_ioctl_set_clock_property() Description
5.2.4.4.1. Control Flow Diagram
 
[그림 12] nc_spi_ioctl_set_clock_property() 제어 흐름도
5.2.4.5. [SUI-SPI-005] nc_spi_ioctl_set_quad_config()
Description	Stores the requested quad spi config in the instance handle.
Prototype	static Error nc_spi_ioctl_set_quad_config(nc_spi_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 14] nc_spi_ioctl_set_quad_config() Description
5.2.4.5.1. Control Flow Diagram
 
[그림 13] nc_spi_ioctl_set_quad_config() 제어 흐름도
5.2.4.6. [SUI-SPI-006] nc_spi_ioctl_transfer()
Description	Performs single spi data transfer.
Prototype	static Error nc_spi_ioctl_transfer(nc_spi_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 15] nc_spi_ioctl_transfer() Description
5.2.4.6.1. Control Flow Diagram
 
[그림 14] nc_spi_ioctl_transfer() 제어 흐름도
5.2.4.7. [SUI-SPI-007] nc_spi_ioctl_quad_read()
Description	Read the value using SPI Quad mode.
Prototype	static Error nc_spi_ioctl_quad_read(nc_spi_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 16] nc_spi_ioctl_quad_read() Description
5.2.4.7.1. Control Flow Diagram
 
[그림 15] nc_spi_ioctl_quad_read() 제어 흐름도
5.2.4.8. [SUI-SPI-008] nc_spi_ioctl_quad_write()
Description	Write the value using SPI Quad mode.
Prototype	static Error nc_spi_ioctl_quad_write(nc_spi_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
Error	Success or Failure or MustNotBeNULL
Parameter
Variable Name	Type	Spec. Designation
instance	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
param	Address	io control parameter buffer
param_len	size_t	buffer length
[표 17] nc_spi_ioctl_quad_write() Description
5.2.4.8.1. Control Flow Diagram
 
[그림 16] nc_spi_ioctl_quad_write() 제어 흐름도
5.2.5. Unit Function
5.2.5.1. [SWF-SPI-004] nc_spi_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_spi_driver_t *nc_spi_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
nc_spi_driver_t*	Spi Driver Instance
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel number
[표 18] nc_spi_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 17] nc_spi_get_instance() 제어 흐름도
5.2.5.2. [SWF-SPI-005] nc_spi_set_enable_cs()
Description	Enable CS of SPI.
Prototype	static void nc_spi_set_enable_cs(nc_spi_driver_t *instance, uint32_t is_enable)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
is_enable	uint32_t        	enable flag
[표 19] nc_spi_set_enable_cs() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 18] nc_spi_set_enable_cs() 제어 흐름도
5.2.5.3. [SWF-SPI-006] nc_spi_writer()
Description	If there is data that can be transmitted, the data is written to the hw fifo according to the hw fifo width.
Prototype	static void nc_spi_writer(nc_spi_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
[표 20] nc_spi_writer() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 19] nc_spi_writer() 제어 흐름도
5.2.5.4. [SWF-SPI-007] nc_spi_reader()
Description	If there is data that can be received, the data is read from the hw fifo according to the hw fifo width.
Prototype	static void nc_spi_reader(nc_spi_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
[표 21] nc_spi_reader() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 20] nc_spi_reader() 제어 흐름도
5.2.5.5. [SWF-SPI-008] nc_spi_tx_max()
Description	Considering the number of data to be transmitted and the tx-fifo situation, the number of data that can be transmitted is calculated and returned.
Prototype	static uint32_t nc_spi_tx_max(nc_spi_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
uint32_t	Calculated Tx Max Value
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
[표 22] nc_spi_tx_max() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 21] nc_spi_tx_max() 제어 흐름도
5.2.5.6. [SWF-SPI-009] nc_spi_rx_max()
Description	Considering the number of data to be received and the rx-fifo situation, the number of data that can be received is calculated and returned.
Prototype	static uint32_t nc_spi_rx_max(nc_spi_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
uint32_t	Calculated Rx Max Value
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
[표 23] nc_spi_rx_max() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 22] nc_spi_rx_max() 제어 흐름도
5.2.5.7. [SWF-SPI-010] nc_spi_check_tx_fifo_empty()
Description	Checks if tx-fifo is empty for a limited time and returns the result.
Prototype	static Error nc_spi_check_tx_fifo_empty(nc_spi_driver_t *instance, uint64_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SPI-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance 	nc_spi_driver_t*	iod - IODevice Handle
pmr - Physical Memory Region Handle for mmap
vmr - Virtual Memory Region Handle for mmap
ioaddr - virtual base address of spi hw register
max_of_fifo_depth - hw fifo depth
sclk_div - clock divider
cpha - clock phase
cpol - clock polarity
transfer_type - extended transfer type id
cmd_width - extended transfer command width id
addr_width - extended transfer address width id
data_frame_size - target width of hw fifo
tx - current tx buffer pointer
rx - current rx buffer pointer
tx_end - last tx buffer pointer
rx_end - last rx buffer pointer
len - transfer size
timeout_us	uint64_t	timeout value
[표 24] nc_spi_check_tx_fifo_empty() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 23] nc_spi_check_tx_fifo_empty() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-STM-001] safety_mechanism
safety_mechanism 유닛은 기능 안전 Task들의 관리를 한다.
Task Create/Run, Set Fault, Check Boot Sequence등 이다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
DEFAULT_TASK_STACK_SIZE	Default Task tack size	(32UL * KB)
TASK_ID_SAFE_ASYNC_EVENT_RECEIVE	Task ID	(0)
TASK_ID_SAFE_INTERFACE_MONITOR	Task ID	(1)
TASK_ID_SAFE_TEMPERATURE_MONITOR	Task ID	(2)
TASK_ID_SAFE_VOLTAGE_MONITOR	Task ID	(3)
TASK_ID_SAFE_REDUNDANT_TIMER_MONITOR	Task ID	(4)
TASK_ID_SAFE_CLOCK_MONITOR	Task ID	(5)
TASK_ID_SAFE_IP_FAULT_MONITOR	Task ID	(6)
TASK_ID_SAFE_MEMORY_INTEGRITY_CHECK	Task ID	(7)
TASK_ID_SAFE_WATCHDOG_TIMER_CHECK	Task ID	(8)
TASK_ID_SAFE_HALT_STATUS	Task ID	(9)
TASK_ID_SAFE_OIC_CONTROL_MONITOR	Task ID	(10) 
TASK_ID_SAFE_OIC_CPU_HALT_TASK	Task ID	(11) 
TASK_ID_SAFE_OIC_CNN_HALT_TASK	Task ID	(12) 
TASK_ID_SAFE_OIC_ISP_HALT_TASK	Task ID	(13) 
TASK_ID_SAFE_OIC_CODA_HALT_TASK	Task ID	(14) 
TASK_ID_SAFE_OIC_DDR_HALT_TASK	Task ID	(15) 
TASK_ID_SAFE_NPU_MONITOR	Task ID	(16)
TASK_ID_SAFE_ISP_CONFIG	Task ID	(17)
TASK_ID_SAFE_ISP_FDIC_MONITOR	Task ID	(18)
TASK_ID_SAFE_ISP_SW_MONITOR	Task ID	(19)
TASK_ID_SAFE_ISP_HW_MONITOR	Task ID	(20)
MAX_OF_TASK_ID	Max Task ID	(21)
DESC_SAFETYENGINE	Driver Descriptor	(0)
DESC_PVT	Driver Descriptor	(1)
DESC_ISP_SM	Driver Descriptor	(2)
DESC_TIMER	Driver Descriptor	(3)
DESC_OIC_CPU	Driver Descriptor	(4)
DESC_OIC_CNN	Driver Descriptor	(5)
DESC_OIC_CODA	Driver Descriptor	(6)
DESC_OIC_ISP	Driver Descriptor	(7)
DESC_OIC_DDR	Driver Descriptor	(8)
MAX_OF_DESC	Max Driver Descriptor	(9)
ACT_MONITOR_VISION_CLOCK	Activity Number	(0)
ACT_MONITOR_ISP_CLOCK	Activity Number	(1)
ACT_MONITOR_ANALOG	Activity Number	(2)
MAX_OF_ACT_MONITOR	Activity Number	(3)
SIZE_OF_TASK_NAME	Task Name Size	(33)
MAX_OF_CONNECTION	Max Connection	9U
ASYNC_TM_TASK	async handle task	0
ASYNC_VM_TASK	async handle task	1
MAX_OF_ANALOG_TASK	Max async task value	2
DESC_SAFETYENGINE	SM Descriptor	0
DESC_PVT	SM Descriptor	1
DESC_ISP_SM	SM Descriptor	2
DESC_TIMER	SM Descriptor	3
DESC_OIC_CPU	SM Descriptor	4
DESC_OIC_CNN	SM Descriptor	5
DESC_OIC_CODA	SM Descriptor	6
DESC_OIC_ISP	SM Descriptor	7
DESC_OIC_DDR	SM Descriptor	8
MAX_OF_DESCRIPTOR	SM Descriptor Max Value	9
ACT_MONITOR_VISION_CLOCK	Activity Number	0
ACT_MONITOR_ISP_CLOCK	Activity Number	1
ACT_MONITOR_ANALOG	Activity Number	2
MAX_OF_ACT_MONITOR	Activity Number	3
SIZE_OF_TASK_NAME	Task Name Size	33
CASE_LIN_CRC_ERROR	SM Error Case LIN CRC	0
CASE_CAN_CRC_ERROR	SM Error Case CAN CRC	1
CASE_MMC_CRC_ERROR	SM Error Case MMC CRC	2
CASE_I2C_RD_BACK_ERROR	SM Error Case I2C Read Back	3
CASE_SPI_RD_BACK_ERROR	SM Error Case SPI Read Back	4
CASE_I2C_TIMEOUT_ERROR	SM Error Case I2C Time Out	5
CASE_SPI_TIMEOUT_ERROR	SM Error Case SPI Time Out	6
CASE_MMC_TIMEOUT_ERROR	SM Error Case MMC Time Out	7
CASE_GMAC_CRC_ERROR	SM Error Case GMAC CRC	8
MAX_CASE_OF_INTERFACE_SM	SM Error Case Max Value	9
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface
5.1.3.1. [SUI-STM-001] nc_sm_main()
Description	safety mechanism main function.
Prototype	int nc_sm_main(void)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-001, SSR-SoC-STM-002
Return
Type	Spec. Designation
int	0
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 5] nc_sm_main() Description
5.1.3.1.1. Control Flow Diagram
 
[그림 5] nc_sm_main() 제어 흐름도
5.1.4. Unit Function
5.1.4.1. [SWF-STM-001] nc_boot_sequence_monitor()
Description	Check Boot Sequence is correct.
Prototype	static Error nc_boot_sequence_monitor(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
param	Address	Address parameter
[표 6] nc_boot_sequence_monitor() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] nc_boot_sequence_monitor() 제어 흐름도
5.1.4.2. [SWF-STM-002] nc_copy_initial_parameter()
Description	Copy Initial parameter to each parameter struct.
Prototype	static void nc_copy_initial_parameter(nc_interface_sm_t *interface_initial_parameter, nc_clock_monitor_sm_t *clock_monitor_initial_parameter, nc_temperature_monitor_sm_t *temperature_monitor_initial_parameter, nc_voltage_monitor_sm_t *voltage_monitor_initial_parameter, nc_redundant_timer_sm_t *redundant_timer_initial_parameter, nc_fault_monitor_sm_t *fault_monitor_initial_parameter, nc_memory_integrity_sm_t *memory_integrity_initial_parameter, nc_watchdog_timer_sm_t *watchdog_timer_initial_parameter, nc_npu_sm_t *npu_initial_parameter, nc_isp_sm_t *isp_sm_initial_parameter, nc_oic_control_monitor_sm_t *oic_control_initial_parameter, nc_h264_sm_t *h264_sm_initial_parameter, nc_safety_initial_configs_t *sm_initial_parameter)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
interface_initial_parameter	nc_interface_sm_t*	initial config struct for CC, IFRB, IFTO SM
clock_monitor_initial_parameter	nc_clock_monitor_sm_t*	initial config struct for CM SM
temperature_monitor_initial_parameter	nc_temperature_monitor_sm_t*	initial config struct for TM SM
voltage_monitor_initial_parameter	nc_voltage_monitor_sm_t*	initial config struct for VM SM
redundant_timer_initial_parameter	nc_redundant_timer_sm_t*	initial config struct for RDT SM
fault_monitor_initial_parameter	nc_fault_monitor_sm_t*	initial config struct for FM SM
memory_integrity_initial_paramete	nc_memory_integrity_sm_t*     	initial config struct for MI SM
watchdog_timer_initial_parameter	nc_watchdog_timer_sm_t*     	initial config struct for WDT SM
npu_initial_parameter	nc_npu_sm_t*	initial config struct for NPU SM
isp_sm_initial_parameter	nc_isp_sm_t*	initial config struct for ISP SM
oic_control_initial_parameter	nc_oic_control_monitor_sm_t*	initial config struct for OIC SM
h264_sm_initial_parameter	nc_h264_sm_t*	initial config struct for H264 SM
sm_initial_parameter	nc_safety_initial_configs_t*	initial config struct received from USER
[표 7] nc_copy_initial_parameter() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 7] nc_copy_initial_parameter() 제어 흐름도
5.1.4.3. [SWF-STM-003] nc_copy_common_config()
Description	Copy parameter to each parameter struct's component "common config"
Prototype	static void nc_copy_common_config(nc_async_event_task_handle_t *async_event_initial_parameter, nc_interface_sm_t *interface_initial_parameter, nc_clock_monitor_sm_t *clock_monitor_initial_parameter, nc_temperature_monitor_sm_t *temperature_monitor_initial_parameter, nc_voltage_monitor_sm_t *voltage_monitor_initial_parameter, nc_redundant_timer_sm_t *redundant_timer_initial_parameter, nc_fault_monitor_sm_t *fault_monitor_initial_parameter, nc_memory_integrity_sm_t *memory_integrity_initial_parameter, nc_watchdog_timer_sm_t *watchdog_timer_initial_parameter, nc_npu_sm_t *npu_initial_parameter, nc_isp_sm_t *isp_sm_initial_parameter, nc_oic_control_monitor_sm_t *oic_control_initial_parameter,  nc_oic_control_monitor_sm_t *oic_cpu_halt_initial_parameter, nc_oic_control_monitor_sm_t *oic_cnn_halt_initial_parameter, nc_oic_control_monitor_sm_t *oic_coda_halt_initial_parameter,  nc_oic_control_monitor_sm_t *oic_isp_halt_initial_parameter, nc_oic_control_monitor_sm_t *oic_ddr_halt_initial_parameter, nc_h264_sm_t *h264_sm_initial_parameter, nc_safety_engine_config_t *task_initial_paramter)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
interface_initial_parameter	nc_interface_sm_t*	initial config struct for CC, IFRB, IFTO SM
clock_monitor_initial_parameter	nc_clock_monitor_sm_t*	initial config struct for CM SM
temperature_monitor_initial_parameter	nc_temperature_monitor_sm_t*	initial config struct for TM SM
voltage_monitor_initial_parameter	nc_voltage_monitor_sm_t*	initial config struct for VM SM
redundant_timer_initial_parameter	nc_redundant_timer_sm_t*	initial config struct for RDT SM
fault_monitor_initial_parameter	nc_fault_monitor_sm_t*	initial config struct for FM SM
memory_integrity_initial_parameter	nc_memory_integrity_sm_t*	initial config struct for MI SM
watchdog_timer_initial_parameter	nc_watchdog_timer_sm_t*	initial config struct for WDT SM
npu_initial_parameter	nc_npu_sm_t*	initial config struct for NPU SM
isp_sm_initial_parameter	nc_isp_sm_t*	initial config struct for ISP SM
oic_cpu_halt_initial_parameter	nc_oic_control_monitor_sm_t*	initial config struct for OIC_CPU_HALT
oic_cnn_halt_initial_parameter	nc_oic_control_monitor_sm_t*	initial config struct for OIC_CNN_HALT
oic_coda_halt_initial_parameter	nc_oic_control_monitor_sm_t*	initial config struct for OIC_CODA_HALT
oic_isp_halt_initial_parameter	nc_oic_control_monitor_sm_t*	initial config struct for OIC_ISP_HALT
oic_ddr_halt_initial_parameter	nc_oic_control_monitor_sm_t*	initial config struct for OIC_DDR_HALT
h264_sm_initial_parameter	nc_h264_sm_t*	initial config struct for H264 SM
task_initial_paramter	nc_safety_engine_config_t*	initial config struct received from USER
[표 8] nc_copy_common_config() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 8] nc_copy_common_config() 제어 흐름도
5.1.4.4. [SWF-STM-004] interface_monitor_task()
Description	Run interface monitor task.
Prototype	static Value interface_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 9] interface_monitor_task() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 9] interface_monitor_task() 제어 흐름도
5.1.4.5. [SWF-STM-005] safety_engine_status_monitor_task()
Description	Status를 Monitoring 한다.
Prototype	static Value safety_engine_status_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 10] safety_engine_status_monitor_task() Description
5.1.4.5.1. Control Flow Diagram
 
[그림 10] safety_engine_status_monitor_task() 제어 흐름도
5.1.4.6. [SWF-STM-006] async_event_receive_task()
Description	async event receive task.
Prototype	static Value async_event_receive_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-001
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Config parameter
[표 11] async_event_receive_task() Description
5.1.4.6.1. Control Flow Diagram
 
[그림 11] async_event_receive_task() 제어 흐름도
5.1.4.7. [SWF-STM-007] nc_run_user_define_sm()
Description	Call user SW fault write function.
Prototype	static void nc_run_user_define_sm(nc_interface_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_interface_sm_t*	interface SM component instance struct
[표 12] nc_run_user_define_sm() Description
5.1.4.7.1. Control Flow Diagram
 
[그림 12] nc_run_user_define_sm() 제어 흐름도
5.1.4.8. [SWF-STM-008] is_interface_sm_enabled()
Description	Check target SM is ENABLED.
Prototype	static Value is_interface_sm_enabled(nc_interface_sm_t *instance, Value interface_sm_group)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-STM-001
Return
Type	Spec. Designation
Value	ENABLE or DISABLE
Parameter
Variable Name	Type	Spec. Designation
instance	nc_interface_sm_t*	interface SM component instance struct
interface_sm_group	Value	target SM
[표 13] is_interface_sm_enabled() Description
5.1.4.8.1. Control Flow Diagram
 
[그림 13] is_interface_sm_enabled() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-SYS-001] reserved_memory
reserved_memory 유닛은 cma 버퍼 예약을 수행한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-SYS-001] nc_kernel_reserved_memory_probe()
Description	Performs normal cma buffer reservations.
Prototype	static Error nc_kernel_reserved_memory_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 5] nc_kernel_reserved_memory_probe() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_kernel_reserved_memory_probe() 제어 흐름도
5.2. [SWU-SYS-002] system_clock_kernel_driver
system_clock_kernel_driver 유닛은 khwclock 리소스를 사용자 공간으로 내보낸다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 6] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 7] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-SYS-002] nc_system_clock_kernel_probe()
Description	Export the khwclock resource to user-sapce.
Prototype	static Error nc_system_clock_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 8] nc_system_clock_kernel_probe() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 7] nc_system_clock_kernel_probe() 제어 흐름도
5.3. [SWU-SYS-003] system_gpio_kernel_driver
system_gpio_kernel_driver 유닛은 kgpio 리소스를 사용자 공간으로 내보낸다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 9] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
MAX_OF_PAD	PAD MAX Value	79
[표 10] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface
N/A
5.3.5. Unit Function
5.3.5.1. [SWF-SYS-003] nc_system_gpio_get_name()
Description	Get system gpio name.
Prototype	static const char *nc_system_gpio_get_name(size_t pad_num)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-003
Return
Type	Spec. Designation
const char*	ICU pad name
Parameter
Variable Name	Type	Spec. Designation
pad_num	size_t	ICU pad number
[표 11] nc_system_gpio_get_name() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 8] nc_system_gpio_get_name() 제어 흐름도
5.3.5.2. [SWF-SYS-004] nc_system_gpio_kernel_probe()
Description	Export the kgpio resource to user-sapce.
Prototype	static Error nc_system_gpio_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-003
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 12] nc_system_gpio_kernel_probe() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 9] nc_system_gpio_kernel_probe() 제어 흐름도
5.4. [SWU-SYS-004] system_pll_kernel_driver
system_pll_kernel_driver 유닛은 Set/Get pll ratio 대한 처리를 한다.
5.4.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 13] 전역 변수
5.4.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 14] Defined Parameters
5.4.3. Constraint
N/A
5.4.4. Unit Interface
N/A
5.4.5. Unit Function
5.4.5.1. [SWF-SYS-005] nc_bsp_pll_get_instance()
Description	Get pll instance.
Prototype	static inline IODeviceVector nc_bsp_pll_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
IODeviceVector	pll instance
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 15] nc_bsp_pll_get_instance() Description
5.4.5.1.1. Control Flow Diagram
 
[그림 10] nc_bsp_pll_get_instance() 제어 흐름도
5.4.5.2. [SWF-SYS-006] nc_bsp_pll_set_ratio()
Description	Set up pll ratio.
Prototype	static Error nc_bsp_pll_set_ratio(uint64_t clk_id, uint64_t m_ratio, uint64_t p_ratio, uint64_t s_ratio)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
clk_id	uint64_t	Clock Id
m_ratio	uint64_t	Pll M ratio
p_ratio	uint64_t	Pll P ratio
s_ratio	uint64_t	Pll S ratio
[표 16] nc_bsp_pll_set_ratio() Description
5.4.5.2.1. Control Flow Diagram
 
[그림 11] nc_bsp_pll_set_ratio() 제어 흐름도
5.4.5.3. [SWF-SYS-007] nc_bsp_pll_get_ratio()
Description	Get pll ratio.
Prototype	static Error nc_bsp_pll_get_ratio(uint64_t clk_id, uint64_t *m_ratio, uint64_t *p_ratio, uint64_t *s_ratio)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
Error	Success or ArgumentError
Parameter
Variable Name	Type	Spec. Designation
clk_id	uint64_t	Clock Id
m_ratio	uint64_t*	Pll M ratio
p_ratio	uint64_t*	Pll P ratio
s_ratio	uint64_t*	Pll S ratio
[표 17] nc_bsp_pll_get_ratio() Description
5.4.5.3.1. Control Flow Diagram
 
[그림 12] nc_bsp_pll_get_ratio() 제어 흐름도
5.4.5.4. [SWF-SYS-008] nc_bsp_pll_write_status()
Description	Performs an io request for iodevice by calling the WriteIODeviceStatus function from user-space.
Prototype	static Error nc_bsp_pll_write_status(IODeviceVector iod, Value cmd, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
Error	Success or IllegalLength or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
cmd	Value	Command number
buf	void*	Buffer address
len	Address	Buffer size
[표 18] nc_bsp_pll_write_status() Description
5.4.5.4.1. Control Flow Diagram
 
[그림 13] nc_bsp_pll_write_status() 제어 흐름도
5.4.5.5. [SWF-SYS-009] nc_bsp_pll_read_status()
Description	Performs an io request for iodevice by calling the ReadIODeviceStatus function from user-space.
Prototype	static Error nc_bsp_pll_read_status(IODeviceVector iod, Value cmd, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
Error	Success or IllegalLength or IllegalStatusNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
cmd	Value	Command number
buf	void*	Buffer address
len	Address	Buffer size
[표 19] nc_bsp_pll_read_status() Description
5.4.5.5.1. Control Flow Diagram
 
[그림 14] nc_bsp_pll_read_status() 제어 흐름도
5.4.5.6. [SWF-SYS-010] nc_bsp_pll_probe()
Description	Initialize pll driver.
Prototype	static void nc_bsp_pll_probe(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 20] nc_bsp_pll_probe() Description
5.4.5.6.1. Control Flow Diagram
 
[그림 15] nc_bsp_pll_probe() 제어 흐름도
5.5. [SWU-SYS-005] system_reset_kernel_driver
system_reset_kernel_driver 유닛은 장치 트리에 지정된 버스의 일괄 Reset을 수행한다.
5.5.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 21] 전역 변수
5.5.2. Defined Parameters
Name	Description	Value
DEFAULT_RST_TIMEOUT	Default Timeout value	(10UL * 1000UL)
FNC_CONTROL_OFFSET	Control Offset	(0x8000U)
FNC_EN_YNR	Enable YNR	BIT32(0)
FNC_EN_WDR	Enable WDR	BIT32(1)
FNC_EN_OSG	Enable OSG	BIT32(2)
FNC_EN_NR3D	Enable NR3D	BIT32(3)
FNC_EN_NLDC	Enable NLDC	BIT32(4)
FNC_EN_LDC	Enable LDC	BIT32(5)
[표 22] Defined Parameters
5.5.3. Constraint
N/A
5.5.4. Unit Interface
N/A
5.5.5. Unit Function 
5.5.5.1. [SWF-SYS-011] nc_sfr_mask()
Description	Set special function register.
Prototype	static inline void nc_sfr_mask(Address base, Address offset, uint32_t value)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-003
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
base	Address	Special function Register address
offset	Address	SFR offset
value	uint32_t	Masking value
[표 23] nc_sfr_mask() Description
5.5.5.1.1. Control Flow Diagram
 
[그림 16] nc_sfr_mask() 제어 흐름도
5.5.5.2. [SWF-SYS-012] nc_system_reset_kernel_probe()
Description	Batch reset of buses specified in the device tree.
Prototype	static Error nc_system_reset_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-SYS-003
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 24] nc_system_reset_kernel_probe() Description
5.5.5.2.1. Control Flow Diagram
 
[그림 17] nc_system_reset_kernel_probe() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-TM-001] TM_sm
TM_sm 유닛은 Temperature Monitoring 중 Out of Range 오류가 발생하면 SE에 Fault를 전달한다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
TM_TASK_SLEEP	Task Sleep Value	33 * 1000
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface 
5.1.3.1. [SUI-TM-001] temperature_monitor_task()
Description	Run temperature monitor task.
Prototype	Value temperature_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-TM-001, SSR-SoC-TM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
[표 5] temperature_monitor_task() Description
5.1.3.1.1. Control Flow Diagram
 
[그림 5] temperature_monitor_task() 제어 흐름도
5.1.4. Unit Function
5.1.4.1. [SWF-TM-001] nc_monitor_temperature()
Description	Monitoring temperature.
Prototype	static void nc_monitor_temperature(nc_temperature_monitor_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-TM-001, SSR-SoC-TM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_temperature_monitor_sm_t*	common_config - Safety Engine config handle
tm_config - TM initial config
iod - Device IODevice Vector Handle
descriptor - Device Handling descriptor
[표 6] nc_monitor_temperature() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] nc_monitor_temperature() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-TS-001] nc_timestamp
nc_timestamp 유닛은 Get Elapsed Time, Get Timestamp, Get RTC IO Device를 수행한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-TS-001] nc_timestamp_get_rtc_us()
Description	Get timestamp in us units
Prototype	uint64_t nc_timestamp_get_rtc_us(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-TS-001
Return
Type	Spec. Designation
uint64_t	Timestamp
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 5] nc_timestamp_get_rtc_us() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] nc_timestamp_get_rtc_us() 제어 흐름도
5.1.4.2. [SUI-TS-002] nc_timestamp_get_elapsed_rtc_us()
Description	Get elapsed time in us units
Prototype	uint64_t nc_timestamp_get_elapsed_rtc_us(uint64_t s_time)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-TS-001
Return
Type	Spec. Designation
uint64_t	Elapsed Time
Parameter
Variable Name	Type	Spec. Designation
s_time	uint64_t	max elapsed time
[표 6] nc_timestamp_get_elapsed_rtc_us() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 6] nc_timestamp_get_elapsed_rtc_us() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-TS-001] nc_timestamp_get_rtc_iod()
Description	Get rtc IO Device
Prototype	IODevice nc_timestamp_get_rtc_iod(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-TS-001
Return
Type	Spec. Designation
IODevice	RTC IOdevice
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 7] nc_timestamp_get_rtc_iod() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 7] nc_timestamp_get_rtc_iod() 제어 흐름도
5.2.  [SWU-TS-002] nc_kernel_timestamp
nc_kernel_timestamp 유닛은 Register RTC, Read RTC Register 기능을 수행한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 8] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 9] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-TS-002] NC_BSP_User_RegisterRTC()
Description	Register RTC.
Prototype	static void NC_BSP_User_RegisterRTC(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-TS-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 10] NC_BSP_User_RegisterRTC() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 8] NC_BSP_User_RegisterRTC() 제어 흐름도
5.2.5.2. [SWF-TS-003] NC_RTC_ReadRegister()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error NC_RTC_ReadRegister(IODeviceVector iod, Value cmd, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-TS-001
Return
Type	Spec. Designation
ERROR	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
cmd	Value	command number
buf	Value*	buffer address of architecture-value
[표 11] NC_RTC_ReadRegister() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 9] NC_RTC_ReadRegister() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-UART-001] uart_driver
uart_driver 유닛은 User가 UART의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 UART 초기화, Data Transmit/Receive, Interrupt Handle 등록이다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
IS_SUPPORT_BUFFER_MODE	Buffer mode setting	0
DEFAULT_UART_XFER_MODE	Uart xfer mode	0
DEFAULT_UART_TIMEOUT_OF_CLEAR_STATUS	Uart clear status timeout value	10000
DEFAULT_UART_TIMEOUT_OF_SERIAL_MODE	Uart serial mode timeout value	100000
DEFAULT_UART_TIMEOUT_OF_TRANSMIT_BYTE	Uart transmit byte timeout value	1000
SEC_TO_US	Usec	1000000
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-UART-001] nc_uart_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_uart_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver)
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 5] nc_uart_probe() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 6] nc_uart_probe() 제어 흐름도
5.1.4.2. [SUI-UART-002] nc_uart_open()
Description	This function is a porting layer of the driver open interface and performs additional tasks when opening the driver.
Prototype	static Error nc_uart_open(Address handle)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-001
Return
Type	Spec. Designation
Error	Success or Failure or OperationTimedOut or NotSupported or ResourceNotAvailable
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
[표 6] nc_uart_open() Description
5.1.4.2.1. Control Flow Diagram
 
[그림 7] nc_uart_open() 제어 흐름도
5.1.4.3. [SUI-UART-003] nc_uart_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_uart_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 7] nc_uart_ioctl() Description
5.1.4.3.1. Control Flow Diagram
 
[그림 8] nc_uart_ioctl() 제어 흐름도
5.1.4.4. [SUI-UART-004] nc_uart_ioctl_set_xfer_mode()
Description	Sets the uart transmission mode and returns the result.
Prototype	static Error nc_uart_ioctl_set_xfer_mode(nc_uart_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_uart_driver_t*	iod - IODevice Handle
uart_transmit - uart transmit function
uart_receive - uart receive function
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 8] nc_uart_ioctl_set_xfer_mode() Description
5.1.4.4.1. Control Flow Diagram
 
[그림 9] nc_uart_ioctl_set_xfer_mode() 제어 흐름도
5.1.4.5. [SUI-UART-005] nc_uart_ioctl_transmit()
Description	Uart Transmit 수행
Prototype	static Error nc_uart_ioctl_transmit(nc_uart_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_uart_driver_t*	iod - IODevice Handle
uart_transmit - uart transmit function
uart_receive - uart receive function
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 9] nc_uart_ioctl_transmit() Description
5.1.4.5.1. Control Flow Diagram
 
[그림 10] nc_uart_ioctl_transmit() 제어 흐름도
5.1.4.6. [SUI-UART-006] nc_uart_ioctl_receive()
Description	Serial communication is received via UART.
Prototype	static Error nc_uart_ioctl_receive(nc_uart_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_uart_driver_t*	instance-handle
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 10] nc_uart_ioctl_receive() Description
5.1.4.6.1. Control Flow Diagram
 
[그림 11] nc_uart_ioctl_receive() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-UART-001] nc_uart_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_uart_driver_t *nc_uart_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-001
Return
Type	Spec. Designation
nc_uart_driver_t*	Instance Handler matching Uart Channel
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel-number
[표 11] nc_uart_get_instance() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 12] nc_uart_get_instance() 제어 흐름도
5.1.5.2. [SWF-UART-002] nc_uart_clear_status()
Description	Clears uart interrupt status and returns the result.
Prototype	static Error nc_uart_clear_status(nc_uart_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-001
Return
Type	Spec. Designation
Error	Success or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	nc_uart_driver_t*_t	iod - IODevice Handle
uart_transmit - uart transmit function
uart_receive - uart receive function
[표 12] nc_uart_clear_status() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 13] nc_uart_clear_status() 제어 흐름도
5.1.5.3. [SWF-UART-003] nc_uart_set_xfer_mode()
Description	Sets the uart transmission mode and returns the result.
Prototype	static Error nc_uart_set_xfer_mode(nc_uart_driver_t *instance, SerialDeviceModeSetting mode)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-002
Return
Type	Spec. Designation
Error	Success or OperationTimedOut or NotSupported or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_uart_driver_t*_t	iod - IODevice Handle
uart_transmit - uart transmit function
uart_receive - uart receive function
mode	SerialDeviceModeSetting	mode-enum
[표 13] nc_uart_set_xfer_mode() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 14] nc_uart_set_xfer_mode() 제어 흐름도
5.1.5.4. [SWF-UART-004] nc_uart_ioctl_transmit_by_byte_mode()
Description	transmit uart data by byte mode
Prototype	static Error nc_uart_ioctl_transmit_by_byte_mode(struct nc_uart_driver_structure *instance, const uint8_t *buf, size_t len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-002
Return
Type	Spec. Designation
Error	Success or Failure or OperationTimedOut
Parameter
Variable Name	Type	Spec. Designation
instance	struct nc_uart_driver_structure*	iod - IODevice Handle
uart_transmit - uart transmit function
uart_receive - uart receive function
buf	const uint8_t*	data-buffer
len	size_t	data-size
[표 14] nc_uart_ioctl_transmit_by_byte_mode() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 15] nc_uart_ioctl_transmit_by_byte_mode() 제어 흐름도
5.1.5.5. [SWF-UART-005] nc_uart_ioctl_receive_by_byte_mode()
Description	receive uart data by byte mode
Prototype	static Error nc_uart_ioctl_receive_by_byte_mode(struct nc_uart_driver_structure *instance, uint8_t *buf, size_t len, size_t timeout_us)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-UART-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	struct nc_uart_driver_structure*	iod - IODevice Handle
uart_transmit - uart transmit function
uart_receive - uart receive function
buf	uint8_t*	data-buffer
len	size_t	data-size
timeout_us	size_t	timeout value
[표 15] nc_uart_ioctl_receive_by_byte_mode() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 16] nc_uart_ioctl_receive_by_byte_mode() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-VDMA_CNN-001] vdma_cnn_driver
vdma_cnn_driver 유닛은 User가 VDMA_CNN의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 VDMA_CNN 초기화, Set Resolution, Start이다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
N/A	N/A	N/A
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface 
5.1.3.1. [SUI-VDMA_CNN-001] nc_vdma_cnn_probe()
Description	This function is called when the driver module starts up.
It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_vdma_cnn_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 5] nc_vdma_cnn_probe() Description
5.1.3.1.1. Control Flow Diagram
 
[그림 6] nc_vdma_cnn_probe() 제어 흐름도
5.1.3.2. [SUI-VDMA_CNN-002] nc_vdma_cnn_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_vdma_cnn_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 6] nc_vdma_cnn_ioctl() Description
5.1.3.2.1. Control Flow Diagram
 
[그림 7] nc_vdma_cnn_ioctl() 제어 흐름도
5.1.3.3. [SUI-VDMA_CNN-003] nc_vdma_cnn_ioctl_set_resolution_of_write()
Description	Perform resolution settings for cnnw.
Prototype	static Error nc_vdma_cnn_ioctl_set_resolution_of_write(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 7] nc_vdma_cnn_ioctl_set_resolution_of_write() Description
5.1.3.3.1. Control Flow Diagram
 
[그림 8] nc_vdma_cnn_ioctl_set_resolution_of_write() 제어 흐름도
5.1.3.4. [SUI-VDMA_CNN-004] nc_vdma_cnn_ioctl_set_resolution_of_scan()
Description	Perform resolution settings for cnns.
Prototype	static Error nc_vdma_cnn_ioctl_set_resolution_of_scan(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 8] nc_vdma_cnn_ioctl_set_resolution_of_scan() Description
5.1.3.4.1. Control Flow Diagram
 
[그림 9] nc_vdma_cnn_ioctl_set_resolution_of_scan() 제어 흐름도
5.1.3.5. [SUI-VDMA_CNN-005] nc_vdma_cnn_ioctl_enable_write()
Description	Perform enable of cnnw.
Prototype	static Error nc_vdma_cnn_ioctl_enable_write(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 9] nc_vdma_cnn_ioctl_enable_write() Description
5.1.3.5.1. Control Flow Diagram
 
[그림 10] nc_vdma_cnn_ioctl_enable_write() 제어 흐름도
5.1.3.6. [SUI-VDMA_CNN-006] nc_vdma_cnn_ioctl_disable_write()
Description	Perform disable of cnnw.
Prototype	static Error nc_vdma_cnn_ioctl_disable_write(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 10] nc_vdma_cnn_ioctl_disable_write() Description
5.1.3.6.1. Control Flow Diagram
 
[그림 11] nc_vdma_cnn_ioctl_disable_write() 제어 흐름도
5.1.3.7. [SUI-VDMA_CNN-007] nc_vdma_cnn_ioctl_enable_scan()
Description	Perform enable of cnns.
Prototype	static Error nc_vdma_cnn_ioctl_enable_scan(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 11] nc_vdma_cnn_ioctl_enable_scan() Description
5.1.3.7.1. Control Flow Diagram
 
[그림 12] nc_vdma_cnn_ioctl_enable_scan() 제어 흐름도
5.1.3.8. [SUI-VDMA_CNN-008] nc_vdma_cnn_ioctl_disable_scan()
Description	Perform disable of cnns.
Prototype	static Error nc_vdma_cnn_ioctl_disable_scan(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 12] nc_vdma_cnn_ioctl_disable_scan() Description
5.1.3.8.1. Control Flow Diagram
 
[그림 13] nc_vdma_cnn_ioctl_disable_scan() 제어 흐름도
5.1.3.9.  [SUI-VDMA_CNN-009] nc_vdma_cnn_ioctl_start_scan()
Description	Perform start of cnns.
Prototype	static Error nc_vdma_cnn_ioctl_start_scan(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 13] nc_vdma_cnn_ioctl_start_scan() Description
5.1.3.9.1. Control Flow Diagram
 
[그림 14] nc_vdma_cnn_ioctl_start_scan() 제어 흐름도
5.1.3.10. [SUI-VDMA_CNN-010] nc_vdma_cnn_ioctl_set_input_of_scan()
Description	Perform cnns input source path settings.
Prototype	static Error nc_vdma_cnn_ioctl_set_input_of_scan(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 14] nc_vdma_cnn_ioctl_set_input_of_scan() Description
5.1.3.10.1. Control Flow Diagram
 
[그림 15] nc_vdma_cnn_ioctl_set_input_of_scan() 제어 흐름도
5.1.3.11. [SUI-VDMA_CNN-011] nc_vdma_cnn_ioctl_get_index_of_scan_input()
Description	Returns the index value of cnns input-buffer.
Prototype	static Error nc_vdma_cnn_ioctl_get_index_of_scan_input(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 15] nc_vdma_cnn_ioctl_get_index_of_scan_input() Description
5.1.3.11.1. Control Flow Diagram
 
[그림 16] nc_vdma_cnn_ioctl_get_index_of_scan_input() 제어 흐름도
5.1.3.12. [SUI-VDMA_CNN-012] nc_vdma_cnn_ioctl_get_buf_info_of_write_output()
Description	Returns cnnw's buffer config information.
Prototype	static Error nc_vdma_cnn_ioctl_get_buf_info_of_write_output(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 16] nc_vdma_cnn_ioctl_get_buf_info_of_write_output() Description
5.1.3.12.1. Control Flow Diagram
 
[그림 17] nc_vdma_cnn_ioctl_get_buf_info_of_write_output() 제어 흐름도
5.1.3.13. [SUI-VDMA_CNN-013] nc_vdma_cnn_ioctl_get_buf_info_of_scan_input()
Description	Returns cnns's input-buffer config information.
Prototype	static Error nc_vdma_cnn_ioctl_get_buf_info_of_scan_input(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 17] nc_vdma_cnn_ioctl_get_buf_info_of_scan_input() Description
5.1.3.13.1. Control Flow Diagram
 
[그림 18] nc_vdma_cnn_ioctl_get_buf_info_of_scan_input() 제어 흐름도
5.1.3.14. [SUI-VDMA_CNN-014] nc_vdma_cnn_ioctl_get_buf_info_of_scan_output()
Description	Returns cnns's output-buffer config information.
Prototype	static Error nc_vdma_cnn_ioctl_get_buf_info_of_scan_output(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
	[표 18] nc_vdma_cnn_ioctl_get_buf_info_of_scan_output() Description
5.1.3.14.1. Control Flow Diagram
 
[그림 19] nc_vdma_cnn_ioctl_get_buf_info_of_scan_output() 제어 흐름도
5.1.3.15. [SUI-VDMA_CNN-015] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input()
Description	Returns cnns's input-buffer interval-size
Prototype	static Error nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 19] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input() Description
5.1.3.15.1. Control Flow Diagram
 
[그림 20] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_input() 제어 흐름도
5.1.3.16. [SUI-VDMA_CNN-016] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output()
Description	Returns cnns's output-buffer interval-size
Prototype	static Error nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output(nc_vdma_cnn_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_cnn_driver_t*	iod - IODevice Handle
write_output_info - cnnw output buffer information
scan_input_info - cnns input buffer information
scan_output_info - cnns output buffer information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 20] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output() Description
5.1.3.16.1. Control Flow Diagram
 
[그림 21] nc_vdma_cnn_ioctl_get_interval_size_of_cnns_output() 제어 흐름도
5.1.4. Unit Function
5.1.4.1.  [SWF-VDMA_CNN-001] nc_vdma_cnn_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_vdma_cnn_driver_t *nc_vdma_cnn_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
nc_vdma_cnn_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 21] nc_vdma_cnn_get_instance() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 22] nc_vdma_cnn_get_instance() 제어 흐름도
5.2.  [SWU-VDMA_CNN-002] vdma_cnn_kernel_driver
vdma_cnn_kernel_driver 유닛은 커널 부팅 시 VDMA_CNN의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 22] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
MAX_PRIO	Max exception priority	511U
MAX_OF_FRAME_NUM_BUF	Max video frame buffer	16U
MAX_PIXEL	RGB max pixel	3U
VIDEO_MEMORY_CNNW_OUTPUT0	Video memory output	0U
VIDEO_MEMORY_CNNW_OUTPUT1	Video memory output	1U
VIDEO_MEMORY_CNNW_OUTPUT2	Video memory output	2U
VIDEO_MEMORY_CNNW_OUTPUT3	Video memory output	3U
VIDEO_MEMORY_CNNS_INPUT	Video memory input	4U
VIDEO_MEMORY_CNNS_OUTPUT	Video memory output	5U
MAX_OF_VIDEO_MEMORY	Max Video memory	6U
DEFAULT_TIMEOUT_US	Wait timeout value	500U * 1000U
[표 23] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-VDMA_CNN-002] nc_vdma_cnn_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline vdma_cnn_kernel_driver_t *nc_vdma_cnn_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
vdma_cnn_kernel_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 24] nc_vdma_cnn_kernel_get_instance() Description
5.2.5.1.1. Control Flow Diagram
 
[그림 23] nc_vdma_cnn_kernel_get_instance() 제어 흐름도
5.2.5.2. [SWF-VDMA_CNN-003] nc_vdma_cnn_kernel_get_irq_instance()
Description	Returns the instance handle of the IRQ.
Prototype	static inline vdma_cnn_irq_kernel_driver_t *nc_vdma_cnn_kernel_get_irq_instance(uint32_t irq_id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
vdma_cnn_irq_kernel_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
irq_id	uint32_t	VDMA CNN IRQ ID
[표 25] nc_vdma_cnn_kernel_get_irq_instance() Description
5.2.5.2.1. Control Flow Diagram
 
[그림 24] nc_vdma_cnn_kernel_get_irq_instance() 제어 흐름도
5.2.5.3. [SWF-VDMA_CNN-004] nc_vdma_cnn_kernel_get_video_memory_name()
Description	Returns the name of the memory-resource corresponding to the entered ID
Prototype	static inline const char *nc_vdma_cnn_kernel_get_video_memory_name(uint32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
const char*	the-name
Parameter
Variable Name	Type	Spec. Designation
id	uint32_t	Video memory name ID.
[표 26] nc_vdma_cnn_kernel_get_video_memory_name() Description
5.2.5.3.1. Control Flow Diagram
 
[그림 25] nc_vdma_cnn_kernel_get_video_memory_name() 제어 흐름도
5.2.5.4. [SWF-VDMA_CNN-005] nc_vdma_cnn_kernel_get_postprocess_dev_name()
Description	Returns the IRQ deivce name of the entered ID.
Prototype	static inline const char *nc_vdma_cnn_kernel_get_postprocess_dev_name(uint32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
const char*	the-name
Parameter
Variable Name	Type	Spec. Designation
id	uint32_t	IODevice ID
[표 27] nc_vdma_cnn_kernel_get_postprocess_dev_name() Description
5.2.5.4.1. Control Flow Diagram
 
[그림 26] nc_vdma_cnn_kernel_get_postprocess_dev_name() 제어 흐름도
5.2.5.5. [SWF-VDMA_CNN-006] nc_vdma_cnn_kernel_get_irq_name()
Description	Returns the IRQ device handler name of the entered ID.
Prototype	static inline const char *nc_vdma_cnn_kernel_get_irq_name(uint32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
const char*	the-name
Parameter
Variable Name	Type	Spec. Designation
id	uint32_t	Handler ID
[표 28] nc_vdma_cnn_kernel_get_irq_name() Description
5.2.5.5.1. Control Flow Diagram
 
[그림 27] nc_vdma_cnn_kernel_get_irq_name() 제어 흐름도
5.2.5.6. [SWF-VDMA_CNN-007] nc_vdma_cnnw_get_framesize()
Description	Reads resolution information of cnnw from hw register, calculates the current frame-size, and returns it.
Prototype	static uint32_t nc_vdma_cnnw_get_framesize(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
uint32_t	frame-size
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 29] nc_vdma_cnnw_get_framesize() Description
5.2.5.6.1. Control Flow Diagram
 
[그림 28] nc_vdma_cnnw_get_framesize() 제어 흐름도
5.2.5.7. [SWF-VDMA_CNN-008] nc_vdma_cnns_get_framesize()
Description	Reads resolution information of cnns from hw register, calculates the current frame-size, and returns it.
Prototype	static uint32_t nc_vdma_cnns_get_framesize(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
uint32_t	frame-size
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 30] nc_vdma_cnns_get_framesize() Description
5.2.5.7.1. Control Flow Diagram
 
[그림 29] nc_vdma_cnns_get_framesize() 제어 흐름도
5.2.5.8. [SWF-VDMA_CNN-009] nc_vdma_cnn_kernel_clear_pending()
Description	Performs IRQ pending clear of the requested status.
Prototype	static void nc_vdma_cnn_kernel_clear_pending(Address ioaddr, Address irq_clear_offset, uint32_t status)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
ioaddr	Address	kernel virtual base address of hw register block
irq_clear_offset	Address	irq-clear register offset
status	uint32_t	status-value
[표 31] nc_vdma_cnn_kernel_clear_pending() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 30] nc_vdma_cnn_kernel_clear_pending() 제어 흐름도
5.2.5.9. [SWF-VDMA_CNN-010] nc_vdma_cnn_reserve_video_memory()
Description	Performs reservation of continuous memory resources for DMA at kernel boot-time.
Prototype	static Error nc_vdma_cnn_reserve_video_memory(DevTree_Node node, const char *name, vdma_cnn_video_mem_info_t *video_mem)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure or ResourceNotAvailable
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	DeviceTree Node
name	const char*	CMA buffer resource name
video_mem	vdma_cnn_video_mem_info_t*	name - CMA buffer resource name
phy_base - start physical address of cma buffer
kvirt_base - start kernel virtual address of cma buffer
max_framesize - framesize per each frame
total_size - total size of cma buffer
num_of_buffer - number of buffers
head_index - tail-index for enqueue
tail_index - tail-index for dequeue
frame_number - frame number table
[표 32] nc_vdma_cnn_reserve_video_memory() Description
5.2.5.9.1. Control Flow Diagram
 
[그림 31] nc_vdma_cnn_reserve_video_memory() 제어 흐름도
5.2.5.10. [SWF-VDMA_CNN-011] nc_vdma_cnn_write_kernel_set_resolution()
Description	Perform resolution settings for cnnw.
Prototype	static Error nc_vdma_cnn_write_kernel_set_resolution(vdma_cnn_kernel_driver_t *instance, uint32_t h_size, uint32_t v_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
h_size	uint32_t	Horizontal size
v_size	uint32_t	Vertical size
[표 33] nc_vdma_cnn_write_kernel_set_resolution() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 32] nc_vdma_cnn_write_kernel_set_resolution() 제어 흐름도

5.2.5.11. [SWF-VDMA_CNN-012] nc_vdma_cnn_scan_kernel_set_resolution()
Description	Perform resolution settings for cnns.
Prototype	static Error nc_vdma_cnn_scan_kernel_set_resolution(vdma_cnn_kernel_driver_t *instance, uint32_t h_size, uint32_t v_size)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
h_size	uint32_t	Horizontal size
v_size	uint32_t	Vertical size
[표 34] nc_vdma_cnn_scan_kernel_set_resolution() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 33] nc_vdma_cnn_scan_kernel_set_resolution() 제어 흐름도
5.2.5.12.  [SWF-VDMA_CNN-013] nc_vdma_cnn_write_kernel_enable()
Description	Perform enable of cnnw.
Prototype	static Error nc_vdma_cnn_write_kernel_enable(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or OperationAlreadyPerformed
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 35] nc_vdma_cnn_write_kernel_enable() Description
5.2.5.12.1. Control Flow Diagram
 
[그림 34] nc_vdma_cnn_write_kernel_enable() 제어 흐름도
5.2.5.13. [SWF-VDMA_CNN-014] nc_vdma_cnn_scan_kernel_enable()
Description	Perform enable of cnns.
Prototype	static Error nc_vdma_cnn_scan_kernel_enable(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or OperationAlreadyPerformed
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 36] nc_vdma_cnn_scan_kernel_enable() Description
5.2.5.13.1. Control Flow Diagram
 
[그림 35] nc_vdma_cnn_scan_kernel_enable() 제어 흐름도
5.2.5.14. [SWF-VDMA_CNN-015] nc_vdma_cnn_scan_kernel_set_input()
Description	Configure the input path of cnns.
Prototype	static Error nc_vdma_cnn_scan_kernel_set_input(vdma_cnn_kernel_driver_t *instance, vdma_cnn_scan_input_t scan_input_id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
scan_input_id	vdma_cnn_scan_input_t	input-source-path-id-of-cnns
[표 37] nc_vdma_cnn_scan_kernel_set_input() Description
5.2.5.14.1. Control Flow Diagram
 
[그림 36] nc_vdma_cnn_scan_kernel_set_input() 제어 흐름도
5.2.5.15. [SWF-VDMA_CNN-016] nc_vdma_cnn_scan_kernel_start()
Description	Perform start of cnns
Prototype	static Error nc_vdma_cnn_scan_kernel_start(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or OperationAlreadyPerformed or OperationNotImplemented
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 38] nc_vdma_cnn_scan_kernel_start() Description
5.2.5.15.1. Control Flow Diagram
 
[그림 37] nc_vdma_cnn_scan_kernel_start() 제어 흐름도
5.2.5.16. [SWF-VDMA_CNN-017] nc_vdma_cnn_write_kernel_disable()
Description	Perform disable of cnnw
Prototype	static Error nc_vdma_cnn_write_kernel_disable(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 39] nc_vdma_cnn_write_kernel_disable() Description
5.2.5.16.1. Control Flow Diagram
 
[그림 38] nc_vdma_cnn_write_kernel_disable() 제어 흐름도
5.2.5.17. [SWF-VDMA_CNN-018] nc_vdma_cnn_scan_kernel_disable()
Description	Perform disable of cnns.
Prototype	static Error nc_vdma_cnn_scan_kernel_disable(vdma_cnn_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
[표 40] nc_vdma_cnn_scan_kernel_disable() Description
5.2.5.17.1. Control Flow Diagram
 
[그림 39] nc_vdma_cnn_scan_kernel_disable() 제어 흐름도
5.2.5.18. [SWF-VDMA_CNN-019] nc_vdma_cnn_kernel_register_exception_handler()
Description	Performs registration of IODevice Vector and Exception Handler for IRQ control.
Prototype	static void nc_vdma_cnn_kernel_register_exception_handler(DevTree_Node node, vdma_cnn_kernel_driver_t *instance, uint32_t irq_id, HANDLER irq_handler)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
instance	vdma_cnn_kernel_driver_t*	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number table
irq_iod - IRQ IODevice Vector Handle table
video_mem_info - CMA buffer structure table
write_num_of_tr_reg - cnnw total bit size
write_image_size_reg - cnnw resolution register value
write_stride - cnnw stride
write_frame_size - cnnw frame-size
scan_num_of_tr_reg - cnns total bit size
scan_image_size_reg - cnns resolution register value
scan_stride - cnns stride
scan_frame_size - cnns frame-size
scan_frame_size_per_domain - cnns frame-size of each color domain
scan_input_id - cnns input source id
cnnw_status - status of cnnw
cnns_status - status of cnns
dev_name - device name
irq_id	uint32_t	irq-id
irq_handler	HANDLER	irq-callback-handler
[표 41] nc_vdma_cnn_kernel_register_exception_handler() Description
 
5.2.5.18.1. Control Flow Diagram
 
[그림 40] nc_vdma_cnn_kernel_register_exception_handler() 제어 흐름도
5.2.5.19. [SWF-VDMA_CNN-020] nc_vdma_cnn_write_kernel_exception_handler()
Description	Performs cnnw’s interrupt service routine.
Prototype	static EVENT nc_vdma_cnn_write_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
EVENT	EVENT_HANDLED
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 42] nc_vdma_cnn_write_kernel_exception_handler() Description
5.2.5.19.1. Control Flow Diagram
 
[그림 41] nc_vdma_cnn_write_kernel_exception_handler() 제어 흐름도
5.2.5.20. [SWF-VDMA_CNN-021] nc_vdma_cnn_scan_kernel_exception_handler()
Description	Performs cnns’s interrupt service routine.
Prototype	static EVENT nc_vdma_cnn_scan_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
EVENT	EVENT_HANDLED
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 43] nc_vdma_cnn_scan_kernel_exception_handler() Description
5.2.5.20.1. Control Flow Diagram
 
[그림 42] nc_vdma_cnn_scan_kernel_exception_handler() 제어 흐름도
5.2.5.21. [SWF-VDMA_CNN-022] nc_vdma_cnn_irq_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_vdma_cnn_irq_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or IllegalObjectNumber or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 44] nc_vdma_cnn_irq_kernel_read_command() Description
5.2.5.21.1. Control Flow Diagram
 
[그림 43] nc_vdma_cnn_irq_kernel_read_command() 제어 흐름도
5.2.5.22. [SWF-VDMA_CNN-023] nc_vdma_cnn_kernel_read_command()
Description	Performs an io request for iodevice by calling the ReadIODeviceRegister function from user-space
Prototype	static Error nc_vdma_cnn_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 45] nc_vdma_cnn_kernel_read_command() Description
5.2.5.22.1. Control Flow Diagram
 
[그림 44] nc_vdma_cnn_kernel_read_command() 제어 흐름도
5.2.5.23. [SWF-VDMA_CNN-024] nc_vdma_cnn_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceRegister function from user-space.
Prototype	static Error nc_vdma_cnn_kernel_write_command(IODeviceVector iod, Value command, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-002
Return
Type	Spec. Designation
Error	Success or Failure or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
val	Value	architecture-value
[표 46] nc_vdma_cnn_kernel_write_command() Description
5.2.5.23.1. Control Flow Diagram
 
[그림 45] nc_vdma_cnn_kernel_write_command() 제어 흐름도
5.2.5.24. [SWF-VDMA_CNN-025] nc_vdma_cnn_kernel_probe()
Description	Performs hw resource initialization of vdma-cnn at kernel-boot time.
Prototype	static Error nc_vdma_cnn_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_CNN-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 47] nc_vdma_cnn_kernel_probe() Description
5.2.5.24.1. Control Flow Diagram
 
[그림 46] nc_vdma_cnn_kernel_probe() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-VDMA_H264-001] vdma_h264_driver
vdma_h264_driver 유닛은 User가 VDMA_H264의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 VDMA_H264 초기화, Enable, Disable, Get Resolution이다.
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.1. Defined Parameters
Name	Description	Value
NUM_OF_VDMA_H264_BUS	VDMA H264 Bus Number	1
VDMA_H264_SYSCALL_WR_CMD_INITIALIZE	System call Command Initialize	1
VDMA_H264_SYSCALL_WR_CMD_ENABLE	System call Command Enable	2
VDMA_H264_SYSCALL_WR_CMD_DISABLE	System call Command Disable	3
NC_VDMA_H264_IOCTL_INITIALIZE	IOCTL Command Initialize	0
NC_VDMA_H264_IOCTL_ENABLE	IOCTL Command Enable	1
NC_VDMA_H264_IOCTL_DISABLE	IOCTL Command Disable	2
NC_VDMA_H264_IOCTL_GET_RESOLUTION	IOCTL Command Get Resolution	3
NC_MAX_OF_VDMA_H264_IOCTL	IOCTL Command Max Value	4
[표 4] Defined Parameters
5.1.2. Constraint
N/A
5.1.3. Unit Interface 
5.1.3.1. [SUI-VDMA_H264-001] nc_vdma_h264_probe()
Description	This function is called when the driver module starts up. It requests and initializes system resources required for io control and registers instance handles.
Prototype	static Error nc_vdma_h264_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
driver	nc_node_driver_t *	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 5] nc_vdma_h264_probe() Description
5.1.3.1.1. Control Flow Diagram
 
[그림 6] nc_vdma_h264_probe() 제어 흐름도
5.1.3.2. [SUI-VDMA_H264-002] nc_vdma_h264_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_vdma_h264_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 6] nc_vdma_h264_ioctl() Description
5.1.3.2.1. Control Flow Diagram

 
[그림 7] nc_vdma_h264_ioctl() 제어 흐름도
5.1.3.3. [SUI-VDMA_H264-003] nc_vdma_h264_ioctl_init()
Description	Perform initialization of vdma-h264.
Prototype	static Error nc_vdma_h264_ioctl_init(nc_vdma_h264_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_h264_driver_t *	iod - IODevice Hnalde
res - Resolution Information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 7] nc_vdma_h264_ioctl_init() Description
5.1.3.3.1. Control Flow Diagram
 
[그림 8] nc_vdma_h264_ioctl_init() 제어 흐름도
5.1.3.4. [SUI-VDMA_H264-004] nc_vdma_h264_ioctl_enable()
Description	Enable vdma-h264
Prototype	static Error nc_vdma_h264_ioctl_enable(nc_vdma_h264_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_h264_driver_t *	iod - IODevice Hnalde
res - Resolution Information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 8] nc_vdma_h264_ioctl_enable() Description
5.1.3.4.1. Control Flow Diagram
 
[그림 9] nc_vdma_h264_ioctl_enable() 제어 흐름도
5.1.3.5. [SUI-VDMA_H264-005] nc_vdma_h264_ioctl_disable()
Description	Disable vdma-h264.
Prototype	static Error nc_vdma_h264_ioctl_disable(nc_vdma_h264_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-002
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_h264_driver_t *	iod - IODevice Hnalde
res - Resolution Information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 9] nc_vdma_h264_ioctl_disable() Description 
5.1.3.5.1. Control Flow Diagram
 
[그림 10] nc_vdma_h264_ioctl_disable() 제어 흐름도
5.1.3.6. [SUI-VDMA_H264-006] nc_vdma_h264_ioctl_get_resolution()
Description	Returns resolution information for vdma-h264.
Prototype	static Error nc_vdma_h264_ioctl_get_resolution(nc_vdma_h264_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_vdma_h264_driver_t *	iod - IODevice Hnalde
res - Resolution Information
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 10] nc_vdma_h264_ioctl_get_resolution() Description 
5.1.3.6.1. Control Flow Diagram

 
[그림 11] nc_vdma_h264_ioctl_get_resolution() 제어 흐름도
5.1.4. Unit Function
5.1.4.1. [SWF-VDMA_H264-001] nc_vdma_h264_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_vdma_h264_driver_t *nc_vdma_h264_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
nc_vdma_h264_driver_t *	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 11] nc_vdma_h264_get_instance() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 12] nc_vdma_h264_get_instance() 제어 흐름도
5.2.  [SWU-VDMA_H264-002] vdma_h264_kernel_driver
vdma_h264_kernel_driver 유닛은 커널 부팅 시 VDMA_H264의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 12] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
MAX_PRIO	Max exception priority	511U
MAX_OF_FRAME_NUM_BUF	Max video frame buffer	16U
VIDEO_MEMORY_H264_OUTPUT0	Video memory output	0U
VIDEO_MEMORY_H264_OUTPUT1	Video memory output	1U
VIDEO_MEMORY_H264_OUTPUT2	Video memory output	2U
VIDEO_MEMORY_H264_OUTPUT3	Video memory output	3U
MAX_OF_VIDEO_MEMORY	Max Video memory	4U
SIZE_OF_EXPORTED_VDMA_H264_IOADDR_NAME	IO Address Name Size	27
VDMA_H264_SYSCALL_WR_CMD_INITIALIZE	System Call Command Initialize	1
VDMA_H264_SYSCALL_WR_CMD_ENABLE	System Call Command Enable	2
VDMA_H264_SYSCALL_WR_CMD_DISABLE	System Call Command Disable	3
[표 13] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
N/A
5.2.5. Unit Function
5.2.5.1. [SWF-VDMA_H264-002] nc_vdma_h264_kernel_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline vdma_h264_kernel_driver_t *nc_vdma_h264_kernel_get_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
vdma_h264_kernel_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 14] nc_vdma_h264_kernel_get_instance() Description
5.2.5.1.1. Control Flow Diagram
  
[그림 13] nc_vdma_h264_kernel_get_instance() 제어 흐름도
5.2.5.2. [SWF-VDMA_H264-003] nc_vdma_h264_kernel_get_irq_instance()
Description	Returns the instance handle of the IRQ.
Prototype	static inline vdma_h264_irq_kernel_driver_t *nc_vdma_h264_kernel_get_irq_instance(void)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
vdma_h264_irq_kernel_driver_t*	the-handle
Parameter
Variable Name	Type	Spec. Designation
void	void	void
[표 15] nc_vdma_h264_kernel_get_irq_instance() Description
5.2.5.2.1. Control Flow Diagram
  
[그림 14] nc_vdma_h264_kernel_get_irq_instance() 제어 흐름도
5.2.5.3. [SWF-VDMA_H264-004] nc_vdma_h264_kernel_get_video_memory_name()
Description	Returns the name of the memory-resource corresponding to the entered ID.
Prototype	static inline const char *nc_vdma_h264_kernel_get_video_memory_name(uint32_t id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
const char*	the-name
Parameter
Variable Name	Type	Spec. Designation
id	uint32_t	Video name ID
[표 16] nc_vdma_h264_kernel_get_video_memory_name() Description
5.2.5.3.1. Control Flow Diagram
  
[그림 15] nc_vdma_h264_kernel_get_video_memory_name() 제어 흐름도
5.2.5.4. [SWF-VDMA_H264-005] nc_vdma_h264_get_framesize()
Description	Reads resolution information from hw register, calculates the current frame-size, and returns it.
Prototype	static uint32_t nc_vdma_h264_get_framesize(vdma_h264_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
uint32_t	frame-size
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_h264_kernel_driver_t *	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number
video_mem_info - CMA buffer structure table
cbcr_offset - cbcr offset
status - status-value
[표 17] nc_vdma_h264_get_framesize() Description
5.2.5.4.1. Control Flow Diagram
  
[그림 16] nc_vdma_h264_get_framesize() 제어 흐름도
5.2.5.5. [SWF-VDMA_H264-006] nc_vdma_h264_clear_pending()
Description	Performs IRQ pending clear of the requested status.
Prototype	static void nc_vdma_h264_clear_pending(vdma_h264_kernel_driver_t *instance, uint32_t status)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_h264_kernel_driver_t *	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number
video_mem_info - CMA buffer structure table
cbcr_offset - cbcr offset
status - status-value
status	uint32_t	hw-status-value
[표 18] nc_vdma_h264_clear_pending() Description
5.2.5.5.1. Control Flow Diagram
  
[그림 17] nc_vdma_h264_clear_pending() 제어 흐름도
5.2.5.6. [SWF-VDMA_H264-007] nc_vdma_h264_kernel_initialize()
Description	Perform initialization of vdma-h264.
Prototype	static Error nc_vdma_h264_kernel_initialize(vdma_h264_kernel_driver_t *instance, nc_vdma_h264_kernel_init_param param)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	vdma_h264_kernel_driver_t *	iod - Device IODevice Vector Handle
ioaddr - register base kernel virtual address
irq_num - irq number
video_mem_info - CMA buffer structure table
cbcr_offset - cbcr offset
status - status-value
param	nc_vdma_h264_kernel_init_param	h_size - width
v_size - height
[표 19] nc_vdma_h264_kernel_initialize() Description
5.2.5.6.1. Control Flow Diagram
  
[그림 18] nc_vdma_h264_kernel_initialize() 제어 흐름도
5.2.5.7. [SWF-VDMA_H264-008] nc_vdma_h264_reserve_video_memory()
Description	Performs reservation of continuous memory resources for DMA at kernel boot-time.
Prototype	static Error nc_vdma_h264_reserve_video_memory(DevTree_Node node, const char *name, vdma_h264_video_mem_info_t *video_mem)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success or Failure or ResourceNotAvailable
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	DeviceTree Node
name	const char*	CMA buffer resource name
video_mem	vdma_h264_video_mem_info_t*	name - CMA buffer resource name
phy_base - start physical address of cma buffer
kvirt_base - start kernel virtual address of cma buffer
max_framesize - framesize per each frame
total_size - total size of cma buffer
num_of_buffer - number of buffers
head_index - tail-index for enqueue
tail_index - tail-index for dequeue
frame_number - frame number table
[표 20] nc_vdma_h264_reserve_video_memory() Descriptionc
5.2.5.7.1. Control Flow Diagram
  
[그림 19] nc_vdma_h264_reserve_video_memory() 제어 흐름도
5.2.5.8. [SWF-VDMA_H264-009] nc_vdma_h264_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_vdma_h264_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
EVENT	EVENT_HANDLED
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 21] nc_vdma_h264_kernel_exception_handler() Description
5.2.5.8.1. Control Flow Diagram
 
[그림 20] nc_vdma_h264_kernel_exception_handler() 제어 흐름도
5.2.5.9. [SWF-VDMA_H264-010] nc_vdma_h264_irq_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_vdma_h264_irq_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value *	buffer address of architecture-value
[표 22] nc_vdma_h264_irq_kernel_read_command() Description
5.2.5.9.1. Control Flow Diagram
  
[그림 21] nc_vdma_h264_irq_kernel_read_command() 제어 흐름도
5.2.5.10. [SWF-VDMA_H264-011] nc_vdma_h264_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceStatus function from user-space.
Prototype	static Error nc_vdma_h264_kernel_write_command(IODeviceVector iod, Value command, void *buf, Address len)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Void *	buffer address
len	Address	buffer size
[표 23] nc_vdma_h264_kernel_write_command() Description
5.2.5.10.1. Control Flow Diagram
 
[그림 22] nc_vdma_h264_kernel_write_command() 제어 흐름도
5.2.5.11. [SWF-VDMA_H264-012] nc_vdma_h264_kernel_probe()
Description	Performs hw resource initialization of vdma-h264 at kernel-boot time.
Prototype	static Error nc_vdma_h264_kernel_probe(DevTree_Node node, const char* match_name)
Call Condition	단발적(On demand)
Related Req. ID	SR-SoC-VDMA_H264-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char*	compatible-name of device-tree node
[표 24] nc_vdma_h264_kernel_probe() Description
5.2.5.11.1. Control Flow Diagram
 
[그림 23] nc_vdma_h264_kernel_probe() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1.  [SWU-VM-001] VM_sm
VM_sm은 Voltage monitoring 중 Out of Range가 발생하면 SE에 Fault를 전달한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
DESC_PVT	Descriptor value	1
PVT_SLEEP	Sleep value	200000
VM_TASK_SLEEP	Task Sleep Value	33U * 1000U
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface 
5.1.4.1. [SUI-VM-001] voltage_monitor_task()
Description	Run voltage monitor task.
Prototype	Value voltage_monitor_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-VM-001, SSR-SoC-VM-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Address parameter
[표 5] voltage_monitor_task() Description
5.1.4.1.1. Control Flow Diagram
 
[그림 5] voltage_monitor_task() 제어 흐름도
5.1.5. Unit Function
5.1.5.1. [SWF-VM-001] nc_monitor_voltage()
Description	Monitoring voltage.
Prototype	static void nc_monitor_voltage(nc_voltage_monitor_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-VM-001, SSR-SoC-VM-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_voltage_monitor_sm_t*	common_config - Safety Engine config handle
vm_config - VM initial config
iod - Device IODevice Vector Handle 
descriptor - Device Handling descriptor
[표 6] nc_monitor_voltage() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 6] nc_monitor_voltage() 제어 흐름도
5. 일반 기능 단위 설계(Unit Description)
5.1. [SWU-WDT-001] timer_kernel_driver
timer_kernel_driver 유닛은 커널 부팅 시 WDT의 HW 리소스의 초기화를 수행하고, Interrupt와 IO Function 호출에 대한 처리를 한다.
5.1.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 3] 전역 변수
5.1.2. Defined Parameters
Name	Description	Value
CTRL_IOADDR	Buffer number where the control IO Address is stored.	0
MAX_OF_IOADDR	Max buffer number.	3
SAFETY_CLOCK_CHANNEL	Safety clock channel	7
PRE_DEFINED_PRE_SCALER_COUNT	Scaler Count	2
[표 4] Defined Parameters
5.1.3. Constraint
N/A
5.1.4. Unit Interface
N/A
5.1.5. Unit Function
5.1.5.1. [SWF-WDT-001] nc_timer_watchdog_refresh()
Description	refresh watchdog count.
Prototype	static void nc_timer_watchdog_refresh(timer_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
[표 5] nc_timer_watchdog_refresh() Description
5.1.5.1.1. Control Flow Diagram
 
[그림 7] nc_timer_watchdog_refresh() 제어 흐름도
5.1.5.2. [SWF-WDT-002] nc_timer_stop()
Description	Stop timer
Prototype	static void nc_timer_stop(timer_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
[표 6] nc_timer_stop() Description
5.1.5.2.1. Control Flow Diagram
 
[그림 8] nc_timer_stop() 제어 흐름도
5.1.5.3. [SWF-WDT-003] nc_timer_run()
Description	Run timer
Prototype	static Error nc_timer_run(timer_kernel_driver_t *instance, uint32_t is_period)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
is_period	uint32_t	period mode enable or disable
[표 7] nc_timer_run() Description
5.1.5.3.1. Control Flow Diagram
 
[그림 9] nc_timer_run() 제어 흐름도
5.1.5.4. [SWF-WDT-004] nc_timer_set_watchdog_trigger()
Description	Set watchdog timer
Prototype	static Error nc_timer_set_watchdog_trigger(timer_kernel_driver_t *instance, uint32_t trigger_value)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
trigger_value	uint32_t	watchdog trigger value
[표 8] nc_timer_set_watchdog_trigger() Description
5.1.5.4.1. Control Flow Diagram
 
[그림 10] nc_timer_set_watchdog_trigger() 제어 흐름도
5.1.5.5. [SWF-WDT-005] nc_timer_set_over_or_under_time()
Description	Set Timer mode and param
Prototype	static Error nc_timer_set_over_or_under_time(timer_kernel_driver_t *instance, uint64_t ns, Boolean is_overtime)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
ns	uint64_t	under ns time
is_overtime	Boolean	TRUE is overtime and FALSE is under time
[표 9] nc_timer_set_over_or_under_time() Description
5.1.5.5.1. Control Flow Diagram
 
[그림 11] nc_timer_set_over_or_under_time() 제어 흐름도
5.1.5.6. [SWF-WDT-006] nc_timer_set_period()
Description	Set Timer period
Prototype	static Error nc_timer_set_period(timer_kernel_driver_t *instance, uint64_t ns)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
ns	uint64_t	period ns time
[표 10] nc_timer_set_period() Description
5.1.5.6.1. Control Flow Diagram
 
[그림 12] nc_timer_set_period() 제어 흐름도
5.1.5.7. [SWF-WDT-007] nc_timer_trigger_safety_fault()
Description	Trigger Safety Fault IF Timer failed to clear
Prototype	static void nc_timer_trigger_safety_fault(timer_kernel_driver_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	timer_kernel_driver_t *	kernel timer instance
[표 11] nc_timer_trigger_safety_fault() Description
5.1.5.7.1. Control Flow Diagram
 
[그림 13] nc_timer_trigger_safety_fault() 제어 흐름도
5.1.5.8. [SWF-WDT-008] nc_timer_kernel_probe()
Description	Performs hw resource initialization of timer at kernel-boot time.
Prototype	static Error nc_timer_kernel_probe(DevTree_Node node, const char *match_name)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	device-tree node
match_name	const char *	compatible-name of device-tree node
[표 12] nc_timer_kernel_probe() Description

5.1.5.8.1. Control Flow Diagram
 
[그림 14] nc_timer_kernel_probe() 제어 흐름도
5.1.5.9. [SWF-WDT-009] nc_timer_kernel_write_command()
Description	Performs an io request for iodevice by calling the WriteIODeviceRegister function from user-space.
Prototype	static Error nc_timer_kernel_write_command(IODeviceVector iod, Value command, Value val)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
val	Value	architecture-value
[표 13] nc_timer_kernel_write_command() Description
5.1.5.9.1. Control Flow Diagram
 
[그림 15] nc_timer_kernel_write_command() 제어 흐름도
5.1.5.10. [SWF-WDT-010] nc_timer_kernel_read_command()
Description	Performs an io request for irq-iodevice by calling the ReadIODeviceRegister function from user-space.
Prototype	static Error nc_timer_kernel_read_command(IODeviceVector iod, Value command, Value *buf)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or IllegalRegisterNumber
Parameter
Variable Name	Type	Spec. Designation
iod	IODeviceVector	IODevice Vector Handle
command	Value	command number
buf	Value*	buffer address of architecture-value
[표 14] nc_timer_kernel_read_command() Description
5.1.5.10.1. Control Flow Diagram
 
[그림 16] nc_timer_kernel_read_command() 제어 흐름도
5.1.5.11. [SWF-WDT-011] nc_timer_kernel_exception_handler()
Description	Performs interrupt service routine.
Prototype	static EVENT nc_timer_kernel_exception_handler(XFRAME *xf, Address id)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
EVENT	Event Handler
Parameter
Variable Name	Type	Spec. Designation
xf	XFRAME*	extended exception frame
id	Address	callback parameter
[표 15] nc_timer_kernel_exception_handler() Description
5.1.5.11.1. Control Flow Diagram
 
[그림 17] nc_timer_kernel_exception_handler() 제어 흐름도
5.1.5.12. [SWF-WDT-012] nc_timer_kernel_get_instance()
Description	Get Timer instance.
Prototype	static inline timer_kernel_driver_t *nc_timer_kernel_get_instance(uint32_t channel)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
timer_kernel_driver_t*	Timer instance
Parameter
Variable Name	Type	Spec. Designation
channel	uint32_t	timer channel
[표 16] nc_timer_kernel_get_instance() Description
5.1.5.12.1. Control Flow Diagram
 
[그림 18] nc_timer_kernel_get_instance() 제어 흐름도
5.2. [SWU-WDT-002] timer_driver
timer_driver 유닛은 User가 WDT의 기능을 사용할 수 있도록 Function이 정의되어 있다.
수행되는 기능으로는 WDT 초기화, Timer Run/Stop, Watchdog Count Refresh 이다.
5.2.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 17] 전역 변수
5.2.2. Defined Parameters
Name	Description	Value
SYSCALL_DATA_PERIOD	System call command Period	0
SYSCALL_DATA_OVER_TIME	System call command Over Time	1
SYSCALL_DATA_UNDER_TIME	System call command Under Time	2
SYSCALL_DATA_WATCHDOG_TRIGGER	System call command WDT Trigger	3
NUM_OF_SYSCALL_DATA_SET	System call command Data Set	4
[표 18] Defined Parameters
5.2.3. Constraint
N/A
5.2.4. Unit Interface 
5.2.4.1. [SUI-WDT-001] nc_timer_ioctl_get_interrupt_receiver()
Description	Receive for interrupts from the timer.
Prototype	static Error nc_timer_ioctl_get_interrupt_receiver(nc_timer_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
param	Address	parameter
param_len	size_t	parameter length
[표 19] nc_timer_ioctl_get_interrupt_receiver() Description 
5.2.4.1.1. Control Flow Diagram
 
[그림 19] nc_timer_ioctl_get_interrupt_receiver() 제어 흐름도
5.2.4.2. [SUI-WDT-002] nc_timer_ioctl_refresh_watchdog()
Description	Refreshes the WDT time.
Prototype	static Error nc_timer_ioctl_refresh_watchdog(nc_timer_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
param	Address	parameter
param_len	size_t	parameter length
[표 20] nc_timer_ioctl_refresh_watchdog() Descriptio
5.2.4.2.1. Control Flow Diagram
 
[그림 20] nc_timer_ioctl_refresh_watchdog() 제어 흐름도
5.2.4.3. [SUI-WDT-003] nc_timer_ioctl_get_status()
Description	Get Timer io status.
Prototype	static Error nc_timer_ioctl_get_status(nc_timer_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
param	Address	parameter
param_len	size_t	parameter length
[표 21] nc_timer_ioctl_get_status() Descriptio
5.2.4.3.1. Control Flow Diagram
 
[그림 21] nc_timer_ioctl_get_status() 제어 흐름도
5.2.4.4. [SUI-WDT-004] nc_timer_ioctl_stop()
Description	Stop Timer io.
Prototype	static Error nc_timer_ioctl_stop(nc_timer_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
param	Address	parameter
param_len	size_t	parameter length
[표 22] nc_timer_ioctl_stop() Descriptio
5.2.4.4.1. Control Flow Diagram
 
[그림 22] nc_timer_ioctl_stop() 제어 흐름도
5.2.4.5. [SUI-WDT-005] nc_timer_ioctl_run()
Description	Run Timer io.
Prototype	static Error nc_timer_ioctl_run(nc_timer_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or Failure or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
param	Address	parameter
param_len	size_t	parameter length
[표 23] nc_timer_ioctl_run() Descriptio
5.2.4.5.1. Control Flow Diagram
 
[그림 23] nc_timer_ioctl_run() 제어 흐름도
5.2.4.6. [SUI-WDT-006] nc_timer_ioctl_initialize()
Description	Initialize Timer io.
Prototype	static Error nc_timer_ioctl_initialize(nc_timer_driver_t *instance, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or IllegalLength
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
param	Address	parameter
param_len	size_t	parameter length
[표 24] nc_timer_ioctl_initialize() Descriptio
5.2.4.6.1. Control Flow Diagram
 
[그림 24] nc_timer_ioctl_initialize() 제어 흐름도
5.2.4.7. [SUI-WDT-007] nc_timer_ioctl()
Description	This function is the porting layer of iotctl and performs routing to the internal interface function corresponding to the input command.
Prototype	static Error nc_timer_ioctl(Address handle, Value command, Address param, size_t param_len)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
handle	Address	address-of-driver-instance-handle
command	Value	command-value
param	Address	io-control-parameter-buffer
param_len	size_t	buffer-length
[표 25] nc_timer_ioctl() Descriptio
5.2.4.7.1. Control Flow Diagram
 
[그림 25] nc_timer_ioctl() 제어 흐름도
5.2.4.8. [SUI-WDT-008] nc_timer_probe()
Description	Initialize and register the Timer.
Prototype	static Error nc_timer_probe(DevTree_Node node, nc_node_driver_t *driver)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success
Parameter
Variable Name	Type	Spec. Designation
node	DevTree_Node	DeviceTree Node
driver	nc_node_driver_t*	name - driver name
compatible - device tree compatible
startup function
operations - operations of driver
handles - instance handle pointers of driver
lockers - operation lockers of driver
count_of_bus - num of instance handles
num_of_bus - max num of channels
opend_mask - 'opened' bus masking
descriptors - driver descriptor table
[표 26] nc_timer_probe() Descriptio
5.2.4.8.1. Control Flow Diagram
 
[그림 26] nc_timer_probe() 제어 흐름도
5.2.5. Unit Function 
5.2.5.1. [SWF-WDT-013] nc_timer_ioctl_init()
Description	Initialize Timer io.
Prototype	static Error nc_timer_ioctl_init(nc_timer_driver_t *instance, nc_timer_init_param_t *init_param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_timer_driver_t*	iod - IODevice Handle
is_period_mode - period or one-shot mode flag
is_init_done - initialization done flag
init_param	nc_timer_init_param_t*	period_ns - timer period value in nano seconds
is_period_mode - period or one-shot mode flag
is_watchdog_enable - watchdog enable flag
[표 27] nc_timer_ioctl_init() Descriptio
5.2.5.1.1. Control Flow Diagram
 
[그림 27] nc_timer_ioctl_init() 제어 흐름도
5.2.5.2. [SWF-WDT-014] nc_timer_get_instance()
Description	Returns the instance handle of the driver.
Prototype	static inline nc_timer_driver_t *nc_timer_get_instance(uint32_t ch)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
nc_timer_driver_t*	Timer channel handler
Parameter
Variable Name	Type	Spec. Designation
ch	uint32_t	channel-number
[표 28] nc_timer_get_instance() Descriptio
5.2.5.2.1. Control Flow Diagram
 
[그림 28] nc_timer_get_instance() 제어 흐름도
5.3. [SWU-WDT-003] WDT_sm
WDT_sm은 Watchdog을 Enable 한 뒤 Refresh Count를 갱신을 한다.
Refresh Count가 갱신되지 않을 경우 SE에 Fault를 전달한다.
5.3.1. 전역 변수(Global Variable)
Variable Name	Type	Range	Initial Value	Description
N/A	N/A	N/A	N/A	N/A
[표 29] 전역 변수
5.3.2. Defined Parameters
Name	Description	Value
SE_WDT_FAULT_MASK	Fault Mask	17
SE_WDT_OFFSET	WDT Offset	0x4100
[표 30] Defined Parameters
5.3.3. Constraint
N/A
5.3.4. Unit Interface 
5.3.4.1. [SUI-WDT-009] watchdog_timer_check_task()
Description	Check WDT task.
Prototype	Value watchdog_timer_check_task(Address param)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Value	0
Parameter
Variable Name	Type	Spec. Designation
param	Address	Task Argument
c[표 31] watchdog_timer_check_task() Description
5.3.4.1.1. Control Flow Diagram
 
[그림 29] watchdog_timer_check_task() 제어 흐름도
5.3.5. Unit Function 
5.3.5.1. [SWF-WDT-015] nc_monitor_watchdog_timer()
Description	Monitoring watchdog timer.
Prototype	static Error nc_monitor_watchdog_timer(nc_watchdog_timer_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-002
Return
Type	Spec. Designation
Error	Success or Failure
Parameter
Variable Name	Type	Spec. Designation
instance	nc_watchdog_timer_sm_t*	common_config - Safety Engine config handle
wdt_config - WDT timer initial config handle
descriptor - timer driver descriptor
[표 32] nc_monitor_watchdog_timer() Description
5.3.5.1.1. Control Flow Diagram
 
[그림 30] nc_monitor_watchdog_timer() 제어 흐름도
5.3.5.2. [SWF-WDT-016] nc_enable_watchdog_timer_fault()
Description	Enable SafetyEngine watchdog timer fault.
Prototype	static void nc_enable_watchdog_timer_fault(nc_watchdog_timer_sm_t *instance)
Call Condition	단발적(On demand)
Related Req. ID	SSR-SoC-WDT-001
Return
Type	Spec. Designation
void	void
Parameter
Variable Name	Type	Spec. Designation
instance	nc_watchdog_timer_sm_t*	common_config - Safety Engine config handle
wdt_config - WDT timer initial config handle
descriptor - timer driver descriptor
[표 33] nc_enable_watchdog_timer_fault() Description
5.3.5.2.1. Control Flow Diagram
 
[그림 31] nc_enable_watchdog_timer_fault() 제어 흐름도